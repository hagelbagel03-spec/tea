{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.hasBinary = hasBinary;\n  exports.isBinary = isBinary;\n  const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n  const isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n  };\n  const toString = Object.prototype.toString;\n  const withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && toString.call(Blob) === \"[object BlobConstructor]\";\n  const withNativeFile = typeof File === \"function\" || typeof File !== \"undefined\" && toString.call(File) === \"[object FileConstructor]\";\n  /**\n   * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n   *\n   * @private\n   */\n  function isBinary(obj) {\n    return withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File;\n  }\n  function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n      return false;\n    }\n    if (Array.isArray(obj)) {\n      for (let i = 0, l = obj.length; i < l; i++) {\n        if (hasBinary(obj[i])) {\n          return true;\n        }\n      }\n      return false;\n    }\n    if (isBinary(obj)) {\n      return true;\n    }\n    if (obj.toJSON && typeof obj.toJSON === \"function\" && arguments.length === 1) {\n      return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n        return true;\n      }\n    }\n    return false;\n  }\n});","lineCount":47,"map":[[7,2,1,0],[7,8,1,6,"withNativeArrayBuffer"],[7,29,1,27],[7,32,1,30],[7,39,1,37,"ArrayBuffer"],[7,50,1,48],[7,55,1,53],[7,65,1,63],[8,2,2,0],[8,8,2,6,"isView"],[8,14,2,12],[8,17,2,16,"obj"],[8,20,2,19],[8,24,2,24],[9,4,3,4],[9,11,3,11],[9,18,3,18,"ArrayBuffer"],[9,29,3,29],[9,30,3,30,"isView"],[9,36,3,36],[9,41,3,41],[9,51,3,51],[9,54,4,10,"ArrayBuffer"],[9,65,4,21],[9,66,4,22,"isView"],[9,72,4,28],[9,73,4,29,"obj"],[9,76,4,32],[9,77,4,33],[9,80,5,10,"obj"],[9,83,5,13],[9,84,5,14,"buffer"],[9,90,5,20],[9,102,5,32,"ArrayBuffer"],[9,113,5,43],[10,2,6,0],[10,3,6,1],[11,2,7,0],[11,8,7,6,"toString"],[11,16,7,14],[11,19,7,17,"Object"],[11,25,7,23],[11,26,7,24,"prototype"],[11,35,7,33],[11,36,7,34,"toString"],[11,44,7,42],[12,2,8,0],[12,8,8,6,"withNativeBlob"],[12,22,8,20],[12,25,8,23],[12,32,8,30,"Blob"],[12,36,8,34],[12,41,8,39],[12,51,8,49],[12,55,9,5],[12,62,9,12,"Blob"],[12,66,9,16],[12,71,9,21],[12,82,9,32],[12,86,10,8,"toString"],[12,94,10,16],[12,95,10,17,"call"],[12,99,10,21],[12,100,10,22,"Blob"],[12,104,10,26],[12,105,10,27],[12,110,10,32],[12,136,10,59],[13,2,11,0],[13,8,11,6,"withNativeFile"],[13,22,11,20],[13,25,11,23],[13,32,11,30,"File"],[13,36,11,34],[13,41,11,39],[13,51,11,49],[13,55,12,5],[13,62,12,12,"File"],[13,66,12,16],[13,71,12,21],[13,82,12,32],[13,86,13,8,"toString"],[13,94,13,16],[13,95,13,17,"call"],[13,99,13,21],[13,100,13,22,"File"],[13,104,13,26],[13,105,13,27],[13,110,13,32],[13,136,13,59],[14,2,14,0],[15,0,15,0],[16,0,16,0],[17,0,17,0],[18,0,18,0],[19,2,19,7],[19,11,19,16,"isBinary"],[19,19,19,24,"isBinary"],[19,20,19,25,"obj"],[19,23,19,28],[19,25,19,30],[20,4,20,4],[20,11,20,13,"withNativeArrayBuffer"],[20,32,20,34],[20,37,20,39,"obj"],[20,40,20,42],[20,52,20,54,"ArrayBuffer"],[20,63,20,65],[20,67,20,69,"isView"],[20,73,20,75],[20,74,20,76,"obj"],[20,77,20,79],[20,78,20,80],[20,79,20,81],[20,83,21,9,"withNativeBlob"],[20,97,21,23],[20,101,21,27,"obj"],[20,104,21,30],[20,116,21,42,"Blob"],[20,120,21,47],[20,124,22,9,"withNativeFile"],[20,138,22,23],[20,142,22,27,"obj"],[20,145,22,30],[20,157,22,42,"File"],[20,161,22,47],[21,2,23,0],[22,2,24,7],[22,11,24,16,"hasBinary"],[22,20,24,25,"hasBinary"],[22,21,24,26,"obj"],[22,24,24,29],[22,26,24,31,"toJSON"],[22,32,24,37],[22,34,24,39],[23,4,25,4],[23,8,25,8],[23,9,25,9,"obj"],[23,12,25,12],[23,16,25,16],[23,23,25,23,"obj"],[23,26,25,26],[23,31,25,31],[23,39,25,39],[23,41,25,41],[24,6,26,8],[24,13,26,15],[24,18,26,20],[25,4,27,4],[26,4,28,4],[26,8,28,8,"Array"],[26,13,28,13],[26,14,28,14,"isArray"],[26,21,28,21],[26,22,28,22,"obj"],[26,25,28,25],[26,26,28,26],[26,28,28,28],[27,6,29,8],[27,11,29,13],[27,15,29,17,"i"],[27,16,29,18],[27,19,29,21],[27,20,29,22],[27,22,29,24,"l"],[27,23,29,25],[27,26,29,28,"obj"],[27,29,29,31],[27,30,29,32,"length"],[27,36,29,38],[27,38,29,40,"i"],[27,39,29,41],[27,42,29,44,"l"],[27,43,29,45],[27,45,29,47,"i"],[27,46,29,48],[27,48,29,50],[27,50,29,52],[28,8,30,12],[28,12,30,16,"hasBinary"],[28,21,30,25],[28,22,30,26,"obj"],[28,25,30,29],[28,26,30,30,"i"],[28,27,30,31],[28,28,30,32],[28,29,30,33],[28,31,30,35],[29,10,31,16],[29,17,31,23],[29,21,31,27],[30,8,32,12],[31,6,33,8],[32,6,34,8],[32,13,34,15],[32,18,34,20],[33,4,35,4],[34,4,36,4],[34,8,36,8,"isBinary"],[34,16,36,16],[34,17,36,17,"obj"],[34,20,36,20],[34,21,36,21],[34,23,36,23],[35,6,37,8],[35,13,37,15],[35,17,37,19],[36,4,38,4],[37,4,39,4],[37,8,39,8,"obj"],[37,11,39,11],[37,12,39,12,"toJSON"],[37,18,39,18],[37,22,40,8],[37,29,40,15,"obj"],[37,32,40,18],[37,33,40,19,"toJSON"],[37,39,40,25],[37,44,40,30],[37,54,40,40],[37,58,41,8,"arguments"],[37,67,41,17],[37,68,41,18,"length"],[37,74,41,24],[37,79,41,29],[37,80,41,30],[37,82,41,32],[38,6,42,8],[38,13,42,15,"hasBinary"],[38,22,42,24],[38,23,42,25,"obj"],[38,26,42,28],[38,27,42,29,"toJSON"],[38,33,42,35],[38,34,42,36],[38,35,42,37],[38,37,42,39],[38,41,42,43],[38,42,42,44],[39,4,43,4],[40,4,44,4],[40,9,44,9],[40,15,44,15,"key"],[40,18,44,18],[40,22,44,22,"obj"],[40,25,44,25],[40,27,44,27],[41,6,45,8],[41,10,45,12,"Object"],[41,16,45,18],[41,17,45,19,"prototype"],[41,26,45,28],[41,27,45,29,"hasOwnProperty"],[41,41,45,43],[41,42,45,44,"call"],[41,46,45,48],[41,47,45,49,"obj"],[41,50,45,52],[41,52,45,54,"key"],[41,55,45,57],[41,56,45,58],[41,60,45,62,"hasBinary"],[41,69,45,71],[41,70,45,72,"obj"],[41,73,45,75],[41,74,45,76,"key"],[41,77,45,79],[41,78,45,80],[41,79,45,81],[41,81,45,83],[42,8,46,12],[42,15,46,19],[42,19,46,23],[43,6,47,8],[44,4,48,4],[45,4,49,4],[45,11,49,11],[45,16,49,16],[46,2,50,0],[47,0,50,1],[47,3]],"functionMap":{"names":["<global>","isView","isBinary","hasBinary"],"mappings":"AAA;eCC;CDI;OEa;CFI;OGC;CH0B"}},"type":"js/module"}]}