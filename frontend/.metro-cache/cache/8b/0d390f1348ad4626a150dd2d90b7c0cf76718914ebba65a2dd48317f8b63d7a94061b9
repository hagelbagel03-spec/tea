{"dependencies":[{"name":"./polling.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"Pl+iaQVK3G0OaUHovkJUbWBEusk=","exportNames":["*"]}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":55,"index":95}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"]}},{"name":"../util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":96},"end":{"line":3,"column":57,"index":153}}],"key":"kanFP5HUYYYoVhDf3d7saim1ZXY=","exportNames":["*"]}},{"name":"../globals.node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":154},"end":{"line":4,"column":66,"index":220}}],"key":"RPWURBgga4vfm2ZRigByneogh6w=","exportNames":["*"]}},{"name":"../contrib/has-cors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":221},"end":{"line":5,"column":49,"index":270}}],"key":"tkKN50cPurXnsygiXMgDfFY8SZk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.XHR = exports.Request = exports.BaseXHR = void 0;\n  var _polling = require(_dependencyMap[0], \"./polling.js\");\n  var _componentEmitter = require(_dependencyMap[1], \"@socket.io/component-emitter\");\n  var _util = require(_dependencyMap[2], \"../util.js\");\n  var _globalsNode = require(_dependencyMap[3], \"../globals.node.js\");\n  var _hasCors = require(_dependencyMap[4], \"../contrib/has-cors.js\");\n  function empty() {}\n  class BaseXHR extends _polling.Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n      super(opts);\n      if (typeof location !== \"undefined\") {\n        const isSSL = \"https:\" === location.protocol;\n        let port = location.port;\n        // some user agents have empty `location.port`\n        if (!port) {\n          port = isSSL ? \"443\" : \"80\";\n        }\n        this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n      const req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", (xhrStatus, context) => {\n        this.onError(\"xhr post error\", xhrStatus, context);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n      const req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", (xhrStatus, context) => {\n        this.onError(\"xhr poll error\", xhrStatus, context);\n      });\n      this.pollXhr = req;\n    }\n  }\n  exports.BaseXHR = BaseXHR;\n  class Request extends _componentEmitter.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n      super();\n      this.createRequest = createRequest;\n      (0, _util.installTimerFunctions)(this, opts);\n      this._opts = opts;\n      this._method = opts.method || \"GET\";\n      this._uri = uri;\n      this._data = undefined !== opts.data ? opts.data : null;\n      this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n      var _a;\n      const opts = (0, _util.pick)(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this._opts.xd;\n      const xhr = this._xhr = this.createRequest(opts);\n      try {\n        xhr.open(this._method, this._uri, true);\n        try {\n          if (this._opts.extraHeaders) {\n            // @ts-ignore\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n            for (let i in this._opts.extraHeaders) {\n              if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n        if (\"POST\" === this._method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {}\n        (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n        // ie6 check\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this._opts.withCredentials;\n        }\n        if (this._opts.requestTimeout) {\n          xhr.timeout = this._opts.requestTimeout;\n        }\n        xhr.onreadystatechange = () => {\n          var _a;\n          if (xhr.readyState === 3) {\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n            // @ts-ignore\n            xhr.getResponseHeader(\"set-cookie\"));\n          }\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this._onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            this.setTimeoutFn(() => {\n              this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n        xhr.send(this._data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(() => {\n          this._onError(e);\n        }, 0);\n        return;\n      }\n      if (typeof document !== \"undefined\") {\n        this._index = Request.requestsCount++;\n        Request.requests[this._index] = this;\n      }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n      this.emitReserved(\"error\", err, this._xhr);\n      this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n      if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n        return;\n      }\n      this._xhr.onreadystatechange = empty;\n      if (fromError) {\n        try {\n          this._xhr.abort();\n        } catch (e) {}\n      }\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this._index];\n      }\n      this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n      const data = this._xhr.responseText;\n      if (data !== null) {\n        this.emitReserved(\"data\", data);\n        this.emitReserved(\"success\");\n        this._cleanup();\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n      this._cleanup();\n    }\n  }\n  exports.Request = Request;\n  Request.requestsCount = 0;\n  Request.requests = {};\n  /**\n   * Aborts pending requests when unloading the window. This is needed to prevent\n   * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n   * emitted.\n   */\n  if (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n      // @ts-ignore\n      attachEvent(\"onunload\", unloadHandler);\n    } else if (typeof addEventListener === \"function\") {\n      const terminationEvent = \"onpagehide\" in _globalsNode.globalThisShim ? \"pagehide\" : \"unload\";\n      addEventListener(terminationEvent, unloadHandler, false);\n    }\n  }\n  function unloadHandler() {\n    for (let i in Request.requests) {\n      if (Request.requests.hasOwnProperty(i)) {\n        Request.requests[i].abort();\n      }\n    }\n  }\n  const hasXHR2 = function () {\n    const xhr = newRequest({\n      xdomain: false\n    });\n    return xhr && xhr.responseType !== null;\n  }();\n  /**\n   * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n   *\n   * Usage: browser\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   */\n  class XHR extends BaseXHR {\n    constructor(opts) {\n      super(opts);\n      const forceBase64 = opts && opts.forceBase64;\n      this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n      Object.assign(opts, {\n        xd: this.xd\n      }, this.opts);\n      return new Request(newRequest, this.uri(), opts);\n    }\n  }\n  exports.XHR = XHR;\n  function newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n      if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _hasCors.hasCORS)) {\n        return new XMLHttpRequest();\n      }\n    } catch (e) {}\n    if (!xdomain) {\n      try {\n        return new _globalsNode.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n      } catch (e) {}\n    }\n  }\n});","lineCount":269,"map":[[6,2,1,0],[6,6,1,0,"_polling"],[6,14,1,0],[6,17,1,0,"require"],[6,24,1,0],[6,25,1,0,"_dependencyMap"],[6,39,1,0],[7,2,2,0],[7,6,2,0,"_componentEmitter"],[7,23,2,0],[7,26,2,0,"require"],[7,33,2,0],[7,34,2,0,"_dependencyMap"],[7,48,2,0],[8,2,3,0],[8,6,3,0,"_util"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"_globalsNode"],[9,18,4,0],[9,21,4,0,"require"],[9,28,4,0],[9,29,4,0,"_dependencyMap"],[9,43,4,0],[10,2,5,0],[10,6,5,0,"_hasCors"],[10,14,5,0],[10,17,5,0,"require"],[10,24,5,0],[10,25,5,0,"_dependencyMap"],[10,39,5,0],[11,2,6,0],[11,11,6,9,"empty"],[11,16,6,14,"empty"],[11,17,6,14],[11,19,6,17],[11,20,6,19],[12,2,7,7],[12,8,7,13,"BaseXHR"],[12,15,7,20],[12,24,7,29,"Polling"],[12,40,7,36],[12,41,7,37],[13,4,8,4],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,4,14,4,"constructor"],[19,15,14,15,"constructor"],[19,16,14,16,"opts"],[19,20,14,20],[19,22,14,22],[20,6,15,8],[20,11,15,13],[20,12,15,14,"opts"],[20,16,15,18],[20,17,15,19],[21,6,16,8],[21,10,16,12],[21,17,16,19,"location"],[21,25,16,27],[21,30,16,32],[21,41,16,43],[21,43,16,45],[22,8,17,12],[22,14,17,18,"isSSL"],[22,19,17,23],[22,22,17,26],[22,30,17,34],[22,35,17,39,"location"],[22,43,17,47],[22,44,17,48,"protocol"],[22,52,17,56],[23,8,18,12],[23,12,18,16,"port"],[23,16,18,20],[23,19,18,23,"location"],[23,27,18,31],[23,28,18,32,"port"],[23,32,18,36],[24,8,19,12],[25,8,20,12],[25,12,20,16],[25,13,20,17,"port"],[25,17,20,21],[25,19,20,23],[26,10,21,16,"port"],[26,14,21,20],[26,17,21,23,"isSSL"],[26,22,21,28],[26,25,21,31],[26,30,21,36],[26,33,21,39],[26,37,21,43],[27,8,22,12],[28,8,23,12],[28,12,23,16],[28,13,23,17,"xd"],[28,15,23,19],[28,18,24,17],[28,25,24,24,"location"],[28,33,24,32],[28,38,24,37],[28,49,24,48],[28,53,25,20,"opts"],[28,57,25,24],[28,58,25,25,"hostname"],[28,66,25,33],[28,71,25,38,"location"],[28,79,25,46],[28,80,25,47,"hostname"],[28,88,25,55],[28,92,26,20,"port"],[28,96,26,24],[28,101,26,29,"opts"],[28,105,26,33],[28,106,26,34,"port"],[28,110,26,38],[29,6,27,8],[30,4,28,4],[31,4,29,4],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,4,36,4,"doWrite"],[38,11,36,11,"doWrite"],[38,12,36,12,"data"],[38,16,36,16],[38,18,36,18,"fn"],[38,20,36,20],[38,22,36,22],[39,6,37,8],[39,12,37,14,"req"],[39,15,37,17],[39,18,37,20],[39,22,37,24],[39,23,37,25,"request"],[39,30,37,32],[39,31,37,33],[40,8,38,12,"method"],[40,14,38,18],[40,16,38,20],[40,22,38,26],[41,8,39,12,"data"],[41,12,39,16],[41,14,39,18,"data"],[42,6,40,8],[42,7,40,9],[42,8,40,10],[43,6,41,8,"req"],[43,9,41,11],[43,10,41,12,"on"],[43,12,41,14],[43,13,41,15],[43,22,41,24],[43,24,41,26,"fn"],[43,26,41,28],[43,27,41,29],[44,6,42,8,"req"],[44,9,42,11],[44,10,42,12,"on"],[44,12,42,14],[44,13,42,15],[44,20,42,22],[44,22,42,24],[44,23,42,25,"xhrStatus"],[44,32,42,34],[44,34,42,36,"context"],[44,41,42,43],[44,46,42,48],[45,8,43,12],[45,12,43,16],[45,13,43,17,"onError"],[45,20,43,24],[45,21,43,25],[45,37,43,41],[45,39,43,43,"xhrStatus"],[45,48,43,52],[45,50,43,54,"context"],[45,57,43,61],[45,58,43,62],[46,6,44,8],[46,7,44,9],[46,8,44,10],[47,4,45,4],[48,4,46,4],[49,0,47,0],[50,0,48,0],[51,0,49,0],[52,0,50,0],[53,4,51,4,"doPoll"],[53,10,51,10,"doPoll"],[53,11,51,10],[53,13,51,13],[54,6,52,8],[54,12,52,14,"req"],[54,15,52,17],[54,18,52,20],[54,22,52,24],[54,23,52,25,"request"],[54,30,52,32],[54,31,52,33],[54,32,52,34],[55,6,53,8,"req"],[55,9,53,11],[55,10,53,12,"on"],[55,12,53,14],[55,13,53,15],[55,19,53,21],[55,21,53,23],[55,25,53,27],[55,26,53,28,"onData"],[55,32,53,34],[55,33,53,35,"bind"],[55,37,53,39],[55,38,53,40],[55,42,53,44],[55,43,53,45],[55,44,53,46],[56,6,54,8,"req"],[56,9,54,11],[56,10,54,12,"on"],[56,12,54,14],[56,13,54,15],[56,20,54,22],[56,22,54,24],[56,23,54,25,"xhrStatus"],[56,32,54,34],[56,34,54,36,"context"],[56,41,54,43],[56,46,54,48],[57,8,55,12],[57,12,55,16],[57,13,55,17,"onError"],[57,20,55,24],[57,21,55,25],[57,37,55,41],[57,39,55,43,"xhrStatus"],[57,48,55,52],[57,50,55,54,"context"],[57,57,55,61],[57,58,55,62],[58,6,56,8],[58,7,56,9],[58,8,56,10],[59,6,57,8],[59,10,57,12],[59,11,57,13,"pollXhr"],[59,18,57,20],[59,21,57,23,"req"],[59,24,57,26],[60,4,58,4],[61,2,59,0],[62,2,59,1,"exports"],[62,9,59,1],[62,10,59,1,"BaseXHR"],[62,17,59,1],[62,20,59,1,"BaseXHR"],[62,27,59,1],[63,2,60,7],[63,8,60,13,"Request"],[63,15,60,20],[63,24,60,29,"Emitter"],[63,49,60,36],[63,50,60,37],[64,4,61,4],[65,0,62,0],[66,0,63,0],[67,0,64,0],[68,0,65,0],[69,0,66,0],[70,4,67,4,"constructor"],[70,15,67,15,"constructor"],[70,16,67,16,"createRequest"],[70,29,67,29],[70,31,67,31,"uri"],[70,34,67,34],[70,36,67,36,"opts"],[70,40,67,40],[70,42,67,42],[71,6,68,8],[71,11,68,13],[71,12,68,14],[71,13,68,15],[72,6,69,8],[72,10,69,12],[72,11,69,13,"createRequest"],[72,24,69,26],[72,27,69,29,"createRequest"],[72,40,69,42],[73,6,70,8],[73,10,70,8,"installTimerFunctions"],[73,37,70,29],[73,39,70,30],[73,43,70,34],[73,45,70,36,"opts"],[73,49,70,40],[73,50,70,41],[74,6,71,8],[74,10,71,12],[74,11,71,13,"_opts"],[74,16,71,18],[74,19,71,21,"opts"],[74,23,71,25],[75,6,72,8],[75,10,72,12],[75,11,72,13,"_method"],[75,18,72,20],[75,21,72,23,"opts"],[75,25,72,27],[75,26,72,28,"method"],[75,32,72,34],[75,36,72,38],[75,41,72,43],[76,6,73,8],[76,10,73,12],[76,11,73,13,"_uri"],[76,15,73,17],[76,18,73,20,"uri"],[76,21,73,23],[77,6,74,8],[77,10,74,12],[77,11,74,13,"_data"],[77,16,74,18],[77,19,74,21,"undefined"],[77,28,74,30],[77,33,74,35,"opts"],[77,37,74,39],[77,38,74,40,"data"],[77,42,74,44],[77,45,74,47,"opts"],[77,49,74,51],[77,50,74,52,"data"],[77,54,74,56],[77,57,74,59],[77,61,74,63],[78,6,75,8],[78,10,75,12],[78,11,75,13,"_create"],[78,18,75,20],[78,19,75,21],[78,20,75,22],[79,4,76,4],[80,4,77,4],[81,0,78,0],[82,0,79,0],[83,0,80,0],[84,0,81,0],[85,4,82,4,"_create"],[85,11,82,11,"_create"],[85,12,82,11],[85,14,82,14],[86,6,83,8],[86,10,83,12,"_a"],[86,12,83,14],[87,6,84,8],[87,12,84,14,"opts"],[87,16,84,18],[87,19,84,21],[87,23,84,21,"pick"],[87,33,84,25],[87,35,84,26],[87,39,84,30],[87,40,84,31,"_opts"],[87,45,84,36],[87,47,84,38],[87,54,84,45],[87,56,84,47],[87,61,84,52],[87,63,84,54],[87,68,84,59],[87,70,84,61],[87,82,84,73],[87,84,84,75],[87,90,84,81],[87,92,84,83],[87,96,84,87],[87,98,84,89],[87,107,84,98],[87,109,84,100],[87,129,84,120],[87,131,84,122],[87,142,84,133],[87,143,84,134],[88,6,85,8,"opts"],[88,10,85,12],[88,11,85,13,"xdomain"],[88,18,85,20],[88,21,85,23],[88,22,85,24],[88,23,85,25],[88,27,85,29],[88,28,85,30,"_opts"],[88,33,85,35],[88,34,85,36,"xd"],[88,36,85,38],[89,6,86,8],[89,12,86,14,"xhr"],[89,15,86,17],[89,18,86,21],[89,22,86,25],[89,23,86,26,"_xhr"],[89,27,86,30],[89,30,86,33],[89,34,86,37],[89,35,86,38,"createRequest"],[89,48,86,51],[89,49,86,52,"opts"],[89,53,86,56],[89,54,86,58],[90,6,87,8],[90,10,87,12],[91,8,88,12,"xhr"],[91,11,88,15],[91,12,88,16,"open"],[91,16,88,20],[91,17,88,21],[91,21,88,25],[91,22,88,26,"_method"],[91,29,88,33],[91,31,88,35],[91,35,88,39],[91,36,88,40,"_uri"],[91,40,88,44],[91,42,88,46],[91,46,88,50],[91,47,88,51],[92,8,89,12],[92,12,89,16],[93,10,90,16],[93,14,90,20],[93,18,90,24],[93,19,90,25,"_opts"],[93,24,90,30],[93,25,90,31,"extraHeaders"],[93,37,90,43],[93,39,90,45],[94,12,91,20],[95,12,92,20,"xhr"],[95,15,92,23],[95,16,92,24,"setDisableHeaderCheck"],[95,37,92,45],[95,41,92,49,"xhr"],[95,44,92,52],[95,45,92,53,"setDisableHeaderCheck"],[95,66,92,74],[95,67,92,75],[95,71,92,79],[95,72,92,80],[96,12,93,20],[96,17,93,25],[96,21,93,29,"i"],[96,22,93,30],[96,26,93,34],[96,30,93,38],[96,31,93,39,"_opts"],[96,36,93,44],[96,37,93,45,"extraHeaders"],[96,49,93,57],[96,51,93,59],[97,14,94,24],[97,18,94,28],[97,22,94,32],[97,23,94,33,"_opts"],[97,28,94,38],[97,29,94,39,"extraHeaders"],[97,41,94,51],[97,42,94,52,"hasOwnProperty"],[97,56,94,66],[97,57,94,67,"i"],[97,58,94,68],[97,59,94,69],[97,61,94,71],[98,16,95,28,"xhr"],[98,19,95,31],[98,20,95,32,"setRequestHeader"],[98,36,95,48],[98,37,95,49,"i"],[98,38,95,50],[98,40,95,52],[98,44,95,56],[98,45,95,57,"_opts"],[98,50,95,62],[98,51,95,63,"extraHeaders"],[98,63,95,75],[98,64,95,76,"i"],[98,65,95,77],[98,66,95,78],[98,67,95,79],[99,14,96,24],[100,12,97,20],[101,10,98,16],[102,8,99,12],[102,9,99,13],[102,10,100,12],[102,17,100,19,"e"],[102,18,100,20],[102,20,100,22],[102,21,100,24],[103,8,101,12],[103,12,101,16],[103,18,101,22],[103,23,101,27],[103,27,101,31],[103,28,101,32,"_method"],[103,35,101,39],[103,37,101,41],[104,10,102,16],[104,14,102,20],[105,12,103,20,"xhr"],[105,15,103,23],[105,16,103,24,"setRequestHeader"],[105,32,103,40],[105,33,103,41],[105,47,103,55],[105,49,103,57],[105,75,103,83],[105,76,103,84],[106,10,104,16],[106,11,104,17],[106,12,105,16],[106,19,105,23,"e"],[106,20,105,24],[106,22,105,26],[106,23,105,28],[107,8,106,12],[108,8,107,12],[108,12,107,16],[109,10,108,16,"xhr"],[109,13,108,19],[109,14,108,20,"setRequestHeader"],[109,30,108,36],[109,31,108,37],[109,39,108,45],[109,41,108,47],[109,46,108,52],[109,47,108,53],[110,8,109,12],[110,9,109,13],[110,10,110,12],[110,17,110,19,"e"],[110,18,110,20],[110,20,110,22],[110,21,110,24],[111,8,111,12],[111,9,111,13,"_a"],[111,11,111,15],[111,14,111,18],[111,18,111,22],[111,19,111,23,"_opts"],[111,24,111,28],[111,25,111,29,"cookieJar"],[111,34,111,38],[111,40,111,44],[111,44,111,48],[111,48,111,52,"_a"],[111,50,111,54],[111,55,111,59],[111,60,111,64],[111,61,111,65],[111,64,111,68],[111,69,111,73],[111,70,111,74],[111,73,111,77,"_a"],[111,75,111,79],[111,76,111,80,"addCookies"],[111,86,111,90],[111,87,111,91,"xhr"],[111,90,111,94],[111,91,111,95],[112,8,112,12],[113,8,113,12],[113,12,113,16],[113,29,113,33],[113,33,113,37,"xhr"],[113,36,113,40],[113,38,113,42],[114,10,114,16,"xhr"],[114,13,114,19],[114,14,114,20,"withCredentials"],[114,29,114,35],[114,32,114,38],[114,36,114,42],[114,37,114,43,"_opts"],[114,42,114,48],[114,43,114,49,"withCredentials"],[114,58,114,64],[115,8,115,12],[116,8,116,12],[116,12,116,16],[116,16,116,20],[116,17,116,21,"_opts"],[116,22,116,26],[116,23,116,27,"requestTimeout"],[116,37,116,41],[116,39,116,43],[117,10,117,16,"xhr"],[117,13,117,19],[117,14,117,20,"timeout"],[117,21,117,27],[117,24,117,30],[117,28,117,34],[117,29,117,35,"_opts"],[117,34,117,40],[117,35,117,41,"requestTimeout"],[117,49,117,55],[118,8,118,12],[119,8,119,12,"xhr"],[119,11,119,15],[119,12,119,16,"onreadystatechange"],[119,30,119,34],[119,33,119,37],[119,39,119,43],[120,10,120,16],[120,14,120,20,"_a"],[120,16,120,22],[121,10,121,16],[121,14,121,20,"xhr"],[121,17,121,23],[121,18,121,24,"readyState"],[121,28,121,34],[121,33,121,39],[121,34,121,40],[121,36,121,42],[122,12,122,20],[122,13,122,21,"_a"],[122,15,122,23],[122,18,122,26],[122,22,122,30],[122,23,122,31,"_opts"],[122,28,122,36],[122,29,122,37,"cookieJar"],[122,38,122,46],[122,44,122,52],[122,48,122,56],[122,52,122,60,"_a"],[122,54,122,62],[122,59,122,67],[122,64,122,72],[122,65,122,73],[122,68,122,76],[122,73,122,81],[122,74,122,82],[122,77,122,85,"_a"],[122,79,122,87],[122,80,122,88,"parseCookies"],[122,92,122,100],[123,12,123,20],[124,12,124,20,"xhr"],[124,15,124,23],[124,16,124,24,"getResponseHeader"],[124,33,124,41],[124,34,124,42],[124,46,124,54],[124,47,124,55],[124,48,124,56],[125,10,125,16],[126,10,126,16],[126,14,126,20],[126,15,126,21],[126,20,126,26,"xhr"],[126,23,126,29],[126,24,126,30,"readyState"],[126,34,126,40],[126,36,127,20],[127,10,128,16],[127,14,128,20],[127,17,128,23],[127,22,128,28,"xhr"],[127,25,128,31],[127,26,128,32,"status"],[127,32,128,38],[127,36,128,42],[127,40,128,46],[127,45,128,51,"xhr"],[127,48,128,54],[127,49,128,55,"status"],[127,55,128,61],[127,57,128,63],[128,12,129,20],[128,16,129,24],[128,17,129,25,"_onLoad"],[128,24,129,32],[128,25,129,33],[128,26,129,34],[129,10,130,16],[129,11,130,17],[129,17,131,21],[130,12,132,20],[131,12,133,20],[132,12,134,20],[132,16,134,24],[132,17,134,25,"setTimeoutFn"],[132,29,134,37],[132,30,134,38],[132,36,134,44],[133,14,135,24],[133,18,135,28],[133,19,135,29,"_onError"],[133,27,135,37],[133,28,135,38],[133,35,135,45,"xhr"],[133,38,135,48],[133,39,135,49,"status"],[133,45,135,55],[133,50,135,60],[133,58,135,68],[133,61,135,71,"xhr"],[133,64,135,74],[133,65,135,75,"status"],[133,71,135,81],[133,74,135,84],[133,75,135,85],[133,76,135,86],[134,12,136,20],[134,13,136,21],[134,15,136,23],[134,16,136,24],[134,17,136,25],[135,10,137,16],[136,8,138,12],[136,9,138,13],[137,8,139,12,"xhr"],[137,11,139,15],[137,12,139,16,"send"],[137,16,139,20],[137,17,139,21],[137,21,139,25],[137,22,139,26,"_data"],[137,27,139,31],[137,28,139,32],[138,6,140,8],[138,7,140,9],[138,8,141,8],[138,15,141,15,"e"],[138,16,141,16],[138,18,141,18],[139,8,142,12],[140,8,143,12],[141,8,144,12],[142,8,145,12],[142,12,145,16],[142,13,145,17,"setTimeoutFn"],[142,25,145,29],[142,26,145,30],[142,32,145,36],[143,10,146,16],[143,14,146,20],[143,15,146,21,"_onError"],[143,23,146,29],[143,24,146,30,"e"],[143,25,146,31],[143,26,146,32],[144,8,147,12],[144,9,147,13],[144,11,147,15],[144,12,147,16],[144,13,147,17],[145,8,148,12],[146,6,149,8],[147,6,150,8],[147,10,150,12],[147,17,150,19,"document"],[147,25,150,27],[147,30,150,32],[147,41,150,43],[147,43,150,45],[148,8,151,12],[148,12,151,16],[148,13,151,17,"_index"],[148,19,151,23],[148,22,151,26,"Request"],[148,29,151,33],[148,30,151,34,"requestsCount"],[148,43,151,47],[148,45,151,49],[149,8,152,12,"Request"],[149,15,152,19],[149,16,152,20,"requests"],[149,24,152,28],[149,25,152,29],[149,29,152,33],[149,30,152,34,"_index"],[149,36,152,40],[149,37,152,41],[149,40,152,44],[149,44,152,48],[150,6,153,8],[151,4,154,4],[152,4,155,4],[153,0,156,0],[154,0,157,0],[155,0,158,0],[156,0,159,0],[157,4,160,4,"_onError"],[157,12,160,12,"_onError"],[157,13,160,13,"err"],[157,16,160,16],[157,18,160,18],[158,6,161,8],[158,10,161,12],[158,11,161,13,"emitReserved"],[158,23,161,25],[158,24,161,26],[158,31,161,33],[158,33,161,35,"err"],[158,36,161,38],[158,38,161,40],[158,42,161,44],[158,43,161,45,"_xhr"],[158,47,161,49],[158,48,161,50],[159,6,162,8],[159,10,162,12],[159,11,162,13,"_cleanup"],[159,19,162,21],[159,20,162,22],[159,24,162,26],[159,25,162,27],[160,4,163,4],[161,4,164,4],[162,0,165,0],[163,0,166,0],[164,0,167,0],[165,0,168,0],[166,4,169,4,"_cleanup"],[166,12,169,12,"_cleanup"],[166,13,169,13,"fromError"],[166,22,169,22],[166,24,169,24],[167,6,170,8],[167,10,170,12],[167,21,170,23],[167,26,170,28],[167,33,170,35],[167,37,170,39],[167,38,170,40,"_xhr"],[167,42,170,44],[167,46,170,48],[167,50,170,52],[167,55,170,57],[167,59,170,61],[167,60,170,62,"_xhr"],[167,64,170,66],[167,66,170,68],[168,8,171,12],[169,6,172,8],[170,6,173,8],[170,10,173,12],[170,11,173,13,"_xhr"],[170,15,173,17],[170,16,173,18,"onreadystatechange"],[170,34,173,36],[170,37,173,39,"empty"],[170,42,173,44],[171,6,174,8],[171,10,174,12,"fromError"],[171,19,174,21],[171,21,174,23],[172,8,175,12],[172,12,175,16],[173,10,176,16],[173,14,176,20],[173,15,176,21,"_xhr"],[173,19,176,25],[173,20,176,26,"abort"],[173,25,176,31],[173,26,176,32],[173,27,176,33],[174,8,177,12],[174,9,177,13],[174,10,178,12],[174,17,178,19,"e"],[174,18,178,20],[174,20,178,22],[174,21,178,24],[175,6,179,8],[176,6,180,8],[176,10,180,12],[176,17,180,19,"document"],[176,25,180,27],[176,30,180,32],[176,41,180,43],[176,43,180,45],[177,8,181,12],[177,15,181,19,"Request"],[177,22,181,26],[177,23,181,27,"requests"],[177,31,181,35],[177,32,181,36],[177,36,181,40],[177,37,181,41,"_index"],[177,43,181,47],[177,44,181,48],[178,6,182,8],[179,6,183,8],[179,10,183,12],[179,11,183,13,"_xhr"],[179,15,183,17],[179,18,183,20],[179,22,183,24],[180,4,184,4],[181,4,185,4],[182,0,186,0],[183,0,187,0],[184,0,188,0],[185,0,189,0],[186,4,190,4,"_onLoad"],[186,11,190,11,"_onLoad"],[186,12,190,11],[186,14,190,14],[187,6,191,8],[187,12,191,14,"data"],[187,16,191,18],[187,19,191,21],[187,23,191,25],[187,24,191,26,"_xhr"],[187,28,191,30],[187,29,191,31,"responseText"],[187,41,191,43],[188,6,192,8],[188,10,192,12,"data"],[188,14,192,16],[188,19,192,21],[188,23,192,25],[188,25,192,27],[189,8,193,12],[189,12,193,16],[189,13,193,17,"emitReserved"],[189,25,193,29],[189,26,193,30],[189,32,193,36],[189,34,193,38,"data"],[189,38,193,42],[189,39,193,43],[190,8,194,12],[190,12,194,16],[190,13,194,17,"emitReserved"],[190,25,194,29],[190,26,194,30],[190,35,194,39],[190,36,194,40],[191,8,195,12],[191,12,195,16],[191,13,195,17,"_cleanup"],[191,21,195,25],[191,22,195,26],[191,23,195,27],[192,6,196,8],[193,4,197,4],[194,4,198,4],[195,0,199,0],[196,0,200,0],[197,0,201,0],[198,0,202,0],[199,4,203,4,"abort"],[199,9,203,9,"abort"],[199,10,203,9],[199,12,203,12],[200,6,204,8],[200,10,204,12],[200,11,204,13,"_cleanup"],[200,19,204,21],[200,20,204,22],[200,21,204,23],[201,4,205,4],[202,2,206,0],[203,2,206,1,"exports"],[203,9,206,1],[203,10,206,1,"Request"],[203,17,206,1],[203,20,206,1,"Request"],[203,27,206,1],[204,2,207,0,"Request"],[204,9,207,7],[204,10,207,8,"requestsCount"],[204,23,207,21],[204,26,207,24],[204,27,207,25],[205,2,208,0,"Request"],[205,9,208,7],[205,10,208,8,"requests"],[205,18,208,16],[205,21,208,19],[205,22,208,20],[205,23,208,21],[206,2,209,0],[207,0,210,0],[208,0,211,0],[209,0,212,0],[210,0,213,0],[211,2,214,0],[211,6,214,4],[211,13,214,11,"document"],[211,21,214,19],[211,26,214,24],[211,37,214,35],[211,39,214,37],[212,4,215,4],[213,4,216,4],[213,8,216,8],[213,15,216,15,"attachEvent"],[213,26,216,26],[213,31,216,31],[213,41,216,41],[213,43,216,43],[214,6,217,8],[215,6,218,8,"attachEvent"],[215,17,218,19],[215,18,218,20],[215,28,218,30],[215,30,218,32,"unloadHandler"],[215,43,218,45],[215,44,218,46],[216,4,219,4],[216,5,219,5],[216,11,220,9],[216,15,220,13],[216,22,220,20,"addEventListener"],[216,38,220,36],[216,43,220,41],[216,53,220,51],[216,55,220,53],[217,6,221,8],[217,12,221,14,"terminationEvent"],[217,28,221,30],[217,31,221,33],[217,43,221,45],[217,47,221,49,"globalThis"],[217,74,221,59],[217,77,221,62],[217,87,221,72],[217,90,221,75],[217,98,221,83],[218,6,222,8,"addEventListener"],[218,22,222,24],[218,23,222,25,"terminationEvent"],[218,39,222,41],[218,41,222,43,"unloadHandler"],[218,54,222,56],[218,56,222,58],[218,61,222,63],[218,62,222,64],[219,4,223,4],[220,2,224,0],[221,2,225,0],[221,11,225,9,"unloadHandler"],[221,24,225,22,"unloadHandler"],[221,25,225,22],[221,27,225,25],[222,4,226,4],[222,9,226,9],[222,13,226,13,"i"],[222,14,226,14],[222,18,226,18,"Request"],[222,25,226,25],[222,26,226,26,"requests"],[222,34,226,34],[222,36,226,36],[223,6,227,8],[223,10,227,12,"Request"],[223,17,227,19],[223,18,227,20,"requests"],[223,26,227,28],[223,27,227,29,"hasOwnProperty"],[223,41,227,43],[223,42,227,44,"i"],[223,43,227,45],[223,44,227,46],[223,46,227,48],[224,8,228,12,"Request"],[224,15,228,19],[224,16,228,20,"requests"],[224,24,228,28],[224,25,228,29,"i"],[224,26,228,30],[224,27,228,31],[224,28,228,32,"abort"],[224,33,228,37],[224,34,228,38],[224,35,228,39],[225,6,229,8],[226,4,230,4],[227,2,231,0],[228,2,232,0],[228,8,232,6,"hasXHR2"],[228,15,232,13],[228,18,232,17],[228,30,232,29],[229,4,233,4],[229,10,233,10,"xhr"],[229,13,233,13],[229,16,233,16,"newRequest"],[229,26,233,26],[229,27,233,27],[230,6,234,8,"xdomain"],[230,13,234,15],[230,15,234,17],[231,4,235,4],[231,5,235,5],[231,6,235,6],[232,4,236,4],[232,11,236,11,"xhr"],[232,14,236,14],[232,18,236,18,"xhr"],[232,21,236,21],[232,22,236,22,"responseType"],[232,34,236,34],[232,39,236,39],[232,43,236,43],[233,2,237,0],[233,3,237,1],[233,4,237,3],[233,5,237,4],[234,2,238,0],[235,0,239,0],[236,0,240,0],[237,0,241,0],[238,0,242,0],[239,0,243,0],[240,0,244,0],[241,2,245,7],[241,8,245,13,"XHR"],[241,11,245,16],[241,20,245,25,"BaseXHR"],[241,27,245,32],[241,28,245,33],[242,4,246,4,"constructor"],[242,15,246,15,"constructor"],[242,16,246,16,"opts"],[242,20,246,20],[242,22,246,22],[243,6,247,8],[243,11,247,13],[243,12,247,14,"opts"],[243,16,247,18],[243,17,247,19],[244,6,248,8],[244,12,248,14,"forceBase64"],[244,23,248,25],[244,26,248,28,"opts"],[244,30,248,32],[244,34,248,36,"opts"],[244,38,248,40],[244,39,248,41,"forceBase64"],[244,50,248,52],[245,6,249,8],[245,10,249,12],[245,11,249,13,"supportsBinary"],[245,25,249,27],[245,28,249,30,"hasXHR2"],[245,35,249,37],[245,39,249,41],[245,40,249,42,"forceBase64"],[245,51,249,53],[246,4,250,4],[247,4,251,4,"request"],[247,11,251,11,"request"],[247,12,251,12,"opts"],[247,16,251,16],[247,19,251,19],[247,20,251,20],[247,21,251,21],[247,23,251,23],[248,6,252,8,"Object"],[248,12,252,14],[248,13,252,15,"assign"],[248,19,252,21],[248,20,252,22,"opts"],[248,24,252,26],[248,26,252,28],[249,8,252,30,"xd"],[249,10,252,32],[249,12,252,34],[249,16,252,38],[249,17,252,39,"xd"],[250,6,252,42],[250,7,252,43],[250,9,252,45],[250,13,252,49],[250,14,252,50,"opts"],[250,18,252,54],[250,19,252,55],[251,6,253,8],[251,13,253,15],[251,17,253,19,"Request"],[251,24,253,26],[251,25,253,27,"newRequest"],[251,35,253,37],[251,37,253,39],[251,41,253,43],[251,42,253,44,"uri"],[251,45,253,47],[251,46,253,48],[251,47,253,49],[251,49,253,51,"opts"],[251,53,253,55],[251,54,253,56],[252,4,254,4],[253,2,255,0],[254,2,255,1,"exports"],[254,9,255,1],[254,10,255,1,"XHR"],[254,13,255,1],[254,16,255,1,"XHR"],[254,19,255,1],[255,2,256,0],[255,11,256,9,"newRequest"],[255,21,256,19,"newRequest"],[255,22,256,20,"opts"],[255,26,256,24],[255,28,256,26],[256,4,257,4],[256,10,257,10,"xdomain"],[256,17,257,17],[256,20,257,20,"opts"],[256,24,257,24],[256,25,257,25,"xdomain"],[256,32,257,32],[257,4,258,4],[258,4,259,4],[258,8,259,8],[259,6,260,8],[259,10,260,12],[259,21,260,23],[259,26,260,28],[259,33,260,35,"XMLHttpRequest"],[259,47,260,49],[259,52,260,54],[259,53,260,55,"xdomain"],[259,60,260,62],[259,64,260,66,"hasCORS"],[259,80,260,73],[259,81,260,74],[259,83,260,76],[260,8,261,12],[260,15,261,19],[260,19,261,23,"XMLHttpRequest"],[260,33,261,37],[260,34,261,38],[260,35,261,39],[261,6,262,8],[262,4,263,4],[262,5,263,5],[262,6,264,4],[262,13,264,11,"e"],[262,14,264,12],[262,16,264,14],[262,17,264,16],[263,4,265,4],[263,8,265,8],[263,9,265,9,"xdomain"],[263,16,265,16],[263,18,265,18],[264,6,266,8],[264,10,266,12],[265,8,267,12],[265,15,267,19],[265,19,267,23,"globalThis"],[265,46,267,33],[265,47,267,34],[265,48,267,35],[265,56,267,43],[265,57,267,44],[265,58,267,45,"concat"],[265,64,267,51],[265,65,267,52],[265,73,267,60],[265,74,267,61],[265,75,267,62,"join"],[265,79,267,66],[265,80,267,67],[265,83,267,70],[265,84,267,71],[265,85,267,72],[265,86,267,73],[265,105,267,92],[265,106,267,93],[266,6,268,8],[266,7,268,9],[266,8,269,8],[266,15,269,15,"e"],[266,16,269,16],[266,18,269,18],[266,19,269,20],[267,4,270,4],[268,2,271,0],[269,0,271,1],[269,3]],"functionMap":{"names":["<global>","empty","BaseXHR","BaseXHR#constructor","BaseXHR#doWrite","req.on$argument_1","BaseXHR#doPoll","Request","Request#constructor","Request#_create","xhr.onreadystatechange","setTimeoutFn$argument_0","Request#_onError","Request#_cleanup","Request#_onLoad","Request#abort","unloadHandler","<anonymous>","XHR","XHR#constructor","XHR#request","newRequest"],"mappings":"AAA;ACK,oBD;OEC;ICO;KDc;IEQ;wBCM;SDE;KFC;IIM;wBDG;SCE;KJE;CFC;OOC;ICO;KDS;IEM;qCCqC;sCCe;qBDE;aDE;8BEO;aFE;KFO;IKM;KLG;IMM;KNe;IOM;KPO;IQM;KRE;CPC;AgBmB;ChBM;iBiBC;CjBK;OkBQ;ICC;KDI;IEC;KFG;ClBC;AqBC;CrBe"}},"type":"js/module"}]}