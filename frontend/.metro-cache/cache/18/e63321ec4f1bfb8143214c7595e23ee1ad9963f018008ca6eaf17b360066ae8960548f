{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encode = exports.decode = void 0;\n  // imported from https://github.com/socketio/base64-arraybuffer\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  // Use a lookup table to find the index.\n  const lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\n  for (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n  const encode = arraybuffer => {\n    let bytes = new Uint8Array(arraybuffer),\n      i,\n      len = bytes.length,\n      base64 = '';\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n  };\n  exports.encode = encode;\n  const decode = base64 => {\n    let bufferLength = base64.length * 0.75,\n      len = base64.length,\n      i,\n      p = 0,\n      encoded1,\n      encoded2,\n      encoded3,\n      encoded4;\n    if (base64[base64.length - 1] === '=') {\n      bufferLength--;\n      if (base64[base64.length - 2] === '=') {\n        bufferLength--;\n      }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength),\n      bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return arraybuffer;\n  };\n  exports.decode = decode;\n});","lineCount":61,"map":[[6,2,1,0],[7,2,2,0],[7,8,2,6,"chars"],[7,13,2,11],[7,16,2,14],[7,82,2,80],[8,2,3,0],[9,2,4,0],[9,8,4,6,"lookup"],[9,14,4,12],[9,17,4,15],[9,24,4,22,"Uint8Array"],[9,34,4,32],[9,39,4,37],[9,50,4,48],[9,53,4,51],[9,55,4,53],[9,58,4,56],[9,62,4,60,"Uint8Array"],[9,72,4,70],[9,73,4,71],[9,76,4,74],[9,77,4,75],[10,2,5,0],[10,7,5,5],[10,11,5,9,"i"],[10,12,5,10],[10,15,5,13],[10,16,5,14],[10,18,5,16,"i"],[10,19,5,17],[10,22,5,20,"chars"],[10,27,5,25],[10,28,5,26,"length"],[10,34,5,32],[10,36,5,34,"i"],[10,37,5,35],[10,39,5,37],[10,41,5,39],[11,4,6,4,"lookup"],[11,10,6,10],[11,11,6,11,"chars"],[11,16,6,16],[11,17,6,17,"charCodeAt"],[11,27,6,27],[11,28,6,28,"i"],[11,29,6,29],[11,30,6,30],[11,31,6,31],[11,34,6,34,"i"],[11,35,6,35],[12,2,7,0],[13,2,8,7],[13,8,8,13,"encode"],[13,14,8,19],[13,17,8,23,"arraybuffer"],[13,28,8,34],[13,32,8,39],[14,4,9,4],[14,8,9,8,"bytes"],[14,13,9,13],[14,16,9,16],[14,20,9,20,"Uint8Array"],[14,30,9,30],[14,31,9,31,"arraybuffer"],[14,42,9,42],[14,43,9,43],[15,6,9,45,"i"],[15,7,9,46],[16,6,9,48,"len"],[16,9,9,51],[16,12,9,54,"bytes"],[16,17,9,59],[16,18,9,60,"length"],[16,24,9,66],[17,6,9,68,"base64"],[17,12,9,74],[17,15,9,77],[17,17,9,79],[18,4,10,4],[18,9,10,9,"i"],[18,10,10,10],[18,13,10,13],[18,14,10,14],[18,16,10,16,"i"],[18,17,10,17],[18,20,10,20,"len"],[18,23,10,23],[18,25,10,25,"i"],[18,26,10,26],[18,30,10,30],[18,31,10,31],[18,33,10,33],[19,6,11,8,"base64"],[19,12,11,14],[19,16,11,18,"chars"],[19,21,11,23],[19,22,11,24,"bytes"],[19,27,11,29],[19,28,11,30,"i"],[19,29,11,31],[19,30,11,32],[19,34,11,36],[19,35,11,37],[19,36,11,38],[20,6,12,8,"base64"],[20,12,12,14],[20,16,12,18,"chars"],[20,21,12,23],[20,22,12,25],[20,23,12,26,"bytes"],[20,28,12,31],[20,29,12,32,"i"],[20,30,12,33],[20,31,12,34],[20,34,12,37],[20,35,12,38],[20,40,12,43],[20,41,12,44],[20,44,12,49,"bytes"],[20,49,12,54],[20,50,12,55,"i"],[20,51,12,56],[20,54,12,59],[20,55,12,60],[20,56,12,61],[20,60,12,65],[20,61,12,67],[20,62,12,68],[21,6,13,8,"base64"],[21,12,13,14],[21,16,13,18,"chars"],[21,21,13,23],[21,22,13,25],[21,23,13,26,"bytes"],[21,28,13,31],[21,29,13,32,"i"],[21,30,13,33],[21,33,13,36],[21,34,13,37],[21,35,13,38],[21,38,13,41],[21,40,13,43],[21,45,13,48],[21,46,13,49],[21,49,13,54,"bytes"],[21,54,13,59],[21,55,13,60,"i"],[21,56,13,61],[21,59,13,64],[21,60,13,65],[21,61,13,66],[21,65,13,70],[21,66,13,72],[21,67,13,73],[22,6,14,8,"base64"],[22,12,14,14],[22,16,14,18,"chars"],[22,21,14,23],[22,22,14,24,"bytes"],[22,27,14,29],[22,28,14,30,"i"],[22,29,14,31],[22,32,14,34],[22,33,14,35],[22,34,14,36],[22,37,14,39],[22,39,14,41],[22,40,14,42],[23,4,15,4],[24,4,16,4],[24,8,16,8,"len"],[24,11,16,11],[24,14,16,14],[24,15,16,15],[24,20,16,20],[24,21,16,21],[24,23,16,23],[25,6,17,8,"base64"],[25,12,17,14],[25,15,17,17,"base64"],[25,21,17,23],[25,22,17,24,"substring"],[25,31,17,33],[25,32,17,34],[25,33,17,35],[25,35,17,37,"base64"],[25,41,17,43],[25,42,17,44,"length"],[25,48,17,50],[25,51,17,53],[25,52,17,54],[25,53,17,55],[25,56,17,58],[25,59,17,61],[26,4,18,4],[26,5,18,5],[26,11,19,9],[26,15,19,13,"len"],[26,18,19,16],[26,21,19,19],[26,22,19,20],[26,27,19,25],[26,28,19,26],[26,30,19,28],[27,6,20,8,"base64"],[27,12,20,14],[27,15,20,17,"base64"],[27,21,20,23],[27,22,20,24,"substring"],[27,31,20,33],[27,32,20,34],[27,33,20,35],[27,35,20,37,"base64"],[27,41,20,43],[27,42,20,44,"length"],[27,48,20,50],[27,51,20,53],[27,52,20,54],[27,53,20,55],[27,56,20,58],[27,60,20,62],[28,4,21,4],[29,4,22,4],[29,11,22,11,"base64"],[29,17,22,17],[30,2,23,0],[30,3,23,1],[31,2,23,2,"exports"],[31,9,23,2],[31,10,23,2,"encode"],[31,16,23,2],[31,19,23,2,"encode"],[31,25,23,2],[32,2,24,7],[32,8,24,13,"decode"],[32,14,24,19],[32,17,24,23,"base64"],[32,23,24,29],[32,27,24,34],[33,4,25,4],[33,8,25,8,"bufferLength"],[33,20,25,20],[33,23,25,23,"base64"],[33,29,25,29],[33,30,25,30,"length"],[33,36,25,36],[33,39,25,39],[33,43,25,43],[34,6,25,45,"len"],[34,9,25,48],[34,12,25,51,"base64"],[34,18,25,57],[34,19,25,58,"length"],[34,25,25,64],[35,6,25,66,"i"],[35,7,25,67],[36,6,25,69,"p"],[36,7,25,70],[36,10,25,73],[36,11,25,74],[37,6,25,76,"encoded1"],[37,14,25,84],[38,6,25,86,"encoded2"],[38,14,25,94],[39,6,25,96,"encoded3"],[39,14,25,104],[40,6,25,106,"encoded4"],[40,14,25,114],[41,4,26,4],[41,8,26,8,"base64"],[41,14,26,14],[41,15,26,15,"base64"],[41,21,26,21],[41,22,26,22,"length"],[41,28,26,28],[41,31,26,31],[41,32,26,32],[41,33,26,33],[41,38,26,38],[41,41,26,41],[41,43,26,43],[42,6,27,8,"bufferLength"],[42,18,27,20],[42,20,27,22],[43,6,28,8],[43,10,28,12,"base64"],[43,16,28,18],[43,17,28,19,"base64"],[43,23,28,25],[43,24,28,26,"length"],[43,30,28,32],[43,33,28,35],[43,34,28,36],[43,35,28,37],[43,40,28,42],[43,43,28,45],[43,45,28,47],[44,8,29,12,"bufferLength"],[44,20,29,24],[44,22,29,26],[45,6,30,8],[46,4,31,4],[47,4,32,4],[47,10,32,10,"arraybuffer"],[47,21,32,21],[47,24,32,24],[47,28,32,28,"ArrayBuffer"],[47,39,32,39],[47,40,32,40,"bufferLength"],[47,52,32,52],[47,53,32,53],[48,6,32,55,"bytes"],[48,11,32,60],[48,14,32,63],[48,18,32,67,"Uint8Array"],[48,28,32,77],[48,29,32,78,"arraybuffer"],[48,40,32,89],[48,41,32,90],[49,4,33,4],[49,9,33,9,"i"],[49,10,33,10],[49,13,33,13],[49,14,33,14],[49,16,33,16,"i"],[49,17,33,17],[49,20,33,20,"len"],[49,23,33,23],[49,25,33,25,"i"],[49,26,33,26],[49,30,33,30],[49,31,33,31],[49,33,33,33],[50,6,34,8,"encoded1"],[50,14,34,16],[50,17,34,19,"lookup"],[50,23,34,25],[50,24,34,26,"base64"],[50,30,34,32],[50,31,34,33,"charCodeAt"],[50,41,34,43],[50,42,34,44,"i"],[50,43,34,45],[50,44,34,46],[50,45,34,47],[51,6,35,8,"encoded2"],[51,14,35,16],[51,17,35,19,"lookup"],[51,23,35,25],[51,24,35,26,"base64"],[51,30,35,32],[51,31,35,33,"charCodeAt"],[51,41,35,43],[51,42,35,44,"i"],[51,43,35,45],[51,46,35,48],[51,47,35,49],[51,48,35,50],[51,49,35,51],[52,6,36,8,"encoded3"],[52,14,36,16],[52,17,36,19,"lookup"],[52,23,36,25],[52,24,36,26,"base64"],[52,30,36,32],[52,31,36,33,"charCodeAt"],[52,41,36,43],[52,42,36,44,"i"],[52,43,36,45],[52,46,36,48],[52,47,36,49],[52,48,36,50],[52,49,36,51],[53,6,37,8,"encoded4"],[53,14,37,16],[53,17,37,19,"lookup"],[53,23,37,25],[53,24,37,26,"base64"],[53,30,37,32],[53,31,37,33,"charCodeAt"],[53,41,37,43],[53,42,37,44,"i"],[53,43,37,45],[53,46,37,48],[53,47,37,49],[53,48,37,50],[53,49,37,51],[54,6,38,8,"bytes"],[54,11,38,13],[54,12,38,14,"p"],[54,13,38,15],[54,15,38,17],[54,16,38,18],[54,19,38,22,"encoded1"],[54,27,38,30],[54,31,38,34],[54,32,38,35],[54,35,38,40,"encoded2"],[54,43,38,48],[54,47,38,52],[54,48,38,54],[55,6,39,8,"bytes"],[55,11,39,13],[55,12,39,14,"p"],[55,13,39,15],[55,15,39,17],[55,16,39,18],[55,19,39,22],[55,20,39,23,"encoded2"],[55,28,39,31],[55,31,39,34],[55,33,39,36],[55,38,39,41],[55,39,39,42],[55,42,39,47,"encoded3"],[55,50,39,55],[55,54,39,59],[55,55,39,61],[56,6,40,8,"bytes"],[56,11,40,13],[56,12,40,14,"p"],[56,13,40,15],[56,15,40,17],[56,16,40,18],[56,19,40,22],[56,20,40,23,"encoded3"],[56,28,40,31],[56,31,40,34],[56,32,40,35],[56,37,40,40],[56,38,40,41],[56,41,40,46,"encoded4"],[56,49,40,54],[56,52,40,57],[56,54,40,60],[57,4,41,4],[58,4,42,4],[58,11,42,11,"arraybuffer"],[58,22,42,22],[59,2,43,0],[59,3,43,1],[60,2,43,2,"exports"],[60,9,43,2],[60,10,43,2,"decode"],[60,16,43,2],[60,19,43,2,"decode"],[60,25,43,2],[61,0,43,2],[61,3]],"functionMap":{"names":["<global>","encode","decode"],"mappings":"AAA;sBCO;CDe;sBEC;CFmB"}},"type":"js/module"}]}