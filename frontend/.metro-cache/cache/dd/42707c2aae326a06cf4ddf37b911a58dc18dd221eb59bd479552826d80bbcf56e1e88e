{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"]}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":55,"index":104}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"]}},{"name":"./util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":50,"index":155}}],"key":"+UpHPazG/Yk8JnTjB6d2Eo+vUl4=","exportNames":["*"]}},{"name":"./contrib/parseqs.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":156},"end":{"line":4,"column":46,"index":202}}],"key":"BJ+q1MtlpK8TmoXWscM6udPVjkM=","exportNames":["*"]}},{"name":"debug","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":203},"end":{"line":5,"column":32,"index":235}}],"key":"Nx7LMnUOZdRc8E6QIb5nvmtJE+4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TransportError = exports.Transport = void 0;\n  var _engine = require(_dependencyMap[1], \"engine.io-parser\");\n  var _componentEmitter = require(_dependencyMap[2], \"@socket.io/component-emitter\");\n  var _util = require(_dependencyMap[3], \"./util.js\");\n  var _parseqs = require(_dependencyMap[4], \"./contrib/parseqs.js\");\n  var _debug = _interopRequireDefault(require(_dependencyMap[5], \"debug\"));\n  // debug()\n  const debug = (0, _debug.default)(\"engine.io-client:transport\"); // debug()\n  class TransportError extends Error {\n    constructor(reason, description, context) {\n      super(reason);\n      this.description = description;\n      this.context = context;\n      this.type = \"TransportError\";\n    }\n  }\n  exports.TransportError = TransportError;\n  class Transport extends _componentEmitter.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n      super();\n      this.writable = false;\n      (0, _util.installTimerFunctions)(this, opts);\n      this.opts = opts;\n      this.query = opts.query;\n      this.socket = opts.socket;\n      this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n      super.emitReserved(\"error\", new TransportError(reason, description, context));\n      return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n      this.readyState = \"opening\";\n      this.doOpen();\n      return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n      if (this.readyState === \"opening\" || this.readyState === \"open\") {\n        this.doClose();\n        this.onClose();\n      }\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n      if (this.readyState === \"open\") {\n        this.write(packets);\n      } else {\n        // this might happen if the transport was silently closed in the beforeunload event handler\n        debug(\"transport is not open, discarding packets\");\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n      super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n      const packet = (0, _engine.decodePacket)(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n      super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n      this.readyState = \"closed\";\n      super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) {}\n    createUri(schema, query = {}) {\n      return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n    }\n    _hostname() {\n      const hostname = this.opts.hostname;\n      return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n      if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n        return \":\" + this.opts.port;\n      } else {\n        return \"\";\n      }\n    }\n    _query(query) {\n      const encodedQuery = (0, _parseqs.encode)(query);\n      return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n  }\n  exports.Transport = Transport;\n});","lineCount":146,"map":[[7,2,1,0],[7,6,1,0,"_engine"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,2,0],[8,6,2,0,"_componentEmitter"],[8,23,2,0],[8,26,2,0,"require"],[8,33,2,0],[8,34,2,0,"_dependencyMap"],[8,48,2,0],[9,2,3,0],[9,6,3,0,"_util"],[9,11,3,0],[9,14,3,0,"require"],[9,21,3,0],[9,22,3,0,"_dependencyMap"],[9,36,3,0],[10,2,4,0],[10,6,4,0,"_parseqs"],[10,14,4,0],[10,17,4,0,"require"],[10,24,4,0],[10,25,4,0,"_dependencyMap"],[10,39,4,0],[11,2,5,0],[11,6,5,0,"_debug"],[11,12,5,0],[11,15,5,0,"_interopRequireDefault"],[11,37,5,0],[11,38,5,0,"require"],[11,45,5,0],[11,46,5,0,"_dependencyMap"],[11,60,5,0],[12,2,5,33],[13,2,6,0],[13,8,6,6,"debug"],[13,13,6,11],[13,16,6,14],[13,20,6,14,"debugModule"],[13,34,6,25],[13,36,6,26],[13,64,6,54],[13,65,6,55],[13,66,6,56],[13,67,6,57],[14,2,7,7],[14,8,7,13,"TransportError"],[14,22,7,27],[14,31,7,36,"Error"],[14,36,7,41],[14,37,7,42],[15,4,8,4,"constructor"],[15,15,8,15,"constructor"],[15,16,8,16,"reason"],[15,22,8,22],[15,24,8,24,"description"],[15,35,8,35],[15,37,8,37,"context"],[15,44,8,44],[15,46,8,46],[16,6,9,8],[16,11,9,13],[16,12,9,14,"reason"],[16,18,9,20],[16,19,9,21],[17,6,10,8],[17,10,10,12],[17,11,10,13,"description"],[17,22,10,24],[17,25,10,27,"description"],[17,36,10,38],[18,6,11,8],[18,10,11,12],[18,11,11,13,"context"],[18,18,11,20],[18,21,11,23,"context"],[18,28,11,30],[19,6,12,8],[19,10,12,12],[19,11,12,13,"type"],[19,15,12,17],[19,18,12,20],[19,34,12,36],[20,4,13,4],[21,2,14,0],[22,2,14,1,"exports"],[22,9,14,1],[22,10,14,1,"TransportError"],[22,24,14,1],[22,27,14,1,"TransportError"],[22,41,14,1],[23,2,15,7],[23,8,15,13,"Transport"],[23,17,15,22],[23,26,15,31,"Emitter"],[23,51,15,38],[23,52,15,39],[24,4,16,4],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,4,22,4,"constructor"],[30,15,22,15,"constructor"],[30,16,22,16,"opts"],[30,20,22,20],[30,22,22,22],[31,6,23,8],[31,11,23,13],[31,12,23,14],[31,13,23,15],[32,6,24,8],[32,10,24,12],[32,11,24,13,"writable"],[32,19,24,21],[32,22,24,24],[32,27,24,29],[33,6,25,8],[33,10,25,8,"installTimerFunctions"],[33,37,25,29],[33,39,25,30],[33,43,25,34],[33,45,25,36,"opts"],[33,49,25,40],[33,50,25,41],[34,6,26,8],[34,10,26,12],[34,11,26,13,"opts"],[34,15,26,17],[34,18,26,20,"opts"],[34,22,26,24],[35,6,27,8],[35,10,27,12],[35,11,27,13,"query"],[35,16,27,18],[35,19,27,21,"opts"],[35,23,27,25],[35,24,27,26,"query"],[35,29,27,31],[36,6,28,8],[36,10,28,12],[36,11,28,13,"socket"],[36,17,28,19],[36,20,28,22,"opts"],[36,24,28,26],[36,25,28,27,"socket"],[36,31,28,33],[37,6,29,8],[37,10,29,12],[37,11,29,13,"supportsBinary"],[37,25,29,27],[37,28,29,30],[37,29,29,31,"opts"],[37,33,29,35],[37,34,29,36,"forceBase64"],[37,45,29,47],[38,4,30,4],[39,4,31,4],[40,0,32,0],[41,0,33,0],[42,0,34,0],[43,0,35,0],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,0,39,0],[48,4,40,4,"onError"],[48,11,40,11,"onError"],[48,12,40,12,"reason"],[48,18,40,18],[48,20,40,20,"description"],[48,31,40,31],[48,33,40,33,"context"],[48,40,40,40],[48,42,40,42],[49,6,41,8],[49,11,41,13],[49,12,41,14,"emitReserved"],[49,24,41,26],[49,25,41,27],[49,32,41,34],[49,34,41,36],[49,38,41,40,"TransportError"],[49,52,41,54],[49,53,41,55,"reason"],[49,59,41,61],[49,61,41,63,"description"],[49,72,41,74],[49,74,41,76,"context"],[49,81,41,83],[49,82,41,84],[49,83,41,85],[50,6,42,8],[50,13,42,15],[50,17,42,19],[51,4,43,4],[52,4,44,4],[53,0,45,0],[54,0,46,0],[55,4,47,4,"open"],[55,8,47,8,"open"],[55,9,47,8],[55,11,47,11],[56,6,48,8],[56,10,48,12],[56,11,48,13,"readyState"],[56,21,48,23],[56,24,48,26],[56,33,48,35],[57,6,49,8],[57,10,49,12],[57,11,49,13,"doOpen"],[57,17,49,19],[57,18,49,20],[57,19,49,21],[58,6,50,8],[58,13,50,15],[58,17,50,19],[59,4,51,4],[60,4,52,4],[61,0,53,0],[62,0,54,0],[63,4,55,4,"close"],[63,9,55,9,"close"],[63,10,55,9],[63,12,55,12],[64,6,56,8],[64,10,56,12],[64,14,56,16],[64,15,56,17,"readyState"],[64,25,56,27],[64,30,56,32],[64,39,56,41],[64,43,56,45],[64,47,56,49],[64,48,56,50,"readyState"],[64,58,56,60],[64,63,56,65],[64,69,56,71],[64,71,56,73],[65,8,57,12],[65,12,57,16],[65,13,57,17,"doClose"],[65,20,57,24],[65,21,57,25],[65,22,57,26],[66,8,58,12],[66,12,58,16],[66,13,58,17,"onClose"],[66,20,58,24],[66,21,58,25],[66,22,58,26],[67,6,59,8],[68,6,60,8],[68,13,60,15],[68,17,60,19],[69,4,61,4],[70,4,62,4],[71,0,63,0],[72,0,64,0],[73,0,65,0],[74,0,66,0],[75,4,67,4,"send"],[75,8,67,8,"send"],[75,9,67,9,"packets"],[75,16,67,16],[75,18,67,18],[76,6,68,8],[76,10,68,12],[76,14,68,16],[76,15,68,17,"readyState"],[76,25,68,27],[76,30,68,32],[76,36,68,38],[76,38,68,40],[77,8,69,12],[77,12,69,16],[77,13,69,17,"write"],[77,18,69,22],[77,19,69,23,"packets"],[77,26,69,30],[77,27,69,31],[78,6,70,8],[78,7,70,9],[78,13,71,13],[79,8,72,12],[80,8,73,12,"debug"],[80,13,73,17],[80,14,73,18],[80,57,73,61],[80,58,73,62],[81,6,74,8],[82,4,75,4],[83,4,76,4],[84,0,77,0],[85,0,78,0],[86,0,79,0],[87,0,80,0],[88,4,81,4,"onOpen"],[88,10,81,10,"onOpen"],[88,11,81,10],[88,13,81,13],[89,6,82,8],[89,10,82,12],[89,11,82,13,"readyState"],[89,21,82,23],[89,24,82,26],[89,30,82,32],[90,6,83,8],[90,10,83,12],[90,11,83,13,"writable"],[90,19,83,21],[90,22,83,24],[90,26,83,28],[91,6,84,8],[91,11,84,13],[91,12,84,14,"emitReserved"],[91,24,84,26],[91,25,84,27],[91,31,84,33],[91,32,84,34],[92,4,85,4],[93,4,86,4],[94,0,87,0],[95,0,88,0],[96,0,89,0],[97,0,90,0],[98,0,91,0],[99,4,92,4,"onData"],[99,10,92,10,"onData"],[99,11,92,11,"data"],[99,15,92,15],[99,17,92,17],[100,6,93,8],[100,12,93,14,"packet"],[100,18,93,20],[100,21,93,23],[100,25,93,23,"decodePacket"],[100,45,93,35],[100,47,93,36,"data"],[100,51,93,40],[100,53,93,42],[100,57,93,46],[100,58,93,47,"socket"],[100,64,93,53],[100,65,93,54,"binaryType"],[100,75,93,64],[100,76,93,65],[101,6,94,8],[101,10,94,12],[101,11,94,13,"onPacket"],[101,19,94,21],[101,20,94,22,"packet"],[101,26,94,28],[101,27,94,29],[102,4,95,4],[103,4,96,4],[104,0,97,0],[105,0,98,0],[106,0,99,0],[107,0,100,0],[108,4,101,4,"onPacket"],[108,12,101,12,"onPacket"],[108,13,101,13,"packet"],[108,19,101,19],[108,21,101,21],[109,6,102,8],[109,11,102,13],[109,12,102,14,"emitReserved"],[109,24,102,26],[109,25,102,27],[109,33,102,35],[109,35,102,37,"packet"],[109,41,102,43],[109,42,102,44],[110,4,103,4],[111,4,104,4],[112,0,105,0],[113,0,106,0],[114,0,107,0],[115,0,108,0],[116,4,109,4,"onClose"],[116,11,109,11,"onClose"],[116,12,109,12,"details"],[116,19,109,19],[116,21,109,21],[117,6,110,8],[117,10,110,12],[117,11,110,13,"readyState"],[117,21,110,23],[117,24,110,26],[117,32,110,34],[118,6,111,8],[118,11,111,13],[118,12,111,14,"emitReserved"],[118,24,111,26],[118,25,111,27],[118,32,111,34],[118,34,111,36,"details"],[118,41,111,43],[118,42,111,44],[119,4,112,4],[120,4,113,4],[121,0,114,0],[122,0,115,0],[123,0,116,0],[124,0,117,0],[125,4,118,4,"pause"],[125,9,118,9,"pause"],[125,10,118,10,"onPause"],[125,17,118,17],[125,19,118,19],[125,20,118,21],[126,4,119,4,"createUri"],[126,13,119,13,"createUri"],[126,14,119,14,"schema"],[126,20,119,20],[126,22,119,22,"query"],[126,27,119,27],[126,30,119,30],[126,31,119,31],[126,32,119,32],[126,34,119,34],[127,6,120,8],[127,13,120,16,"schema"],[127,19,120,22],[127,22,121,12],[127,27,121,17],[127,30,122,12],[127,34,122,16],[127,35,122,17,"_hostname"],[127,44,122,26],[127,45,122,27],[127,46,122,28],[127,49,123,12],[127,53,123,16],[127,54,123,17,"_port"],[127,59,123,22],[127,60,123,23],[127,61,123,24],[127,64,124,12],[127,68,124,16],[127,69,124,17,"opts"],[127,73,124,21],[127,74,124,22,"path"],[127,78,124,26],[127,81,125,12],[127,85,125,16],[127,86,125,17,"_query"],[127,92,125,23],[127,93,125,24,"query"],[127,98,125,29],[127,99,125,30],[128,4,126,4],[129,4,127,4,"_hostname"],[129,13,127,13,"_hostname"],[129,14,127,13],[129,16,127,16],[130,6,128,8],[130,12,128,14,"hostname"],[130,20,128,22],[130,23,128,25],[130,27,128,29],[130,28,128,30,"opts"],[130,32,128,34],[130,33,128,35,"hostname"],[130,41,128,43],[131,6,129,8],[131,13,129,15,"hostname"],[131,21,129,23],[131,22,129,24,"indexOf"],[131,29,129,31],[131,30,129,32],[131,33,129,35],[131,34,129,36],[131,39,129,41],[131,40,129,42],[131,41,129,43],[131,44,129,46,"hostname"],[131,52,129,54],[131,55,129,57],[131,58,129,60],[131,61,129,63,"hostname"],[131,69,129,71],[131,72,129,74],[131,75,129,77],[132,4,130,4],[133,4,131,4,"_port"],[133,9,131,9,"_port"],[133,10,131,9],[133,12,131,12],[134,6,132,8],[134,10,132,12],[134,14,132,16],[134,15,132,17,"opts"],[134,19,132,21],[134,20,132,22,"port"],[134,24,132,26],[134,29,133,14],[134,33,133,18],[134,34,133,19,"opts"],[134,38,133,23],[134,39,133,24,"secure"],[134,45,133,30],[134,49,133,34,"Number"],[134,55,133,40],[134,56,133,41],[134,60,133,45],[134,61,133,46,"opts"],[134,65,133,50],[134,66,133,51,"port"],[134,70,133,55],[134,75,133,60],[134,78,133,63],[134,79,133,64],[134,83,134,17],[134,84,134,18],[134,88,134,22],[134,89,134,23,"opts"],[134,93,134,27],[134,94,134,28,"secure"],[134,100,134,34],[134,104,134,38,"Number"],[134,110,134,44],[134,111,134,45],[134,115,134,49],[134,116,134,50,"opts"],[134,120,134,54],[134,121,134,55,"port"],[134,125,134,59],[134,126,134,60],[134,131,134,65],[134,133,134,68],[134,134,134,69],[134,136,134,71],[135,8,135,12],[135,15,135,19],[135,18,135,22],[135,21,135,25],[135,25,135,29],[135,26,135,30,"opts"],[135,30,135,34],[135,31,135,35,"port"],[135,35,135,39],[136,6,136,8],[136,7,136,9],[136,13,137,13],[137,8,138,12],[137,15,138,19],[137,17,138,21],[138,6,139,8],[139,4,140,4],[140,4,141,4,"_query"],[140,10,141,10,"_query"],[140,11,141,11,"query"],[140,16,141,16],[140,18,141,18],[141,6,142,8],[141,12,142,14,"encodedQuery"],[141,24,142,26],[141,27,142,29],[141,31,142,29,"encode"],[141,46,142,35],[141,48,142,36,"query"],[141,53,142,41],[141,54,142,42],[142,6,143,8],[142,13,143,15,"encodedQuery"],[142,25,143,27],[142,26,143,28,"length"],[142,32,143,34],[142,35,143,37],[142,38,143,40],[142,41,143,43,"encodedQuery"],[142,53,143,55],[142,56,143,58],[142,58,143,60],[143,4,144,4],[144,2,145,0],[145,2,145,1,"exports"],[145,9,145,1],[145,10,145,1,"Transport"],[145,19,145,1],[145,22,145,1,"Transport"],[145,31,145,1],[146,0,145,1],[146,3]],"functionMap":{"names":["<global>","TransportError","TransportError#constructor","Transport","Transport#constructor","Transport#onError","Transport#open","Transport#close","Transport#send","Transport#onOpen","Transport#onData","Transport#onPacket","Transport#onClose","Transport#pause","Transport#createUri","Transport#_hostname","Transport#_port","Transport#_query"],"mappings":"AAA;OCM;ICC;KDK;CDC;OGC;ICO;KDQ;IEU;KFG;IGI;KHI;III;KJM;IKM;KLQ;IMM;KNI;IOO;KPG;IQM;KRE;ISM;KTG;IUM,kBV;IWC;KXO;IYC;KZG;IaC;KbS;IcC;KdG;CHC"}},"type":"js/module"}]}