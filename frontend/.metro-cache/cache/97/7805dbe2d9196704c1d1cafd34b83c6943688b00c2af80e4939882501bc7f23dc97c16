{"dependencies":[{"name":"../transport.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"q68AWRvh2qc0QUlp41HSOL9aMUA=","exportNames":["*"]}},{"name":"../globals.node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":46,"index":91}}],"key":"RPWURBgga4vfm2ZRigByneogh6w=","exportNames":["*"]}},{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":92},"end":{"line":3,"column":89,"index":181}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WT = void 0;\n  var _transport = require(_dependencyMap[0], \"../transport.js\");\n  var _globalsNode = require(_dependencyMap[1], \"../globals.node.js\");\n  var _engine = require(_dependencyMap[2], \"engine.io-parser\");\n  /**\n   * WebTransport transport based on the built-in `WebTransport` object.\n   *\n   * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n   * @see https://caniuse.com/webtransport\n   */\n  class WT extends _transport.Transport {\n    get name() {\n      return \"webtransport\";\n    }\n    doOpen() {\n      try {\n        // @ts-ignore\n        this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n      } catch (err) {\n        return this.emitReserved(\"error\", err);\n      }\n      this._transport.closed.then(() => {\n        this.onClose();\n      }).catch(err => {\n        this.onError(\"webtransport error\", err);\n      });\n      // note: we could have used async/await, but that would require some additional polyfills\n      this._transport.ready.then(() => {\n        this._transport.createBidirectionalStream().then(stream => {\n          const decoderStream = (0, _engine.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n          const reader = stream.readable.pipeThrough(decoderStream).getReader();\n          const encoderStream = (0, _engine.createPacketEncoderStream)();\n          encoderStream.readable.pipeTo(stream.writable);\n          this._writer = encoderStream.writable.getWriter();\n          const read = () => {\n            reader.read().then(({\n              done,\n              value\n            }) => {\n              if (done) {\n                return;\n              }\n              this.onPacket(value);\n              read();\n            }).catch(err => {});\n          };\n          read();\n          const packet = {\n            type: \"open\"\n          };\n          if (this.query.sid) {\n            packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n          }\n          this._writer.write(packet).then(() => this.onOpen());\n        });\n      });\n    }\n    write(packets) {\n      this.writable = false;\n      for (let i = 0; i < packets.length; i++) {\n        const packet = packets[i];\n        const lastPacket = i === packets.length - 1;\n        this._writer.write(packet).then(() => {\n          if (lastPacket) {\n            (0, _globalsNode.nextTick)(() => {\n              this.writable = true;\n              this.emitReserved(\"drain\");\n            }, this.setTimeoutFn);\n          }\n        });\n      }\n    }\n    doClose() {\n      var _a;\n      (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n  }\n  exports.WT = WT;\n});","lineCount":85,"map":[[6,2,1,0],[6,6,1,0,"_transport"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_globalsNode"],[7,18,2,0],[7,21,2,0,"require"],[7,28,2,0],[7,29,2,0,"_dependencyMap"],[7,43,2,0],[8,2,3,0],[8,6,3,0,"_engine"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,2,12,7],[17,8,12,13,"WT"],[17,10,12,15],[17,19,12,24,"Transport"],[17,39,12,33],[17,40,12,34],[18,4,13,4],[18,8,13,8,"name"],[18,12,13,12,"name"],[18,13,13,12],[18,15,13,15],[19,6,14,8],[19,13,14,15],[19,27,14,29],[20,4,15,4],[21,4,16,4,"doOpen"],[21,10,16,10,"doOpen"],[21,11,16,10],[21,13,16,13],[22,6,17,8],[22,10,17,12],[23,8,18,12],[24,8,19,12],[24,12,19,16],[24,13,19,17,"_transport"],[24,23,19,27],[24,26,19,30],[24,30,19,34,"WebTransport"],[24,42,19,46],[24,43,19,47],[24,47,19,51],[24,48,19,52,"createUri"],[24,57,19,61],[24,58,19,62],[24,65,19,69],[24,66,19,70],[24,68,19,72],[24,72,19,76],[24,73,19,77,"opts"],[24,77,19,81],[24,78,19,82,"transportOptions"],[24,94,19,98],[24,95,19,99],[24,99,19,103],[24,100,19,104,"name"],[24,104,19,108],[24,105,19,109],[24,106,19,110],[25,6,20,8],[25,7,20,9],[25,8,21,8],[25,15,21,15,"err"],[25,18,21,18],[25,20,21,20],[26,8,22,12],[26,15,22,19],[26,19,22,23],[26,20,22,24,"emitReserved"],[26,32,22,36],[26,33,22,37],[26,40,22,44],[26,42,22,46,"err"],[26,45,22,49],[26,46,22,50],[27,6,23,8],[28,6,24,8],[28,10,24,12],[28,11,24,13,"_transport"],[28,21,24,23],[28,22,24,24,"closed"],[28,28,24,30],[28,29,25,13,"then"],[28,33,25,17],[28,34,25,18],[28,40,25,24],[29,8,26,12],[29,12,26,16],[29,13,26,17,"onClose"],[29,20,26,24],[29,21,26,25],[29,22,26,26],[30,6,27,8],[30,7,27,9],[30,8,27,10],[30,9,28,13,"catch"],[30,14,28,18],[30,15,28,20,"err"],[30,18,28,23],[30,22,28,28],[31,8,29,12],[31,12,29,16],[31,13,29,17,"onError"],[31,20,29,24],[31,21,29,25],[31,41,29,45],[31,43,29,47,"err"],[31,46,29,50],[31,47,29,51],[32,6,30,8],[32,7,30,9],[32,8,30,10],[33,6,31,8],[34,6,32,8],[34,10,32,12],[34,11,32,13,"_transport"],[34,21,32,23],[34,22,32,24,"ready"],[34,27,32,29],[34,28,32,30,"then"],[34,32,32,34],[34,33,32,35],[34,39,32,41],[35,8,33,12],[35,12,33,16],[35,13,33,17,"_transport"],[35,23,33,27],[35,24,33,28,"createBidirectionalStream"],[35,49,33,53],[35,50,33,54],[35,51,33,55],[35,52,33,56,"then"],[35,56,33,60],[35,57,33,62,"stream"],[35,63,33,68],[35,67,33,73],[36,10,34,16],[36,16,34,22,"decoderStream"],[36,29,34,35],[36,32,34,38],[36,36,34,38,"createPacketDecoderStream"],[36,69,34,63],[36,71,34,64,"Number"],[36,77,34,70],[36,78,34,71,"MAX_SAFE_INTEGER"],[36,94,34,87],[36,96,34,89],[36,100,34,93],[36,101,34,94,"socket"],[36,107,34,100],[36,108,34,101,"binaryType"],[36,118,34,111],[36,119,34,112],[37,10,35,16],[37,16,35,22,"reader"],[37,22,35,28],[37,25,35,31,"stream"],[37,31,35,37],[37,32,35,38,"readable"],[37,40,35,46],[37,41,35,47,"pipeThrough"],[37,52,35,58],[37,53,35,59,"decoderStream"],[37,66,35,72],[37,67,35,73],[37,68,35,74,"getReader"],[37,77,35,83],[37,78,35,84],[37,79,35,85],[38,10,36,16],[38,16,36,22,"encoderStream"],[38,29,36,35],[38,32,36,38],[38,36,36,38,"createPacketEncoderStream"],[38,69,36,63],[38,71,36,64],[38,72,36,65],[39,10,37,16,"encoderStream"],[39,23,37,29],[39,24,37,30,"readable"],[39,32,37,38],[39,33,37,39,"pipeTo"],[39,39,37,45],[39,40,37,46,"stream"],[39,46,37,52],[39,47,37,53,"writable"],[39,55,37,61],[39,56,37,62],[40,10,38,16],[40,14,38,20],[40,15,38,21,"_writer"],[40,22,38,28],[40,25,38,31,"encoderStream"],[40,38,38,44],[40,39,38,45,"writable"],[40,47,38,53],[40,48,38,54,"getWriter"],[40,57,38,63],[40,58,38,64],[40,59,38,65],[41,10,39,16],[41,16,39,22,"read"],[41,20,39,26],[41,23,39,29,"read"],[41,24,39,29],[41,29,39,35],[42,12,40,20,"reader"],[42,18,40,26],[42,19,41,25,"read"],[42,23,41,29],[42,24,41,30],[42,25,41,31],[42,26,42,25,"then"],[42,30,42,29],[42,31,42,30],[42,32,42,31],[43,14,42,33,"done"],[43,18,42,37],[44,14,42,39,"value"],[45,12,42,45],[45,13,42,46],[45,18,42,51],[46,14,43,24],[46,18,43,28,"done"],[46,22,43,32],[46,24,43,34],[47,16,44,28],[48,14,45,24],[49,14,46,24],[49,18,46,28],[49,19,46,29,"onPacket"],[49,27,46,37],[49,28,46,38,"value"],[49,33,46,43],[49,34,46,44],[50,14,47,24,"read"],[50,18,47,28],[50,19,47,29],[50,20,47,30],[51,12,48,20],[51,13,48,21],[51,14,48,22],[51,15,49,25,"catch"],[51,20,49,30],[51,21,49,32,"err"],[51,24,49,35],[51,28,49,40],[51,29,50,20],[51,30,50,21],[51,31,50,22],[52,10,51,16],[52,11,51,17],[53,10,52,16,"read"],[53,14,52,20],[53,15,52,21],[53,16,52,22],[54,10,53,16],[54,16,53,22,"packet"],[54,22,53,28],[54,25,53,31],[55,12,53,33,"type"],[55,16,53,37],[55,18,53,39],[56,10,53,46],[56,11,53,47],[57,10,54,16],[57,14,54,20],[57,18,54,24],[57,19,54,25,"query"],[57,24,54,30],[57,25,54,31,"sid"],[57,28,54,34],[57,30,54,36],[58,12,55,20,"packet"],[58,18,55,26],[58,19,55,27,"data"],[58,23,55,31],[58,26,55,34],[58,37,55,45],[58,41,55,49],[58,42,55,50,"query"],[58,47,55,55],[58,48,55,56,"sid"],[58,51,55,59],[58,55,55,63],[59,10,56,16],[60,10,57,16],[60,14,57,20],[60,15,57,21,"_writer"],[60,22,57,28],[60,23,57,29,"write"],[60,28,57,34],[60,29,57,35,"packet"],[60,35,57,41],[60,36,57,42],[60,37,57,43,"then"],[60,41,57,47],[60,42,57,48],[60,48,57,54],[60,52,57,58],[60,53,57,59,"onOpen"],[60,59,57,65],[60,60,57,66],[60,61,57,67],[60,62,57,68],[61,8,58,12],[61,9,58,13],[61,10,58,14],[62,6,59,8],[62,7,59,9],[62,8,59,10],[63,4,60,4],[64,4,61,4,"write"],[64,9,61,9,"write"],[64,10,61,10,"packets"],[64,17,61,17],[64,19,61,19],[65,6,62,8],[65,10,62,12],[65,11,62,13,"writable"],[65,19,62,21],[65,22,62,24],[65,27,62,29],[66,6,63,8],[66,11,63,13],[66,15,63,17,"i"],[66,16,63,18],[66,19,63,21],[66,20,63,22],[66,22,63,24,"i"],[66,23,63,25],[66,26,63,28,"packets"],[66,33,63,35],[66,34,63,36,"length"],[66,40,63,42],[66,42,63,44,"i"],[66,43,63,45],[66,45,63,47],[66,47,63,49],[67,8,64,12],[67,14,64,18,"packet"],[67,20,64,24],[67,23,64,27,"packets"],[67,30,64,34],[67,31,64,35,"i"],[67,32,64,36],[67,33,64,37],[68,8,65,12],[68,14,65,18,"lastPacket"],[68,24,65,28],[68,27,65,31,"i"],[68,28,65,32],[68,33,65,37,"packets"],[68,40,65,44],[68,41,65,45,"length"],[68,47,65,51],[68,50,65,54],[68,51,65,55],[69,8,66,12],[69,12,66,16],[69,13,66,17,"_writer"],[69,20,66,24],[69,21,66,25,"write"],[69,26,66,30],[69,27,66,31,"packet"],[69,33,66,37],[69,34,66,38],[69,35,66,39,"then"],[69,39,66,43],[69,40,66,44],[69,46,66,50],[70,10,67,16],[70,14,67,20,"lastPacket"],[70,24,67,30],[70,26,67,32],[71,12,68,20],[71,16,68,20,"nextTick"],[71,37,68,28],[71,39,68,29],[71,45,68,35],[72,14,69,24],[72,18,69,28],[72,19,69,29,"writable"],[72,27,69,37],[72,30,69,40],[72,34,69,44],[73,14,70,24],[73,18,70,28],[73,19,70,29,"emitReserved"],[73,31,70,41],[73,32,70,42],[73,39,70,49],[73,40,70,50],[74,12,71,20],[74,13,71,21],[74,15,71,23],[74,19,71,27],[74,20,71,28,"setTimeoutFn"],[74,32,71,40],[74,33,71,41],[75,10,72,16],[76,8,73,12],[76,9,73,13],[76,10,73,14],[77,6,74,8],[78,4,75,4],[79,4,76,4,"doClose"],[79,11,76,11,"doClose"],[79,12,76,11],[79,14,76,14],[80,6,77,8],[80,10,77,12,"_a"],[80,12,77,14],[81,6,78,8],[81,7,78,9,"_a"],[81,9,78,11],[81,12,78,14],[81,16,78,18],[81,17,78,19,"_transport"],[81,27,78,29],[81,33,78,35],[81,37,78,39],[81,41,78,43,"_a"],[81,43,78,45],[81,48,78,50],[81,53,78,55],[81,54,78,56],[81,57,78,59],[81,62,78,64],[81,63,78,65],[81,66,78,68,"_a"],[81,68,78,70],[81,69,78,71,"close"],[81,74,78,76],[81,75,78,77],[81,76,78,78],[82,4,79,4],[83,2,80,0],[84,2,80,1,"exports"],[84,9,80,1],[84,10,80,1,"WT"],[84,12,80,1],[84,15,80,1,"WT"],[84,17,80,1],[85,0,80,1],[85,3]],"functionMap":{"names":["<global>","WT","WT#get__name","WT#doOpen","_transport.closed.then$argument_0","_transport.closed.then._catch$argument_0","_transport.ready.then$argument_0","_transport.createBidirectionalStream.then$argument_0","read","reader.read.then$argument_0","reader.read.then._catch$argument_0","_writer.write.then$argument_0","WT#write","nextTick$argument_0","WT#doClose"],"mappings":"AAA;OCW;ICC;KDE;IEC;kBCS;SDE;mBEC;SFE;mCGE;6DCC;6BCM;8BCG;qBDM;+BEC;qBFC;iBDC;gDIM,mBJ;aDC;SHC;KFC;IWC;4CDK;6BEE;qBFG;aCE;KXE;IaC;KbG;CDC"}},"type":"js/module"}]}