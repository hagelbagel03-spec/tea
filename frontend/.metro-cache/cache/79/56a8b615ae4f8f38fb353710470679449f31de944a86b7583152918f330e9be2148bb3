{"dependencies":[{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"]}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":55,"index":104}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"]}},{"name":"./util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":105},"end":{"line":3,"column":50,"index":155}}],"key":"+UpHPazG/Yk8JnTjB6d2Eo+vUl4=","exportNames":["*"]}},{"name":"./contrib/parseqs.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":156},"end":{"line":4,"column":46,"index":202}}],"key":"BJ+q1MtlpK8TmoXWscM6udPVjkM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TransportError = exports.Transport = void 0;\n  var _engine = require(_dependencyMap[0], \"engine.io-parser\");\n  var _componentEmitter = require(_dependencyMap[1], \"@socket.io/component-emitter\");\n  var _util = require(_dependencyMap[2], \"./util.js\");\n  var _parseqs = require(_dependencyMap[3], \"./contrib/parseqs.js\");\n  class TransportError extends Error {\n    constructor(reason, description, context) {\n      super(reason);\n      this.description = description;\n      this.context = context;\n      this.type = \"TransportError\";\n    }\n  }\n  exports.TransportError = TransportError;\n  class Transport extends _componentEmitter.Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n      super();\n      this.writable = false;\n      (0, _util.installTimerFunctions)(this, opts);\n      this.opts = opts;\n      this.query = opts.query;\n      this.socket = opts.socket;\n      this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n      super.emitReserved(\"error\", new TransportError(reason, description, context));\n      return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n      this.readyState = \"opening\";\n      this.doOpen();\n      return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n      if (this.readyState === \"opening\" || this.readyState === \"open\") {\n        this.doClose();\n        this.onClose();\n      }\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n      if (this.readyState === \"open\") {\n        this.write(packets);\n      } else {\n        // this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n      super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n      const packet = (0, _engine.decodePacket)(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n      super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n      this.readyState = \"closed\";\n      super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) {}\n    createUri(schema, query = {}) {\n      return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n    }\n    _hostname() {\n      const hostname = this.opts.hostname;\n      return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n      if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n        return \":\" + this.opts.port;\n      } else {\n        return \"\";\n      }\n    }\n    _query(query) {\n      const encodedQuery = (0, _parseqs.encode)(query);\n      return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n  }\n  exports.Transport = Transport;\n});","lineCount":141,"map":[[6,2,1,0],[6,6,1,0,"_engine"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,2,0],[7,6,2,0,"_componentEmitter"],[7,23,2,0],[7,26,2,0,"require"],[7,33,2,0],[7,34,2,0,"_dependencyMap"],[7,48,2,0],[8,2,3,0],[8,6,3,0,"_util"],[8,11,3,0],[8,14,3,0,"require"],[8,21,3,0],[8,22,3,0,"_dependencyMap"],[8,36,3,0],[9,2,4,0],[9,6,4,0,"_parseqs"],[9,14,4,0],[9,17,4,0,"require"],[9,24,4,0],[9,25,4,0,"_dependencyMap"],[9,39,4,0],[10,2,5,7],[10,8,5,13,"TransportError"],[10,22,5,27],[10,31,5,36,"Error"],[10,36,5,41],[10,37,5,42],[11,4,6,4,"constructor"],[11,15,6,15,"constructor"],[11,16,6,16,"reason"],[11,22,6,22],[11,24,6,24,"description"],[11,35,6,35],[11,37,6,37,"context"],[11,44,6,44],[11,46,6,46],[12,6,7,8],[12,11,7,13],[12,12,7,14,"reason"],[12,18,7,20],[12,19,7,21],[13,6,8,8],[13,10,8,12],[13,11,8,13,"description"],[13,22,8,24],[13,25,8,27,"description"],[13,36,8,38],[14,6,9,8],[14,10,9,12],[14,11,9,13,"context"],[14,18,9,20],[14,21,9,23,"context"],[14,28,9,30],[15,6,10,8],[15,10,10,12],[15,11,10,13,"type"],[15,15,10,17],[15,18,10,20],[15,34,10,36],[16,4,11,4],[17,2,12,0],[18,2,12,1,"exports"],[18,9,12,1],[18,10,12,1,"TransportError"],[18,24,12,1],[18,27,12,1,"TransportError"],[18,41,12,1],[19,2,13,7],[19,8,13,13,"Transport"],[19,17,13,22],[19,26,13,31,"Emitter"],[19,51,13,38],[19,52,13,39],[20,4,14,4],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,4,20,4,"constructor"],[26,15,20,15,"constructor"],[26,16,20,16,"opts"],[26,20,20,20],[26,22,20,22],[27,6,21,8],[27,11,21,13],[27,12,21,14],[27,13,21,15],[28,6,22,8],[28,10,22,12],[28,11,22,13,"writable"],[28,19,22,21],[28,22,22,24],[28,27,22,29],[29,6,23,8],[29,10,23,8,"installTimerFunctions"],[29,37,23,29],[29,39,23,30],[29,43,23,34],[29,45,23,36,"opts"],[29,49,23,40],[29,50,23,41],[30,6,24,8],[30,10,24,12],[30,11,24,13,"opts"],[30,15,24,17],[30,18,24,20,"opts"],[30,22,24,24],[31,6,25,8],[31,10,25,12],[31,11,25,13,"query"],[31,16,25,18],[31,19,25,21,"opts"],[31,23,25,25],[31,24,25,26,"query"],[31,29,25,31],[32,6,26,8],[32,10,26,12],[32,11,26,13,"socket"],[32,17,26,19],[32,20,26,22,"opts"],[32,24,26,26],[32,25,26,27,"socket"],[32,31,26,33],[33,6,27,8],[33,10,27,12],[33,11,27,13,"supportsBinary"],[33,25,27,27],[33,28,27,30],[33,29,27,31,"opts"],[33,33,27,35],[33,34,27,36,"forceBase64"],[33,45,27,47],[34,4,28,4],[35,4,29,4],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,4,38,4,"onError"],[44,11,38,11,"onError"],[44,12,38,12,"reason"],[44,18,38,18],[44,20,38,20,"description"],[44,31,38,31],[44,33,38,33,"context"],[44,40,38,40],[44,42,38,42],[45,6,39,8],[45,11,39,13],[45,12,39,14,"emitReserved"],[45,24,39,26],[45,25,39,27],[45,32,39,34],[45,34,39,36],[45,38,39,40,"TransportError"],[45,52,39,54],[45,53,39,55,"reason"],[45,59,39,61],[45,61,39,63,"description"],[45,72,39,74],[45,74,39,76,"context"],[45,81,39,83],[45,82,39,84],[45,83,39,85],[46,6,40,8],[46,13,40,15],[46,17,40,19],[47,4,41,4],[48,4,42,4],[49,0,43,0],[50,0,44,0],[51,4,45,4,"open"],[51,8,45,8,"open"],[51,9,45,8],[51,11,45,11],[52,6,46,8],[52,10,46,12],[52,11,46,13,"readyState"],[52,21,46,23],[52,24,46,26],[52,33,46,35],[53,6,47,8],[53,10,47,12],[53,11,47,13,"doOpen"],[53,17,47,19],[53,18,47,20],[53,19,47,21],[54,6,48,8],[54,13,48,15],[54,17,48,19],[55,4,49,4],[56,4,50,4],[57,0,51,0],[58,0,52,0],[59,4,53,4,"close"],[59,9,53,9,"close"],[59,10,53,9],[59,12,53,12],[60,6,54,8],[60,10,54,12],[60,14,54,16],[60,15,54,17,"readyState"],[60,25,54,27],[60,30,54,32],[60,39,54,41],[60,43,54,45],[60,47,54,49],[60,48,54,50,"readyState"],[60,58,54,60],[60,63,54,65],[60,69,54,71],[60,71,54,73],[61,8,55,12],[61,12,55,16],[61,13,55,17,"doClose"],[61,20,55,24],[61,21,55,25],[61,22,55,26],[62,8,56,12],[62,12,56,16],[62,13,56,17,"onClose"],[62,20,56,24],[62,21,56,25],[62,22,56,26],[63,6,57,8],[64,6,58,8],[64,13,58,15],[64,17,58,19],[65,4,59,4],[66,4,60,4],[67,0,61,0],[68,0,62,0],[69,0,63,0],[70,0,64,0],[71,4,65,4,"send"],[71,8,65,8,"send"],[71,9,65,9,"packets"],[71,16,65,16],[71,18,65,18],[72,6,66,8],[72,10,66,12],[72,14,66,16],[72,15,66,17,"readyState"],[72,25,66,27],[72,30,66,32],[72,36,66,38],[72,38,66,40],[73,8,67,12],[73,12,67,16],[73,13,67,17,"write"],[73,18,67,22],[73,19,67,23,"packets"],[73,26,67,30],[73,27,67,31],[74,6,68,8],[74,7,68,9],[74,13,69,13],[75,8,70,12],[76,6,70,12],[77,4,72,4],[78,4,73,4],[79,0,74,0],[80,0,75,0],[81,0,76,0],[82,0,77,0],[83,4,78,4,"onOpen"],[83,10,78,10,"onOpen"],[83,11,78,10],[83,13,78,13],[84,6,79,8],[84,10,79,12],[84,11,79,13,"readyState"],[84,21,79,23],[84,24,79,26],[84,30,79,32],[85,6,80,8],[85,10,80,12],[85,11,80,13,"writable"],[85,19,80,21],[85,22,80,24],[85,26,80,28],[86,6,81,8],[86,11,81,13],[86,12,81,14,"emitReserved"],[86,24,81,26],[86,25,81,27],[86,31,81,33],[86,32,81,34],[87,4,82,4],[88,4,83,4],[89,0,84,0],[90,0,85,0],[91,0,86,0],[92,0,87,0],[93,0,88,0],[94,4,89,4,"onData"],[94,10,89,10,"onData"],[94,11,89,11,"data"],[94,15,89,15],[94,17,89,17],[95,6,90,8],[95,12,90,14,"packet"],[95,18,90,20],[95,21,90,23],[95,25,90,23,"decodePacket"],[95,45,90,35],[95,47,90,36,"data"],[95,51,90,40],[95,53,90,42],[95,57,90,46],[95,58,90,47,"socket"],[95,64,90,53],[95,65,90,54,"binaryType"],[95,75,90,64],[95,76,90,65],[96,6,91,8],[96,10,91,12],[96,11,91,13,"onPacket"],[96,19,91,21],[96,20,91,22,"packet"],[96,26,91,28],[96,27,91,29],[97,4,92,4],[98,4,93,4],[99,0,94,0],[100,0,95,0],[101,0,96,0],[102,0,97,0],[103,4,98,4,"onPacket"],[103,12,98,12,"onPacket"],[103,13,98,13,"packet"],[103,19,98,19],[103,21,98,21],[104,6,99,8],[104,11,99,13],[104,12,99,14,"emitReserved"],[104,24,99,26],[104,25,99,27],[104,33,99,35],[104,35,99,37,"packet"],[104,41,99,43],[104,42,99,44],[105,4,100,4],[106,4,101,4],[107,0,102,0],[108,0,103,0],[109,0,104,0],[110,0,105,0],[111,4,106,4,"onClose"],[111,11,106,11,"onClose"],[111,12,106,12,"details"],[111,19,106,19],[111,21,106,21],[112,6,107,8],[112,10,107,12],[112,11,107,13,"readyState"],[112,21,107,23],[112,24,107,26],[112,32,107,34],[113,6,108,8],[113,11,108,13],[113,12,108,14,"emitReserved"],[113,24,108,26],[113,25,108,27],[113,32,108,34],[113,34,108,36,"details"],[113,41,108,43],[113,42,108,44],[114,4,109,4],[115,4,110,4],[116,0,111,0],[117,0,112,0],[118,0,113,0],[119,0,114,0],[120,4,115,4,"pause"],[120,9,115,9,"pause"],[120,10,115,10,"onPause"],[120,17,115,17],[120,19,115,19],[120,20,115,21],[121,4,116,4,"createUri"],[121,13,116,13,"createUri"],[121,14,116,14,"schema"],[121,20,116,20],[121,22,116,22,"query"],[121,27,116,27],[121,30,116,30],[121,31,116,31],[121,32,116,32],[121,34,116,34],[122,6,117,8],[122,13,117,16,"schema"],[122,19,117,22],[122,22,118,12],[122,27,118,17],[122,30,119,12],[122,34,119,16],[122,35,119,17,"_hostname"],[122,44,119,26],[122,45,119,27],[122,46,119,28],[122,49,120,12],[122,53,120,16],[122,54,120,17,"_port"],[122,59,120,22],[122,60,120,23],[122,61,120,24],[122,64,121,12],[122,68,121,16],[122,69,121,17,"opts"],[122,73,121,21],[122,74,121,22,"path"],[122,78,121,26],[122,81,122,12],[122,85,122,16],[122,86,122,17,"_query"],[122,92,122,23],[122,93,122,24,"query"],[122,98,122,29],[122,99,122,30],[123,4,123,4],[124,4,124,4,"_hostname"],[124,13,124,13,"_hostname"],[124,14,124,13],[124,16,124,16],[125,6,125,8],[125,12,125,14,"hostname"],[125,20,125,22],[125,23,125,25],[125,27,125,29],[125,28,125,30,"opts"],[125,32,125,34],[125,33,125,35,"hostname"],[125,41,125,43],[126,6,126,8],[126,13,126,15,"hostname"],[126,21,126,23],[126,22,126,24,"indexOf"],[126,29,126,31],[126,30,126,32],[126,33,126,35],[126,34,126,36],[126,39,126,41],[126,40,126,42],[126,41,126,43],[126,44,126,46,"hostname"],[126,52,126,54],[126,55,126,57],[126,58,126,60],[126,61,126,63,"hostname"],[126,69,126,71],[126,72,126,74],[126,75,126,77],[127,4,127,4],[128,4,128,4,"_port"],[128,9,128,9,"_port"],[128,10,128,9],[128,12,128,12],[129,6,129,8],[129,10,129,12],[129,14,129,16],[129,15,129,17,"opts"],[129,19,129,21],[129,20,129,22,"port"],[129,24,129,26],[129,29,130,14],[129,33,130,18],[129,34,130,19,"opts"],[129,38,130,23],[129,39,130,24,"secure"],[129,45,130,30],[129,49,130,34,"Number"],[129,55,130,40],[129,56,130,41],[129,60,130,45],[129,61,130,46,"opts"],[129,65,130,50],[129,66,130,51,"port"],[129,70,130,55],[129,75,130,60],[129,78,130,63],[129,79,130,64],[129,83,131,17],[129,84,131,18],[129,88,131,22],[129,89,131,23,"opts"],[129,93,131,27],[129,94,131,28,"secure"],[129,100,131,34],[129,104,131,38,"Number"],[129,110,131,44],[129,111,131,45],[129,115,131,49],[129,116,131,50,"opts"],[129,120,131,54],[129,121,131,55,"port"],[129,125,131,59],[129,126,131,60],[129,131,131,65],[129,133,131,68],[129,134,131,69],[129,136,131,71],[130,8,132,12],[130,15,132,19],[130,18,132,22],[130,21,132,25],[130,25,132,29],[130,26,132,30,"opts"],[130,30,132,34],[130,31,132,35,"port"],[130,35,132,39],[131,6,133,8],[131,7,133,9],[131,13,134,13],[132,8,135,12],[132,15,135,19],[132,17,135,21],[133,6,136,8],[134,4,137,4],[135,4,138,4,"_query"],[135,10,138,10,"_query"],[135,11,138,11,"query"],[135,16,138,16],[135,18,138,18],[136,6,139,8],[136,12,139,14,"encodedQuery"],[136,24,139,26],[136,27,139,29],[136,31,139,29,"encode"],[136,46,139,35],[136,48,139,36,"query"],[136,53,139,41],[136,54,139,42],[137,6,140,8],[137,13,140,15,"encodedQuery"],[137,25,140,27],[137,26,140,28,"length"],[137,32,140,34],[137,35,140,37],[137,38,140,40],[137,41,140,43,"encodedQuery"],[137,53,140,55],[137,56,140,58],[137,58,140,60],[138,4,141,4],[139,2,142,0],[140,2,142,1,"exports"],[140,9,142,1],[140,10,142,1,"Transport"],[140,19,142,1],[140,22,142,1,"Transport"],[140,31,142,1],[141,0,142,1],[141,3]],"functionMap":{"names":["<global>","TransportError","TransportError#constructor","Transport","Transport#constructor","Transport#onError","Transport#open","Transport#close","Transport#send","Transport#onOpen","Transport#onData","Transport#onPacket","Transport#onClose","Transport#pause","Transport#createUri","Transport#_hostname","Transport#_port","Transport#_query"],"mappings":"AAA;OCI;ICC;KDK;CDC;OGC;ICO;KDQ;IEU;KFG;IGI;KHI;III;KJM;IKM;KLO;IMM;KNI;IOO;KPG;IQM;KRE;ISM;KTG;IUM,kBV;IWC;KXO;IYC;KZG;IaC;KbS;IcC;KdG;CHC"}},"type":"js/module"}]}