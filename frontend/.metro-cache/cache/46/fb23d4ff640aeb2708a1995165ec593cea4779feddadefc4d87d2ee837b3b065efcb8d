{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"engine.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"47uBFHNKf+pJCWjWFCflLVQYGvc=","exportNames":["*"]}},{"name":"debug","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":32,"index":74}}],"key":"Nx7LMnUOZdRc8E6QIb5nvmtJE+4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.url = url;\n  var _engine = require(_dependencyMap[1], \"engine.io-client\");\n  var _debug = _interopRequireDefault(require(_dependencyMap[2], \"debug\"));\n  // debug()\n  const debug = (0, _debug.default)(\"socket.io-client:url\"); // debug()\n  /**\n   * URL parser.\n   *\n   * @param uri - url\n   * @param path - the request path of the connection\n   * @param loc - An object meant to mimic window.location.\n   *        Defaults to window.location.\n   * @public\n   */\n  function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n      if (\"/\" === uri.charAt(0)) {\n        if (\"/\" === uri.charAt(1)) {\n          uri = loc.protocol + uri;\n        } else {\n          uri = loc.host + uri;\n        }\n      }\n      if (!/^(https?|wss?):\\/\\//.test(uri)) {\n        debug(\"protocol-less url %s\", uri);\n        if (\"undefined\" !== typeof loc) {\n          uri = loc.protocol + \"//\" + uri;\n        } else {\n          uri = \"https://\" + uri;\n        }\n      }\n      // parse\n      debug(\"parse %s\", uri);\n      obj = (0, _engine.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n      if (/^(http|ws)$/.test(obj.protocol)) {\n        obj.port = \"80\";\n      } else if (/^(http|ws)s$/.test(obj.protocol)) {\n        obj.port = \"443\";\n      }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n  }\n});","lineCount":63,"map":[[7,2,1,0],[7,6,1,0,"_engine"],[7,13,1,0],[7,16,1,0,"require"],[7,23,1,0],[7,24,1,0,"_dependencyMap"],[7,38,1,0],[8,2,2,0],[8,6,2,0,"_debug"],[8,12,2,0],[8,15,2,0,"_interopRequireDefault"],[8,37,2,0],[8,38,2,0,"require"],[8,45,2,0],[8,46,2,0,"_dependencyMap"],[8,60,2,0],[9,2,2,33],[10,2,3,0],[10,8,3,6,"debug"],[10,13,3,11],[10,16,3,14],[10,20,3,14,"debugModule"],[10,34,3,25],[10,36,3,26],[10,58,3,48],[10,59,3,49],[10,60,3,50],[10,61,3,51],[11,2,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,2,13,7],[20,11,13,16,"url"],[20,14,13,19,"url"],[20,15,13,20,"uri"],[20,18,13,23],[20,20,13,25,"path"],[20,24,13,29],[20,27,13,32],[20,29,13,34],[20,31,13,36,"loc"],[20,34,13,39],[20,36,13,41],[21,4,14,4],[21,8,14,8,"obj"],[21,11,14,11],[21,14,14,14,"uri"],[21,17,14,17],[22,4,15,4],[23,4,16,4,"loc"],[23,7,16,7],[23,10,16,10,"loc"],[23,13,16,13],[23,17,16,18],[23,24,16,25,"location"],[23,32,16,33],[23,37,16,38],[23,48,16,49],[23,52,16,53,"location"],[23,60,16,62],[24,4,17,4],[24,8,17,8],[24,12,17,12],[24,16,17,16,"uri"],[24,19,17,19],[24,21,18,8,"uri"],[24,24,18,11],[24,27,18,14,"loc"],[24,30,18,17],[24,31,18,18,"protocol"],[24,39,18,26],[24,42,18,29],[24,46,18,33],[24,49,18,36,"loc"],[24,52,18,39],[24,53,18,40,"host"],[24,57,18,44],[25,4,19,4],[26,4,20,4],[26,8,20,8],[26,15,20,15,"uri"],[26,18,20,18],[26,23,20,23],[26,31,20,31],[26,33,20,33],[27,6,21,8],[27,10,21,12],[27,13,21,15],[27,18,21,20,"uri"],[27,21,21,23],[27,22,21,24,"charAt"],[27,28,21,30],[27,29,21,31],[27,30,21,32],[27,31,21,33],[27,33,21,35],[28,8,22,12],[28,12,22,16],[28,15,22,19],[28,20,22,24,"uri"],[28,23,22,27],[28,24,22,28,"charAt"],[28,30,22,34],[28,31,22,35],[28,32,22,36],[28,33,22,37],[28,35,22,39],[29,10,23,16,"uri"],[29,13,23,19],[29,16,23,22,"loc"],[29,19,23,25],[29,20,23,26,"protocol"],[29,28,23,34],[29,31,23,37,"uri"],[29,34,23,40],[30,8,24,12],[30,9,24,13],[30,15,25,17],[31,10,26,16,"uri"],[31,13,26,19],[31,16,26,22,"loc"],[31,19,26,25],[31,20,26,26,"host"],[31,24,26,30],[31,27,26,33,"uri"],[31,30,26,36],[32,8,27,12],[33,6,28,8],[34,6,29,8],[34,10,29,12],[34,11,29,13],[34,32,29,34],[34,33,29,35,"test"],[34,37,29,39],[34,38,29,40,"uri"],[34,41,29,43],[34,42,29,44],[34,44,29,46],[35,8,30,12,"debug"],[35,13,30,17],[35,14,30,18],[35,36,30,40],[35,38,30,42,"uri"],[35,41,30,45],[35,42,30,46],[36,8,31,12],[36,12,31,16],[36,23,31,27],[36,28,31,32],[36,35,31,39,"loc"],[36,38,31,42],[36,40,31,44],[37,10,32,16,"uri"],[37,13,32,19],[37,16,32,22,"loc"],[37,19,32,25],[37,20,32,26,"protocol"],[37,28,32,34],[37,31,32,37],[37,35,32,41],[37,38,32,44,"uri"],[37,41,32,47],[38,8,33,12],[38,9,33,13],[38,15,34,17],[39,10,35,16,"uri"],[39,13,35,19],[39,16,35,22],[39,26,35,32],[39,29,35,35,"uri"],[39,32,35,38],[40,8,36,12],[41,6,37,8],[42,6,38,8],[43,6,39,8,"debug"],[43,11,39,13],[43,12,39,14],[43,22,39,24],[43,24,39,26,"uri"],[43,27,39,29],[43,28,39,30],[44,6,40,8,"obj"],[44,9,40,11],[44,12,40,14],[44,16,40,14,"parse"],[44,29,40,19],[44,31,40,20,"uri"],[44,34,40,23],[44,35,40,24],[45,4,41,4],[46,4,42,4],[47,4,43,4],[47,8,43,8],[47,9,43,9,"obj"],[47,12,43,12],[47,13,43,13,"port"],[47,17,43,17],[47,19,43,19],[48,6,44,8],[48,10,44,12],[48,23,44,25],[48,24,44,26,"test"],[48,28,44,30],[48,29,44,31,"obj"],[48,32,44,34],[48,33,44,35,"protocol"],[48,41,44,43],[48,42,44,44],[48,44,44,46],[49,8,45,12,"obj"],[49,11,45,15],[49,12,45,16,"port"],[49,16,45,20],[49,19,45,23],[49,23,45,27],[50,6,46,8],[50,7,46,9],[50,13,47,13],[50,17,47,17],[50,31,47,31],[50,32,47,32,"test"],[50,36,47,36],[50,37,47,37,"obj"],[50,40,47,40],[50,41,47,41,"protocol"],[50,49,47,49],[50,50,47,50],[50,52,47,52],[51,8,48,12,"obj"],[51,11,48,15],[51,12,48,16,"port"],[51,16,48,20],[51,19,48,23],[51,24,48,28],[52,6,49,8],[53,4,50,4],[54,4,51,4,"obj"],[54,7,51,7],[54,8,51,8,"path"],[54,12,51,12],[54,15,51,15,"obj"],[54,18,51,18],[54,19,51,19,"path"],[54,23,51,23],[54,27,51,27],[54,30,51,30],[55,4,52,4],[55,10,52,10,"ipv6"],[55,14,52,14],[55,17,52,17,"obj"],[55,20,52,20],[55,21,52,21,"host"],[55,25,52,25],[55,26,52,26,"indexOf"],[55,33,52,33],[55,34,52,34],[55,37,52,37],[55,38,52,38],[55,43,52,43],[55,44,52,44],[55,45,52,45],[56,4,53,4],[56,10,53,10,"host"],[56,14,53,14],[56,17,53,17,"ipv6"],[56,21,53,21],[56,24,53,24],[56,27,53,27],[56,30,53,30,"obj"],[56,33,53,33],[56,34,53,34,"host"],[56,38,53,38],[56,41,53,41],[56,44,53,44],[56,47,53,47,"obj"],[56,50,53,50],[56,51,53,51,"host"],[56,55,53,55],[57,4,54,4],[58,4,55,4,"obj"],[58,7,55,7],[58,8,55,8,"id"],[58,10,55,10],[58,13,55,13,"obj"],[58,16,55,16],[58,17,55,17,"protocol"],[58,25,55,25],[58,28,55,28],[58,33,55,33],[58,36,55,36,"host"],[58,40,55,40],[58,43,55,43],[58,46,55,46],[58,49,55,49,"obj"],[58,52,55,52],[58,53,55,53,"port"],[58,57,55,57],[58,60,55,60,"path"],[58,64,55,64],[59,4,56,4],[60,4,57,4,"obj"],[60,7,57,7],[60,8,57,8,"href"],[60,12,57,12],[60,15,58,8,"obj"],[60,18,58,11],[60,19,58,12,"protocol"],[60,27,58,20],[60,30,59,12],[60,35,59,17],[60,38,60,12,"host"],[60,42,60,16],[60,46,61,13,"loc"],[60,49,61,16],[60,53,61,20,"loc"],[60,56,61,23],[60,57,61,24,"port"],[60,61,61,28],[60,66,61,33,"obj"],[60,69,61,36],[60,70,61,37,"port"],[60,74,61,41],[60,77,61,44],[60,79,61,46],[60,82,61,49],[60,85,61,52],[60,88,61,55,"obj"],[60,91,61,58],[60,92,61,59,"port"],[60,96,61,63],[60,97,61,64],[61,4,62,4],[61,11,62,11,"obj"],[61,14,62,14],[62,2,63,0],[63,0,63,1],[63,3]],"functionMap":{"names":["<global>","url"],"mappings":"AAA;OCY;CDkD"}},"type":"js/module"}]}