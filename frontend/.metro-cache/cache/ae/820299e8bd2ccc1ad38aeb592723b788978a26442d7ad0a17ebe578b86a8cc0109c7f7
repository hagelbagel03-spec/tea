{"dependencies":[{"name":"./commons.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"glGFVKq6JnHqcEVNii1WndfU66Y=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodePacket = void 0;\n  exports.encodePacketToBinary = encodePacketToBinary;\n  var _commons = require(_dependencyMap[0], \"./commons.js\");\n  const withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\n  const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n  // ArrayBuffer.isView method is not defined in IE10\n  const isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n  };\n  const encodePacket = ({\n    type,\n    data\n  }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(data, callback);\n      }\n    } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n      if (supportsBinary) {\n        return callback(data);\n      } else {\n        return encodeBlobAsBase64(new Blob([data]), callback);\n      }\n    }\n    // plain string\n    return callback(_commons.PACKET_TYPES[type] + (data || \"\"));\n  };\n  exports.encodePacket = encodePacket;\n  const encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n      const content = fileReader.result.split(\",\")[1];\n      callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n  };\n  function toArray(data) {\n    if (data instanceof Uint8Array) {\n      return data;\n    } else if (data instanceof ArrayBuffer) {\n      return new Uint8Array(data);\n    } else {\n      return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n  }\n  let TEXT_ENCODER;\n  function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n      return packet.data.arrayBuffer().then(toArray).then(callback);\n    } else if (withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n      return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n      if (!TEXT_ENCODER) {\n        TEXT_ENCODER = new TextEncoder();\n      }\n      callback(TEXT_ENCODER.encode(encoded));\n    });\n  }\n});","lineCount":66,"map":[[7,2,1,0],[7,6,1,0,"_commons"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,8,2,6,"withNativeBlob"],[8,22,2,20],[8,25,2,23],[8,32,2,30,"Blob"],[8,36,2,34],[8,41,2,39],[8,51,2,49],[8,55,3,5],[8,62,3,12,"Blob"],[8,66,3,16],[8,71,3,21],[8,82,3,32],[8,86,4,8,"Object"],[8,92,4,14],[8,93,4,15,"prototype"],[8,102,4,24],[8,103,4,25,"toString"],[8,111,4,33],[8,112,4,34,"call"],[8,116,4,38],[8,117,4,39,"Blob"],[8,121,4,43],[8,122,4,44],[8,127,4,49],[8,153,4,76],[9,2,5,0],[9,8,5,6,"withNativeArrayBuffer"],[9,29,5,27],[9,32,5,30],[9,39,5,37,"ArrayBuffer"],[9,50,5,48],[9,55,5,53],[9,65,5,63],[10,2,6,0],[11,2,7,0],[11,8,7,6,"isView"],[11,14,7,12],[11,17,7,16,"obj"],[11,20,7,19],[11,24,7,24],[12,4,8,4],[12,11,8,11],[12,18,8,18,"ArrayBuffer"],[12,29,8,29],[12,30,8,30,"isView"],[12,36,8,36],[12,41,8,41],[12,51,8,51],[12,54,9,10,"ArrayBuffer"],[12,65,9,21],[12,66,9,22,"isView"],[12,72,9,28],[12,73,9,29,"obj"],[12,76,9,32],[12,77,9,33],[12,80,10,10,"obj"],[12,83,10,13],[12,87,10,17,"obj"],[12,90,10,20],[12,91,10,21,"buffer"],[12,97,10,27],[12,109,10,39,"ArrayBuffer"],[12,120,10,50],[13,2,11,0],[13,3,11,1],[14,2,12,0],[14,8,12,6,"encodePacket"],[14,20,12,18],[14,23,12,21,"encodePacket"],[14,24,12,22],[15,4,12,24,"type"],[15,8,12,28],[16,4,12,30,"data"],[17,2,12,35],[17,3,12,36],[17,5,12,38,"supportsBinary"],[17,19,12,52],[17,21,12,54,"callback"],[17,29,12,62],[17,34,12,67],[18,4,13,4],[18,8,13,8,"withNativeBlob"],[18,22,13,22],[18,26,13,26,"data"],[18,30,13,30],[18,42,13,42,"Blob"],[18,46,13,46],[18,48,13,48],[19,6,14,8],[19,10,14,12,"supportsBinary"],[19,24,14,26],[19,26,14,28],[20,8,15,12],[20,15,15,19,"callback"],[20,23,15,27],[20,24,15,28,"data"],[20,28,15,32],[20,29,15,33],[21,6,16,8],[21,7,16,9],[21,13,17,13],[22,8,18,12],[22,15,18,19,"encodeBlobAsBase64"],[22,33,18,37],[22,34,18,38,"data"],[22,38,18,42],[22,40,18,44,"callback"],[22,48,18,52],[22,49,18,53],[23,6,19,8],[24,4,20,4],[24,5,20,5],[24,11,21,9],[24,15,21,13,"withNativeArrayBuffer"],[24,36,21,34],[24,41,22,9,"data"],[24,45,22,13],[24,57,22,25,"ArrayBuffer"],[24,68,22,36],[24,72,22,40,"isView"],[24,78,22,46],[24,79,22,47,"data"],[24,83,22,51],[24,84,22,52],[24,85,22,53],[24,87,22,55],[25,6,23,8],[25,10,23,12,"supportsBinary"],[25,24,23,26],[25,26,23,28],[26,8,24,12],[26,15,24,19,"callback"],[26,23,24,27],[26,24,24,28,"data"],[26,28,24,32],[26,29,24,33],[27,6,25,8],[27,7,25,9],[27,13,26,13],[28,8,27,12],[28,15,27,19,"encodeBlobAsBase64"],[28,33,27,37],[28,34,27,38],[28,38,27,42,"Blob"],[28,42,27,46],[28,43,27,47],[28,44,27,48,"data"],[28,48,27,52],[28,49,27,53],[28,50,27,54],[28,52,27,56,"callback"],[28,60,27,64],[28,61,27,65],[29,6,28,8],[30,4,29,4],[31,4,30,4],[32,4,31,4],[32,11,31,11,"callback"],[32,19,31,19],[32,20,31,20,"PACKET_TYPES"],[32,41,31,32],[32,42,31,33,"type"],[32,46,31,37],[32,47,31,38],[32,51,31,42,"data"],[32,55,31,46],[32,59,31,50],[32,61,31,52],[32,62,31,53],[32,63,31,54],[33,2,32,0],[33,3,32,1],[34,2,32,2,"exports"],[34,9,32,2],[34,10,32,2,"encodePacket"],[34,22,32,2],[34,25,32,2,"encodePacket"],[34,37,32,2],[35,2,33,0],[35,8,33,6,"encodeBlobAsBase64"],[35,26,33,24],[35,29,33,27,"encodeBlobAsBase64"],[35,30,33,28,"data"],[35,34,33,32],[35,36,33,34,"callback"],[35,44,33,42],[35,49,33,47],[36,4,34,4],[36,10,34,10,"fileReader"],[36,20,34,20],[36,23,34,23],[36,27,34,27,"FileReader"],[36,37,34,37],[36,38,34,38],[36,39,34,39],[37,4,35,4,"fileReader"],[37,14,35,14],[37,15,35,15,"onload"],[37,21,35,21],[37,24,35,24],[37,36,35,36],[38,6,36,8],[38,12,36,14,"content"],[38,19,36,21],[38,22,36,24,"fileReader"],[38,32,36,34],[38,33,36,35,"result"],[38,39,36,41],[38,40,36,42,"split"],[38,45,36,47],[38,46,36,48],[38,49,36,51],[38,50,36,52],[38,51,36,53],[38,52,36,54],[38,53,36,55],[39,6,37,8,"callback"],[39,14,37,16],[39,15,37,17],[39,18,37,20],[39,22,37,24,"content"],[39,29,37,31],[39,33,37,35],[39,35,37,37],[39,36,37,38],[39,37,37,39],[40,4,38,4],[40,5,38,5],[41,4,39,4],[41,11,39,11,"fileReader"],[41,21,39,21],[41,22,39,22,"readAsDataURL"],[41,35,39,35],[41,36,39,36,"data"],[41,40,39,40],[41,41,39,41],[42,2,40,0],[42,3,40,1],[43,2,41,0],[43,11,41,9,"toArray"],[43,18,41,16,"toArray"],[43,19,41,17,"data"],[43,23,41,21],[43,25,41,23],[44,4,42,4],[44,8,42,8,"data"],[44,12,42,12],[44,24,42,24,"Uint8Array"],[44,34,42,34],[44,36,42,36],[45,6,43,8],[45,13,43,15,"data"],[45,17,43,19],[46,4,44,4],[46,5,44,5],[46,11,45,9],[46,15,45,13,"data"],[46,19,45,17],[46,31,45,29,"ArrayBuffer"],[46,42,45,40],[46,44,45,42],[47,6,46,8],[47,13,46,15],[47,17,46,19,"Uint8Array"],[47,27,46,29],[47,28,46,30,"data"],[47,32,46,34],[47,33,46,35],[48,4,47,4],[48,5,47,5],[48,11,48,9],[49,6,49,8],[49,13,49,15],[49,17,49,19,"Uint8Array"],[49,27,49,29],[49,28,49,30,"data"],[49,32,49,34],[49,33,49,35,"buffer"],[49,39,49,41],[49,41,49,43,"data"],[49,45,49,47],[49,46,49,48,"byteOffset"],[49,56,49,58],[49,58,49,60,"data"],[49,62,49,64],[49,63,49,65,"byteLength"],[49,73,49,75],[49,74,49,76],[50,4,50,4],[51,2,51,0],[52,2,52,0],[52,6,52,4,"TEXT_ENCODER"],[52,18,52,16],[53,2,53,7],[53,11,53,16,"encodePacketToBinary"],[53,31,53,36,"encodePacketToBinary"],[53,32,53,37,"packet"],[53,38,53,43],[53,40,53,45,"callback"],[53,48,53,53],[53,50,53,55],[54,4,54,4],[54,8,54,8,"withNativeBlob"],[54,22,54,22],[54,26,54,26,"packet"],[54,32,54,32],[54,33,54,33,"data"],[54,37,54,37],[54,49,54,49,"Blob"],[54,53,54,53],[54,55,54,55],[55,6,55,8],[55,13,55,15,"packet"],[55,19,55,21],[55,20,55,22,"data"],[55,24,55,26],[55,25,55,27,"arrayBuffer"],[55,36,55,38],[55,37,55,39],[55,38,55,40],[55,39,55,41,"then"],[55,43,55,45],[55,44,55,46,"toArray"],[55,51,55,53],[55,52,55,54],[55,53,55,55,"then"],[55,57,55,59],[55,58,55,60,"callback"],[55,66,55,68],[55,67,55,69],[56,4,56,4],[56,5,56,5],[56,11,57,9],[56,15,57,13,"withNativeArrayBuffer"],[56,36,57,34],[56,41,58,9,"packet"],[56,47,58,15],[56,48,58,16,"data"],[56,52,58,20],[56,64,58,32,"ArrayBuffer"],[56,75,58,43],[56,79,58,47,"isView"],[56,85,58,53],[56,86,58,54,"packet"],[56,92,58,60],[56,93,58,61,"data"],[56,97,58,65],[56,98,58,66],[56,99,58,67],[56,101,58,69],[57,6,59,8],[57,13,59,15,"callback"],[57,21,59,23],[57,22,59,24,"toArray"],[57,29,59,31],[57,30,59,32,"packet"],[57,36,59,38],[57,37,59,39,"data"],[57,41,59,43],[57,42,59,44],[57,43,59,45],[58,4,60,4],[59,4,61,4,"encodePacket"],[59,16,61,16],[59,17,61,17,"packet"],[59,23,61,23],[59,25,61,25],[59,30,61,30],[59,32,61,33,"encoded"],[59,39,61,40],[59,43,61,45],[60,6,62,8],[60,10,62,12],[60,11,62,13,"TEXT_ENCODER"],[60,23,62,25],[60,25,62,27],[61,8,63,12,"TEXT_ENCODER"],[61,20,63,24],[61,23,63,27],[61,27,63,31,"TextEncoder"],[61,38,63,42],[61,39,63,43],[61,40,63,44],[62,6,64,8],[63,6,65,8,"callback"],[63,14,65,16],[63,15,65,17,"TEXT_ENCODER"],[63,27,65,29],[63,28,65,30,"encode"],[63,34,65,36],[63,35,65,37,"encoded"],[63,42,65,44],[63,43,65,45],[63,44,65,46],[64,4,66,4],[64,5,66,5],[64,6,66,6],[65,2,67,0],[66,0,67,1],[66,3]],"functionMap":{"names":["<global>","isView","encodePacket","encodeBlobAsBase64","fileReader.onload","toArray","encodePacketToBinary","encodePacket$argument_2"],"mappings":"AAA;eCM;CDI;qBEC;CFoB;2BGC;wBCE;KDG;CHE;AKC;CLU;OME;gCCQ;KDK;CNC"}},"type":"js/module"}]}