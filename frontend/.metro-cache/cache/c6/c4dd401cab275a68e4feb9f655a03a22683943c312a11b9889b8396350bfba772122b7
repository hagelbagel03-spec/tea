{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parse = parse;\n  // imported from https://github.com/galkn/parseuri\n  /**\n   * Parses a URI\n   *\n   * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n   *\n   * See:\n   * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n   * - https://caniuse.com/url\n   * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n   *\n   * History of the parse() method:\n   * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n   * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n   * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n   *\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\n   * @api private\n   */\n  const re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n  const parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n  function parse(str) {\n    if (str.length > 8000) {\n      throw \"URI too long\";\n    }\n    const src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n      str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n    while (i--) {\n      uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n      uri.source = src;\n      uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n      uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n      uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n  }\n  function pathNames(obj, path) {\n    const regx = /\\/{2,9}/g,\n      names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n      names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n      names.splice(names.length - 1, 1);\n    }\n    return names;\n  }\n  function queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n      if ($1) {\n        data[$1] = $2;\n      }\n    });\n    return data;\n  }\n});","lineCount":73,"map":[[6,2,1,0],[7,2,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,2,20,0],[25,8,20,6,"re"],[25,10,20,8],[25,13,20,11],[25,258,20,256],[26,2,21,0],[26,8,21,6,"parts"],[26,13,21,11],[26,16,21,14],[26,17,22,4],[26,25,22,12],[26,27,22,14],[26,37,22,24],[26,39,22,26],[26,50,22,37],[26,52,22,39],[26,62,22,49],[26,64,22,51],[26,70,22,57],[26,72,22,59],[26,82,22,69],[26,84,22,71],[26,90,22,77],[26,92,22,79],[26,98,22,85],[26,100,22,87],[26,110,22,97],[26,112,22,99],[26,118,22,105],[26,120,22,107],[26,131,22,118],[26,133,22,120],[26,139,22,126],[26,141,22,128],[26,148,22,135],[26,150,22,137],[26,158,22,145],[26,159,23,1],[27,2,24,7],[27,11,24,16,"parse"],[27,16,24,21,"parse"],[27,17,24,22,"str"],[27,20,24,25],[27,22,24,27],[28,4,25,4],[28,8,25,8,"str"],[28,11,25,11],[28,12,25,12,"length"],[28,18,25,18],[28,21,25,21],[28,25,25,25],[28,27,25,27],[29,6,26,8],[29,12,26,14],[29,26,26,28],[30,4,27,4],[31,4,28,4],[31,10,28,10,"src"],[31,13,28,13],[31,16,28,16,"str"],[31,19,28,19],[32,6,28,21,"b"],[32,7,28,22],[32,10,28,25,"str"],[32,13,28,28],[32,14,28,29,"indexOf"],[32,21,28,36],[32,22,28,37],[32,25,28,40],[32,26,28,41],[33,6,28,43,"e"],[33,7,28,44],[33,10,28,47,"str"],[33,13,28,50],[33,14,28,51,"indexOf"],[33,21,28,58],[33,22,28,59],[33,25,28,62],[33,26,28,63],[34,4,29,4],[34,8,29,8,"b"],[34,9,29,9],[34,13,29,13],[34,14,29,14],[34,15,29,15],[34,19,29,19,"e"],[34,20,29,20],[34,24,29,24],[34,25,29,25],[34,26,29,26],[34,28,29,28],[35,6,30,8,"str"],[35,9,30,11],[35,12,30,14,"str"],[35,15,30,17],[35,16,30,18,"substring"],[35,25,30,27],[35,26,30,28],[35,27,30,29],[35,29,30,31,"b"],[35,30,30,32],[35,31,30,33],[35,34,30,36,"str"],[35,37,30,39],[35,38,30,40,"substring"],[35,47,30,49],[35,48,30,50,"b"],[35,49,30,51],[35,51,30,53,"e"],[35,52,30,54],[35,53,30,55],[35,54,30,56,"replace"],[35,61,30,63],[35,62,30,64],[35,66,30,68],[35,68,30,70],[35,71,30,73],[35,72,30,74],[35,75,30,77,"str"],[35,78,30,80],[35,79,30,81,"substring"],[35,88,30,90],[35,89,30,91,"e"],[35,90,30,92],[35,92,30,94,"str"],[35,95,30,97],[35,96,30,98,"length"],[35,102,30,104],[35,103,30,105],[36,4,31,4],[37,4,32,4],[37,8,32,8,"m"],[37,9,32,9],[37,12,32,12,"re"],[37,14,32,14],[37,15,32,15,"exec"],[37,19,32,19],[37,20,32,20,"str"],[37,23,32,23],[37,27,32,27],[37,29,32,29],[37,30,32,30],[38,6,32,32,"uri"],[38,9,32,35],[38,12,32,38],[38,13,32,39],[38,14,32,40],[39,6,32,42,"i"],[39,7,32,43],[39,10,32,46],[39,12,32,48],[40,4,33,4],[40,11,33,11,"i"],[40,12,33,12],[40,14,33,14],[40,16,33,16],[41,6,34,8,"uri"],[41,9,34,11],[41,10,34,12,"parts"],[41,15,34,17],[41,16,34,18,"i"],[41,17,34,19],[41,18,34,20],[41,19,34,21],[41,22,34,24,"m"],[41,23,34,25],[41,24,34,26,"i"],[41,25,34,27],[41,26,34,28],[41,30,34,32],[41,32,34,34],[42,4,35,4],[43,4,36,4],[43,8,36,8,"b"],[43,9,36,9],[43,13,36,13],[43,14,36,14],[43,15,36,15],[43,19,36,19,"e"],[43,20,36,20],[43,24,36,24],[43,25,36,25],[43,26,36,26],[43,28,36,28],[44,6,37,8,"uri"],[44,9,37,11],[44,10,37,12,"source"],[44,16,37,18],[44,19,37,21,"src"],[44,22,37,24],[45,6,38,8,"uri"],[45,9,38,11],[45,10,38,12,"host"],[45,14,38,16],[45,17,38,19,"uri"],[45,20,38,22],[45,21,38,23,"host"],[45,25,38,27],[45,26,38,28,"substring"],[45,35,38,37],[45,36,38,38],[45,37,38,39],[45,39,38,41,"uri"],[45,42,38,44],[45,43,38,45,"host"],[45,47,38,49],[45,48,38,50,"length"],[45,54,38,56],[45,57,38,59],[45,58,38,60],[45,59,38,61],[45,60,38,62,"replace"],[45,67,38,69],[45,68,38,70],[45,72,38,74],[45,74,38,76],[45,77,38,79],[45,78,38,80],[46,6,39,8,"uri"],[46,9,39,11],[46,10,39,12,"authority"],[46,19,39,21],[46,22,39,24,"uri"],[46,25,39,27],[46,26,39,28,"authority"],[46,35,39,37],[46,36,39,38,"replace"],[46,43,39,45],[46,44,39,46],[46,47,39,49],[46,49,39,51],[46,51,39,53],[46,52,39,54],[46,53,39,55,"replace"],[46,60,39,62],[46,61,39,63],[46,64,39,66],[46,66,39,68],[46,68,39,70],[46,69,39,71],[46,70,39,72,"replace"],[46,77,39,79],[46,78,39,80],[46,82,39,84],[46,84,39,86],[46,87,39,89],[46,88,39,90],[47,6,40,8,"uri"],[47,9,40,11],[47,10,40,12,"ipv6uri"],[47,17,40,19],[47,20,40,22],[47,24,40,26],[48,4,41,4],[49,4,42,4,"uri"],[49,7,42,7],[49,8,42,8,"pathNames"],[49,17,42,17],[49,20,42,20,"pathNames"],[49,29,42,29],[49,30,42,30,"uri"],[49,33,42,33],[49,35,42,35,"uri"],[49,38,42,38],[49,39,42,39],[49,45,42,45],[49,46,42,46],[49,47,42,47],[50,4,43,4,"uri"],[50,7,43,7],[50,8,43,8,"queryKey"],[50,16,43,16],[50,19,43,19,"queryKey"],[50,27,43,27],[50,28,43,28,"uri"],[50,31,43,31],[50,33,43,33,"uri"],[50,36,43,36],[50,37,43,37],[50,44,43,44],[50,45,43,45],[50,46,43,46],[51,4,44,4],[51,11,44,11,"uri"],[51,14,44,14],[52,2,45,0],[53,2,46,0],[53,11,46,9,"pathNames"],[53,20,46,18,"pathNames"],[53,21,46,19,"obj"],[53,24,46,22],[53,26,46,24,"path"],[53,30,46,28],[53,32,46,30],[54,4,47,4],[54,10,47,10,"regx"],[54,14,47,14],[54,17,47,17],[54,27,47,27],[55,6,47,29,"names"],[55,11,47,34],[55,14,47,37,"path"],[55,18,47,41],[55,19,47,42,"replace"],[55,26,47,49],[55,27,47,50,"regx"],[55,31,47,54],[55,33,47,56],[55,36,47,59],[55,37,47,60],[55,38,47,61,"split"],[55,43,47,66],[55,44,47,67],[55,47,47,70],[55,48,47,71],[56,4,48,4],[56,8,48,8,"path"],[56,12,48,12],[56,13,48,13,"slice"],[56,18,48,18],[56,19,48,19],[56,20,48,20],[56,22,48,22],[56,23,48,23],[56,24,48,24],[56,28,48,28],[56,31,48,31],[56,35,48,35,"path"],[56,39,48,39],[56,40,48,40,"length"],[56,46,48,46],[56,51,48,51],[56,52,48,52],[56,54,48,54],[57,6,49,8,"names"],[57,11,49,13],[57,12,49,14,"splice"],[57,18,49,20],[57,19,49,21],[57,20,49,22],[57,22,49,24],[57,23,49,25],[57,24,49,26],[58,4,50,4],[59,4,51,4],[59,8,51,8,"path"],[59,12,51,12],[59,13,51,13,"slice"],[59,18,51,18],[59,19,51,19],[59,20,51,20],[59,21,51,21],[59,22,51,22],[59,26,51,26],[59,29,51,29],[59,31,51,31],[60,6,52,8,"names"],[60,11,52,13],[60,12,52,14,"splice"],[60,18,52,20],[60,19,52,21,"names"],[60,24,52,26],[60,25,52,27,"length"],[60,31,52,33],[60,34,52,36],[60,35,52,37],[60,37,52,39],[60,38,52,40],[60,39,52,41],[61,4,53,4],[62,4,54,4],[62,11,54,11,"names"],[62,16,54,16],[63,2,55,0],[64,2,56,0],[64,11,56,9,"queryKey"],[64,19,56,17,"queryKey"],[64,20,56,18,"uri"],[64,23,56,21],[64,25,56,23,"query"],[64,30,56,28],[64,32,56,30],[65,4,57,4],[65,10,57,10,"data"],[65,14,57,14],[65,17,57,17],[65,18,57,18],[65,19,57,19],[66,4,58,4,"query"],[66,9,58,9],[66,10,58,10,"replace"],[66,17,58,17],[66,18,58,18],[66,45,58,45],[66,47,58,47],[66,57,58,57,"$0"],[66,59,58,59],[66,61,58,61,"$1"],[66,63,58,63],[66,65,58,65,"$2"],[66,67,58,67],[66,69,58,69],[67,6,59,8],[67,10,59,12,"$1"],[67,12,59,14],[67,14,59,16],[68,8,60,12,"data"],[68,12,60,16],[68,13,60,17,"$1"],[68,15,60,19],[68,16,60,20],[68,19,60,23,"$2"],[68,21,60,25],[69,6,61,8],[70,4,62,4],[70,5,62,5],[70,6,62,6],[71,4,63,4],[71,11,63,11,"data"],[71,15,63,15],[72,2,64,0],[73,0,64,1],[73,3]],"functionMap":{"names":["<global>","parse","pathNames","queryKey","query.replace$argument_1"],"mappings":"AAA;OCuB;CDqB;AEC;CFS;AGC;+CCE;KDI;CHE"}},"type":"js/module"}]}