{"dependencies":[{"name":"./is-binary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"nI6Cd4R9sJDIQIUaBK8/eqMqCAI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deconstructPacket = deconstructPacket;\n  exports.reconstructPacket = reconstructPacket;\n  var _isBinary = require(_dependencyMap[0], \"./is-binary.js\");\n  /**\n   * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n   *\n   * @param {Object} packet - socket.io event packet\n   * @return {Object} with deconstructed packet and list of buffers\n   * @public\n   */\n  function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return {\n      packet: pack,\n      buffers: buffers\n    };\n  }\n  function _deconstructPacket(data, buffers) {\n    if (!data) return data;\n    if ((0, _isBinary.isBinary)(data)) {\n      const placeholder = {\n        _placeholder: true,\n        num: buffers.length\n      };\n      buffers.push(data);\n      return placeholder;\n    } else if (Array.isArray(data)) {\n      const newData = new Array(data.length);\n      for (let i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i], buffers);\n      }\n      return newData;\n    } else if (typeof data === \"object\" && !(data instanceof Date)) {\n      const newData = {};\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          newData[key] = _deconstructPacket(data[key], buffers);\n        }\n      }\n      return newData;\n    }\n    return data;\n  }\n  /**\n   * Reconstructs a binary packet from its placeholder packet and buffers\n   *\n   * @param {Object} packet - event packet with placeholders\n   * @param {Array} buffers - binary buffers to put in placeholder positions\n   * @return {Object} reconstructed packet\n   * @public\n   */\n  function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n  }\n  function _reconstructPacket(data, buffers) {\n    if (!data) return data;\n    if (data && data._placeholder === true) {\n      const isIndexValid = typeof data.num === \"number\" && data.num >= 0 && data.num < buffers.length;\n      if (isIndexValid) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      } else {\n        throw new Error(\"illegal attachments\");\n      }\n    } else if (Array.isArray(data)) {\n      for (let i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i], buffers);\n      }\n    } else if (typeof data === \"object\") {\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          data[key] = _reconstructPacket(data[key], buffers);\n        }\n      }\n    }\n    return data;\n  }\n});","lineCount":87,"map":[[7,2,1,0],[7,6,1,0,"_isBinary"],[7,15,1,0],[7,18,1,0,"require"],[7,25,1,0],[7,26,1,0,"_dependencyMap"],[7,40,1,0],[8,2,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,2,9,7],[15,11,9,16,"deconstructPacket"],[15,28,9,33,"deconstructPacket"],[15,29,9,34,"packet"],[15,35,9,40],[15,37,9,42],[16,4,10,4],[16,10,10,10,"buffers"],[16,17,10,17],[16,20,10,20],[16,22,10,22],[17,4,11,4],[17,10,11,10,"packetData"],[17,20,11,20],[17,23,11,23,"packet"],[17,29,11,29],[17,30,11,30,"data"],[17,34,11,34],[18,4,12,4],[18,10,12,10,"pack"],[18,14,12,14],[18,17,12,17,"packet"],[18,23,12,23],[19,4,13,4,"pack"],[19,8,13,8],[19,9,13,9,"data"],[19,13,13,13],[19,16,13,16,"_deconstructPacket"],[19,34,13,34],[19,35,13,35,"packetData"],[19,45,13,45],[19,47,13,47,"buffers"],[19,54,13,54],[19,55,13,55],[20,4,14,4,"pack"],[20,8,14,8],[20,9,14,9,"attachments"],[20,20,14,20],[20,23,14,23,"buffers"],[20,30,14,30],[20,31,14,31,"length"],[20,37,14,37],[20,38,14,38],[20,39,14,39],[21,4,15,4],[21,11,15,11],[22,6,15,13,"packet"],[22,12,15,19],[22,14,15,21,"pack"],[22,18,15,25],[23,6,15,27,"buffers"],[23,13,15,34],[23,15,15,36,"buffers"],[24,4,15,44],[24,5,15,45],[25,2,16,0],[26,2,17,0],[26,11,17,9,"_deconstructPacket"],[26,29,17,27,"_deconstructPacket"],[26,30,17,28,"data"],[26,34,17,32],[26,36,17,34,"buffers"],[26,43,17,41],[26,45,17,43],[27,4,18,4],[27,8,18,8],[27,9,18,9,"data"],[27,13,18,13],[27,15,19,8],[27,22,19,15,"data"],[27,26,19,19],[28,4,20,4],[28,8,20,8],[28,12,20,8,"isBinary"],[28,30,20,16],[28,32,20,17,"data"],[28,36,20,21],[28,37,20,22],[28,39,20,24],[29,6,21,8],[29,12,21,14,"placeholder"],[29,23,21,25],[29,26,21,28],[30,8,21,30,"_placeholder"],[30,20,21,42],[30,22,21,44],[30,26,21,48],[31,8,21,50,"num"],[31,11,21,53],[31,13,21,55,"buffers"],[31,20,21,62],[31,21,21,63,"length"],[32,6,21,70],[32,7,21,71],[33,6,22,8,"buffers"],[33,13,22,15],[33,14,22,16,"push"],[33,18,22,20],[33,19,22,21,"data"],[33,23,22,25],[33,24,22,26],[34,6,23,8],[34,13,23,15,"placeholder"],[34,24,23,26],[35,4,24,4],[35,5,24,5],[35,11,25,9],[35,15,25,13,"Array"],[35,20,25,18],[35,21,25,19,"isArray"],[35,28,25,26],[35,29,25,27,"data"],[35,33,25,31],[35,34,25,32],[35,36,25,34],[36,6,26,8],[36,12,26,14,"newData"],[36,19,26,21],[36,22,26,24],[36,26,26,28,"Array"],[36,31,26,33],[36,32,26,34,"data"],[36,36,26,38],[36,37,26,39,"length"],[36,43,26,45],[36,44,26,46],[37,6,27,8],[37,11,27,13],[37,15,27,17,"i"],[37,16,27,18],[37,19,27,21],[37,20,27,22],[37,22,27,24,"i"],[37,23,27,25],[37,26,27,28,"data"],[37,30,27,32],[37,31,27,33,"length"],[37,37,27,39],[37,39,27,41,"i"],[37,40,27,42],[37,42,27,44],[37,44,27,46],[38,8,28,12,"newData"],[38,15,28,19],[38,16,28,20,"i"],[38,17,28,21],[38,18,28,22],[38,21,28,25,"_deconstructPacket"],[38,39,28,43],[38,40,28,44,"data"],[38,44,28,48],[38,45,28,49,"i"],[38,46,28,50],[38,47,28,51],[38,49,28,53,"buffers"],[38,56,28,60],[38,57,28,61],[39,6,29,8],[40,6,30,8],[40,13,30,15,"newData"],[40,20,30,22],[41,4,31,4],[41,5,31,5],[41,11,32,9],[41,15,32,13],[41,22,32,20,"data"],[41,26,32,24],[41,31,32,29],[41,39,32,37],[41,43,32,41],[41,45,32,43,"data"],[41,49,32,47],[41,61,32,59,"Date"],[41,65,32,63],[41,66,32,64],[41,68,32,66],[42,6,33,8],[42,12,33,14,"newData"],[42,19,33,21],[42,22,33,24],[42,23,33,25],[42,24,33,26],[43,6,34,8],[43,11,34,13],[43,17,34,19,"key"],[43,20,34,22],[43,24,34,26,"data"],[43,28,34,30],[43,30,34,32],[44,8,35,12],[44,12,35,16,"Object"],[44,18,35,22],[44,19,35,23,"prototype"],[44,28,35,32],[44,29,35,33,"hasOwnProperty"],[44,43,35,47],[44,44,35,48,"call"],[44,48,35,52],[44,49,35,53,"data"],[44,53,35,57],[44,55,35,59,"key"],[44,58,35,62],[44,59,35,63],[44,61,35,65],[45,10,36,16,"newData"],[45,17,36,23],[45,18,36,24,"key"],[45,21,36,27],[45,22,36,28],[45,25,36,31,"_deconstructPacket"],[45,43,36,49],[45,44,36,50,"data"],[45,48,36,54],[45,49,36,55,"key"],[45,52,36,58],[45,53,36,59],[45,55,36,61,"buffers"],[45,62,36,68],[45,63,36,69],[46,8,37,12],[47,6,38,8],[48,6,39,8],[48,13,39,15,"newData"],[48,20,39,22],[49,4,40,4],[50,4,41,4],[50,11,41,11,"data"],[50,15,41,15],[51,2,42,0],[52,2,43,0],[53,0,44,0],[54,0,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,2,51,7],[60,11,51,16,"reconstructPacket"],[60,28,51,33,"reconstructPacket"],[60,29,51,34,"packet"],[60,35,51,40],[60,37,51,42,"buffers"],[60,44,51,49],[60,46,51,51],[61,4,52,4,"packet"],[61,10,52,10],[61,11,52,11,"data"],[61,15,52,15],[61,18,52,18,"_reconstructPacket"],[61,36,52,36],[61,37,52,37,"packet"],[61,43,52,43],[61,44,52,44,"data"],[61,48,52,48],[61,50,52,50,"buffers"],[61,57,52,57],[61,58,52,58],[62,4,53,4],[62,11,53,11,"packet"],[62,17,53,17],[62,18,53,18,"attachments"],[62,29,53,29],[62,30,53,30],[62,31,53,31],[63,4,54,4],[63,11,54,11,"packet"],[63,17,54,17],[64,2,55,0],[65,2,56,0],[65,11,56,9,"_reconstructPacket"],[65,29,56,27,"_reconstructPacket"],[65,30,56,28,"data"],[65,34,56,32],[65,36,56,34,"buffers"],[65,43,56,41],[65,45,56,43],[66,4,57,4],[66,8,57,8],[66,9,57,9,"data"],[66,13,57,13],[66,15,58,8],[66,22,58,15,"data"],[66,26,58,19],[67,4,59,4],[67,8,59,8,"data"],[67,12,59,12],[67,16,59,16,"data"],[67,20,59,20],[67,21,59,21,"_placeholder"],[67,33,59,33],[67,38,59,38],[67,42,59,42],[67,44,59,44],[68,6,60,8],[68,12,60,14,"isIndexValid"],[68,24,60,26],[68,27,60,29],[68,34,60,36,"data"],[68,38,60,40],[68,39,60,41,"num"],[68,42,60,44],[68,47,60,49],[68,55,60,57],[68,59,61,12,"data"],[68,63,61,16],[68,64,61,17,"num"],[68,67,61,20],[68,71,61,24],[68,72,61,25],[68,76,62,12,"data"],[68,80,62,16],[68,81,62,17,"num"],[68,84,62,20],[68,87,62,23,"buffers"],[68,94,62,30],[68,95,62,31,"length"],[68,101,62,37],[69,6,63,8],[69,10,63,12,"isIndexValid"],[69,22,63,24],[69,24,63,26],[70,8,64,12],[70,15,64,19,"buffers"],[70,22,64,26],[70,23,64,27,"data"],[70,27,64,31],[70,28,64,32,"num"],[70,31,64,35],[70,32,64,36],[70,33,64,37],[70,34,64,38],[71,6,65,8],[71,7,65,9],[71,13,66,13],[72,8,67,12],[72,14,67,18],[72,18,67,22,"Error"],[72,23,67,27],[72,24,67,28],[72,45,67,49],[72,46,67,50],[73,6,68,8],[74,4,69,4],[74,5,69,5],[74,11,70,9],[74,15,70,13,"Array"],[74,20,70,18],[74,21,70,19,"isArray"],[74,28,70,26],[74,29,70,27,"data"],[74,33,70,31],[74,34,70,32],[74,36,70,34],[75,6,71,8],[75,11,71,13],[75,15,71,17,"i"],[75,16,71,18],[75,19,71,21],[75,20,71,22],[75,22,71,24,"i"],[75,23,71,25],[75,26,71,28,"data"],[75,30,71,32],[75,31,71,33,"length"],[75,37,71,39],[75,39,71,41,"i"],[75,40,71,42],[75,42,71,44],[75,44,71,46],[76,8,72,12,"data"],[76,12,72,16],[76,13,72,17,"i"],[76,14,72,18],[76,15,72,19],[76,18,72,22,"_reconstructPacket"],[76,36,72,40],[76,37,72,41,"data"],[76,41,72,45],[76,42,72,46,"i"],[76,43,72,47],[76,44,72,48],[76,46,72,50,"buffers"],[76,53,72,57],[76,54,72,58],[77,6,73,8],[78,4,74,4],[78,5,74,5],[78,11,75,9],[78,15,75,13],[78,22,75,20,"data"],[78,26,75,24],[78,31,75,29],[78,39,75,37],[78,41,75,39],[79,6,76,8],[79,11,76,13],[79,17,76,19,"key"],[79,20,76,22],[79,24,76,26,"data"],[79,28,76,30],[79,30,76,32],[80,8,77,12],[80,12,77,16,"Object"],[80,18,77,22],[80,19,77,23,"prototype"],[80,28,77,32],[80,29,77,33,"hasOwnProperty"],[80,43,77,47],[80,44,77,48,"call"],[80,48,77,52],[80,49,77,53,"data"],[80,53,77,57],[80,55,77,59,"key"],[80,58,77,62],[80,59,77,63],[80,61,77,65],[81,10,78,16,"data"],[81,14,78,20],[81,15,78,21,"key"],[81,18,78,24],[81,19,78,25],[81,22,78,28,"_reconstructPacket"],[81,40,78,46],[81,41,78,47,"data"],[81,45,78,51],[81,46,78,52,"key"],[81,49,78,55],[81,50,78,56],[81,52,78,58,"buffers"],[81,59,78,65],[81,60,78,66],[82,8,79,12],[83,6,80,8],[84,4,81,4],[85,4,82,4],[85,11,82,11,"data"],[85,15,82,15],[86,2,83,0],[87,0,83,1],[87,3]],"functionMap":{"names":["<global>","deconstructPacket","_deconstructPacket","reconstructPacket","_reconstructPacket"],"mappings":"AAA;OCQ;CDO;AEC;CFyB;OGS;CHI;AIC;CJ2B"}},"type":"js/module"}]}