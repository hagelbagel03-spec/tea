{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"./polling.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"Pl+iaQVK3G0OaUHovkJUbWBEusk=","exportNames":["*"]}},{"name":"@socket.io/component-emitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":55,"index":95}}],"key":"nWmouVdWEVSQD2UwM6teY1JyKBM=","exportNames":["*"]}},{"name":"../util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":96},"end":{"line":3,"column":57,"index":153}}],"key":"kanFP5HUYYYoVhDf3d7saim1ZXY=","exportNames":["*"]}},{"name":"../globals.node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":154},"end":{"line":4,"column":66,"index":220}}],"key":"RPWURBgga4vfm2ZRigByneogh6w=","exportNames":["*"]}},{"name":"../contrib/has-cors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":221},"end":{"line":5,"column":49,"index":270}}],"key":"tkKN50cPurXnsygiXMgDfFY8SZk=","exportNames":["*"]}},{"name":"debug","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":271},"end":{"line":6,"column":32,"index":303}}],"key":"Nx7LMnUOZdRc8E6QIb5nvmtJE+4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.XHR = exports.Request = exports.BaseXHR = void 0;\n  var _polling = require(_dependencyMap[1], \"./polling.js\");\n  var _componentEmitter = require(_dependencyMap[2], \"@socket.io/component-emitter\");\n  var _util = require(_dependencyMap[3], \"../util.js\");\n  var _globalsNode = require(_dependencyMap[4], \"../globals.node.js\");\n  var _hasCors = require(_dependencyMap[5], \"../contrib/has-cors.js\");\n  var _debug = _interopRequireDefault(require(_dependencyMap[6], \"debug\"));\n  // debug()\n  const debug = (0, _debug.default)(\"engine.io-client:polling\"); // debug()\n  function empty() {}\n  class BaseXHR extends _polling.Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n      super(opts);\n      if (typeof location !== \"undefined\") {\n        const isSSL = \"https:\" === location.protocol;\n        let port = location.port;\n        // some user agents have empty `location.port`\n        if (!port) {\n          port = isSSL ? \"443\" : \"80\";\n        }\n        this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n      const req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", (xhrStatus, context) => {\n        this.onError(\"xhr post error\", xhrStatus, context);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n      debug(\"xhr poll\");\n      const req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", (xhrStatus, context) => {\n        this.onError(\"xhr poll error\", xhrStatus, context);\n      });\n      this.pollXhr = req;\n    }\n  }\n  exports.BaseXHR = BaseXHR;\n  class Request extends _componentEmitter.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n      super();\n      this.createRequest = createRequest;\n      (0, _util.installTimerFunctions)(this, opts);\n      this._opts = opts;\n      this._method = opts.method || \"GET\";\n      this._uri = uri;\n      this._data = undefined !== opts.data ? opts.data : null;\n      this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n      var _a;\n      const opts = (0, _util.pick)(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this._opts.xd;\n      const xhr = this._xhr = this.createRequest(opts);\n      try {\n        debug(\"xhr open %s: %s\", this._method, this._uri);\n        xhr.open(this._method, this._uri, true);\n        try {\n          if (this._opts.extraHeaders) {\n            // @ts-ignore\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n            for (let i in this._opts.extraHeaders) {\n              if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n        if (\"POST\" === this._method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {}\n        (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n        // ie6 check\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this._opts.withCredentials;\n        }\n        if (this._opts.requestTimeout) {\n          xhr.timeout = this._opts.requestTimeout;\n        }\n        xhr.onreadystatechange = () => {\n          var _a;\n          if (xhr.readyState === 3) {\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n            // @ts-ignore\n            xhr.getResponseHeader(\"set-cookie\"));\n          }\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this._onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            this.setTimeoutFn(() => {\n              this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n        debug(\"xhr data %s\", this._data);\n        xhr.send(this._data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(() => {\n          this._onError(e);\n        }, 0);\n        return;\n      }\n      if (typeof document !== \"undefined\") {\n        this._index = Request.requestsCount++;\n        Request.requests[this._index] = this;\n      }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n      this.emitReserved(\"error\", err, this._xhr);\n      this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n      if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n        return;\n      }\n      this._xhr.onreadystatechange = empty;\n      if (fromError) {\n        try {\n          this._xhr.abort();\n        } catch (e) {}\n      }\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this._index];\n      }\n      this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n      const data = this._xhr.responseText;\n      if (data !== null) {\n        this.emitReserved(\"data\", data);\n        this.emitReserved(\"success\");\n        this._cleanup();\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n      this._cleanup();\n    }\n  }\n  exports.Request = Request;\n  Request.requestsCount = 0;\n  Request.requests = {};\n  /**\n   * Aborts pending requests when unloading the window. This is needed to prevent\n   * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n   * emitted.\n   */\n  if (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n      // @ts-ignore\n      attachEvent(\"onunload\", unloadHandler);\n    } else if (typeof addEventListener === \"function\") {\n      const terminationEvent = \"onpagehide\" in _globalsNode.globalThisShim ? \"pagehide\" : \"unload\";\n      addEventListener(terminationEvent, unloadHandler, false);\n    }\n  }\n  function unloadHandler() {\n    for (let i in Request.requests) {\n      if (Request.requests.hasOwnProperty(i)) {\n        Request.requests[i].abort();\n      }\n    }\n  }\n  const hasXHR2 = function () {\n    const xhr = newRequest({\n      xdomain: false\n    });\n    return xhr && xhr.responseType !== null;\n  }();\n  /**\n   * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n   *\n   * Usage: browser\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   */\n  class XHR extends BaseXHR {\n    constructor(opts) {\n      super(opts);\n      const forceBase64 = opts && opts.forceBase64;\n      this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n      Object.assign(opts, {\n        xd: this.xd\n      }, this.opts);\n      return new Request(newRequest, this.uri(), opts);\n    }\n  }\n  exports.XHR = XHR;\n  function newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n      if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || _hasCors.hasCORS)) {\n        return new XMLHttpRequest();\n      }\n    } catch (e) {}\n    if (!xdomain) {\n      try {\n        return new _globalsNode.globalThisShim[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n      } catch (e) {}\n    }\n  }\n});","lineCount":276,"map":[[7,2,1,0],[7,6,1,0,"_polling"],[7,14,1,0],[7,17,1,0,"require"],[7,24,1,0],[7,25,1,0,"_dependencyMap"],[7,39,1,0],[8,2,2,0],[8,6,2,0,"_componentEmitter"],[8,23,2,0],[8,26,2,0,"require"],[8,33,2,0],[8,34,2,0,"_dependencyMap"],[8,48,2,0],[9,2,3,0],[9,6,3,0,"_util"],[9,11,3,0],[9,14,3,0,"require"],[9,21,3,0],[9,22,3,0,"_dependencyMap"],[9,36,3,0],[10,2,4,0],[10,6,4,0,"_globalsNode"],[10,18,4,0],[10,21,4,0,"require"],[10,28,4,0],[10,29,4,0,"_dependencyMap"],[10,43,4,0],[11,2,5,0],[11,6,5,0,"_hasCors"],[11,14,5,0],[11,17,5,0,"require"],[11,24,5,0],[11,25,5,0,"_dependencyMap"],[11,39,5,0],[12,2,6,0],[12,6,6,0,"_debug"],[12,12,6,0],[12,15,6,0,"_interopRequireDefault"],[12,37,6,0],[12,38,6,0,"require"],[12,45,6,0],[12,46,6,0,"_dependencyMap"],[12,60,6,0],[13,2,6,33],[14,2,7,0],[14,8,7,6,"debug"],[14,13,7,11],[14,16,7,14],[14,20,7,14,"debugModule"],[14,34,7,25],[14,36,7,26],[14,62,7,52],[14,63,7,53],[14,64,7,54],[14,65,7,55],[15,2,8,0],[15,11,8,9,"empty"],[15,16,8,14,"empty"],[15,17,8,14],[15,19,8,17],[15,20,8,19],[16,2,9,7],[16,8,9,13,"BaseXHR"],[16,15,9,20],[16,24,9,29,"Polling"],[16,40,9,36],[16,41,9,37],[17,4,10,4],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,4,16,4,"constructor"],[23,15,16,15,"constructor"],[23,16,16,16,"opts"],[23,20,16,20],[23,22,16,22],[24,6,17,8],[24,11,17,13],[24,12,17,14,"opts"],[24,16,17,18],[24,17,17,19],[25,6,18,8],[25,10,18,12],[25,17,18,19,"location"],[25,25,18,27],[25,30,18,32],[25,41,18,43],[25,43,18,45],[26,8,19,12],[26,14,19,18,"isSSL"],[26,19,19,23],[26,22,19,26],[26,30,19,34],[26,35,19,39,"location"],[26,43,19,47],[26,44,19,48,"protocol"],[26,52,19,56],[27,8,20,12],[27,12,20,16,"port"],[27,16,20,20],[27,19,20,23,"location"],[27,27,20,31],[27,28,20,32,"port"],[27,32,20,36],[28,8,21,12],[29,8,22,12],[29,12,22,16],[29,13,22,17,"port"],[29,17,22,21],[29,19,22,23],[30,10,23,16,"port"],[30,14,23,20],[30,17,23,23,"isSSL"],[30,22,23,28],[30,25,23,31],[30,30,23,36],[30,33,23,39],[30,37,23,43],[31,8,24,12],[32,8,25,12],[32,12,25,16],[32,13,25,17,"xd"],[32,15,25,19],[32,18,26,17],[32,25,26,24,"location"],[32,33,26,32],[32,38,26,37],[32,49,26,48],[32,53,27,20,"opts"],[32,57,27,24],[32,58,27,25,"hostname"],[32,66,27,33],[32,71,27,38,"location"],[32,79,27,46],[32,80,27,47,"hostname"],[32,88,27,55],[32,92,28,20,"port"],[32,96,28,24],[32,101,28,29,"opts"],[32,105,28,33],[32,106,28,34,"port"],[32,110,28,38],[33,6,29,8],[34,4,30,4],[35,4,31,4],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,4,38,4,"doWrite"],[42,11,38,11,"doWrite"],[42,12,38,12,"data"],[42,16,38,16],[42,18,38,18,"fn"],[42,20,38,20],[42,22,38,22],[43,6,39,8],[43,12,39,14,"req"],[43,15,39,17],[43,18,39,20],[43,22,39,24],[43,23,39,25,"request"],[43,30,39,32],[43,31,39,33],[44,8,40,12,"method"],[44,14,40,18],[44,16,40,20],[44,22,40,26],[45,8,41,12,"data"],[45,12,41,16],[45,14,41,18,"data"],[46,6,42,8],[46,7,42,9],[46,8,42,10],[47,6,43,8,"req"],[47,9,43,11],[47,10,43,12,"on"],[47,12,43,14],[47,13,43,15],[47,22,43,24],[47,24,43,26,"fn"],[47,26,43,28],[47,27,43,29],[48,6,44,8,"req"],[48,9,44,11],[48,10,44,12,"on"],[48,12,44,14],[48,13,44,15],[48,20,44,22],[48,22,44,24],[48,23,44,25,"xhrStatus"],[48,32,44,34],[48,34,44,36,"context"],[48,41,44,43],[48,46,44,48],[49,8,45,12],[49,12,45,16],[49,13,45,17,"onError"],[49,20,45,24],[49,21,45,25],[49,37,45,41],[49,39,45,43,"xhrStatus"],[49,48,45,52],[49,50,45,54,"context"],[49,57,45,61],[49,58,45,62],[50,6,46,8],[50,7,46,9],[50,8,46,10],[51,4,47,4],[52,4,48,4],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,4,53,4,"doPoll"],[57,10,53,10,"doPoll"],[57,11,53,10],[57,13,53,13],[58,6,54,8,"debug"],[58,11,54,13],[58,12,54,14],[58,22,54,24],[58,23,54,25],[59,6,55,8],[59,12,55,14,"req"],[59,15,55,17],[59,18,55,20],[59,22,55,24],[59,23,55,25,"request"],[59,30,55,32],[59,31,55,33],[59,32,55,34],[60,6,56,8,"req"],[60,9,56,11],[60,10,56,12,"on"],[60,12,56,14],[60,13,56,15],[60,19,56,21],[60,21,56,23],[60,25,56,27],[60,26,56,28,"onData"],[60,32,56,34],[60,33,56,35,"bind"],[60,37,56,39],[60,38,56,40],[60,42,56,44],[60,43,56,45],[60,44,56,46],[61,6,57,8,"req"],[61,9,57,11],[61,10,57,12,"on"],[61,12,57,14],[61,13,57,15],[61,20,57,22],[61,22,57,24],[61,23,57,25,"xhrStatus"],[61,32,57,34],[61,34,57,36,"context"],[61,41,57,43],[61,46,57,48],[62,8,58,12],[62,12,58,16],[62,13,58,17,"onError"],[62,20,58,24],[62,21,58,25],[62,37,58,41],[62,39,58,43,"xhrStatus"],[62,48,58,52],[62,50,58,54,"context"],[62,57,58,61],[62,58,58,62],[63,6,59,8],[63,7,59,9],[63,8,59,10],[64,6,60,8],[64,10,60,12],[64,11,60,13,"pollXhr"],[64,18,60,20],[64,21,60,23,"req"],[64,24,60,26],[65,4,61,4],[66,2,62,0],[67,2,62,1,"exports"],[67,9,62,1],[67,10,62,1,"BaseXHR"],[67,17,62,1],[67,20,62,1,"BaseXHR"],[67,27,62,1],[68,2,63,7],[68,8,63,13,"Request"],[68,15,63,20],[68,24,63,29,"Emitter"],[68,49,63,36],[68,50,63,37],[69,4,64,4],[70,0,65,0],[71,0,66,0],[72,0,67,0],[73,0,68,0],[74,0,69,0],[75,4,70,4,"constructor"],[75,15,70,15,"constructor"],[75,16,70,16,"createRequest"],[75,29,70,29],[75,31,70,31,"uri"],[75,34,70,34],[75,36,70,36,"opts"],[75,40,70,40],[75,42,70,42],[76,6,71,8],[76,11,71,13],[76,12,71,14],[76,13,71,15],[77,6,72,8],[77,10,72,12],[77,11,72,13,"createRequest"],[77,24,72,26],[77,27,72,29,"createRequest"],[77,40,72,42],[78,6,73,8],[78,10,73,8,"installTimerFunctions"],[78,37,73,29],[78,39,73,30],[78,43,73,34],[78,45,73,36,"opts"],[78,49,73,40],[78,50,73,41],[79,6,74,8],[79,10,74,12],[79,11,74,13,"_opts"],[79,16,74,18],[79,19,74,21,"opts"],[79,23,74,25],[80,6,75,8],[80,10,75,12],[80,11,75,13,"_method"],[80,18,75,20],[80,21,75,23,"opts"],[80,25,75,27],[80,26,75,28,"method"],[80,32,75,34],[80,36,75,38],[80,41,75,43],[81,6,76,8],[81,10,76,12],[81,11,76,13,"_uri"],[81,15,76,17],[81,18,76,20,"uri"],[81,21,76,23],[82,6,77,8],[82,10,77,12],[82,11,77,13,"_data"],[82,16,77,18],[82,19,77,21,"undefined"],[82,28,77,30],[82,33,77,35,"opts"],[82,37,77,39],[82,38,77,40,"data"],[82,42,77,44],[82,45,77,47,"opts"],[82,49,77,51],[82,50,77,52,"data"],[82,54,77,56],[82,57,77,59],[82,61,77,63],[83,6,78,8],[83,10,78,12],[83,11,78,13,"_create"],[83,18,78,20],[83,19,78,21],[83,20,78,22],[84,4,79,4],[85,4,80,4],[86,0,81,0],[87,0,82,0],[88,0,83,0],[89,0,84,0],[90,4,85,4,"_create"],[90,11,85,11,"_create"],[90,12,85,11],[90,14,85,14],[91,6,86,8],[91,10,86,12,"_a"],[91,12,86,14],[92,6,87,8],[92,12,87,14,"opts"],[92,16,87,18],[92,19,87,21],[92,23,87,21,"pick"],[92,33,87,25],[92,35,87,26],[92,39,87,30],[92,40,87,31,"_opts"],[92,45,87,36],[92,47,87,38],[92,54,87,45],[92,56,87,47],[92,61,87,52],[92,63,87,54],[92,68,87,59],[92,70,87,61],[92,82,87,73],[92,84,87,75],[92,90,87,81],[92,92,87,83],[92,96,87,87],[92,98,87,89],[92,107,87,98],[92,109,87,100],[92,129,87,120],[92,131,87,122],[92,142,87,133],[92,143,87,134],[93,6,88,8,"opts"],[93,10,88,12],[93,11,88,13,"xdomain"],[93,18,88,20],[93,21,88,23],[93,22,88,24],[93,23,88,25],[93,27,88,29],[93,28,88,30,"_opts"],[93,33,88,35],[93,34,88,36,"xd"],[93,36,88,38],[94,6,89,8],[94,12,89,14,"xhr"],[94,15,89,17],[94,18,89,21],[94,22,89,25],[94,23,89,26,"_xhr"],[94,27,89,30],[94,30,89,33],[94,34,89,37],[94,35,89,38,"createRequest"],[94,48,89,51],[94,49,89,52,"opts"],[94,53,89,56],[94,54,89,58],[95,6,90,8],[95,10,90,12],[96,8,91,12,"debug"],[96,13,91,17],[96,14,91,18],[96,31,91,35],[96,33,91,37],[96,37,91,41],[96,38,91,42,"_method"],[96,45,91,49],[96,47,91,51],[96,51,91,55],[96,52,91,56,"_uri"],[96,56,91,60],[96,57,91,61],[97,8,92,12,"xhr"],[97,11,92,15],[97,12,92,16,"open"],[97,16,92,20],[97,17,92,21],[97,21,92,25],[97,22,92,26,"_method"],[97,29,92,33],[97,31,92,35],[97,35,92,39],[97,36,92,40,"_uri"],[97,40,92,44],[97,42,92,46],[97,46,92,50],[97,47,92,51],[98,8,93,12],[98,12,93,16],[99,10,94,16],[99,14,94,20],[99,18,94,24],[99,19,94,25,"_opts"],[99,24,94,30],[99,25,94,31,"extraHeaders"],[99,37,94,43],[99,39,94,45],[100,12,95,20],[101,12,96,20,"xhr"],[101,15,96,23],[101,16,96,24,"setDisableHeaderCheck"],[101,37,96,45],[101,41,96,49,"xhr"],[101,44,96,52],[101,45,96,53,"setDisableHeaderCheck"],[101,66,96,74],[101,67,96,75],[101,71,96,79],[101,72,96,80],[102,12,97,20],[102,17,97,25],[102,21,97,29,"i"],[102,22,97,30],[102,26,97,34],[102,30,97,38],[102,31,97,39,"_opts"],[102,36,97,44],[102,37,97,45,"extraHeaders"],[102,49,97,57],[102,51,97,59],[103,14,98,24],[103,18,98,28],[103,22,98,32],[103,23,98,33,"_opts"],[103,28,98,38],[103,29,98,39,"extraHeaders"],[103,41,98,51],[103,42,98,52,"hasOwnProperty"],[103,56,98,66],[103,57,98,67,"i"],[103,58,98,68],[103,59,98,69],[103,61,98,71],[104,16,99,28,"xhr"],[104,19,99,31],[104,20,99,32,"setRequestHeader"],[104,36,99,48],[104,37,99,49,"i"],[104,38,99,50],[104,40,99,52],[104,44,99,56],[104,45,99,57,"_opts"],[104,50,99,62],[104,51,99,63,"extraHeaders"],[104,63,99,75],[104,64,99,76,"i"],[104,65,99,77],[104,66,99,78],[104,67,99,79],[105,14,100,24],[106,12,101,20],[107,10,102,16],[108,8,103,12],[108,9,103,13],[108,10,104,12],[108,17,104,19,"e"],[108,18,104,20],[108,20,104,22],[108,21,104,24],[109,8,105,12],[109,12,105,16],[109,18,105,22],[109,23,105,27],[109,27,105,31],[109,28,105,32,"_method"],[109,35,105,39],[109,37,105,41],[110,10,106,16],[110,14,106,20],[111,12,107,20,"xhr"],[111,15,107,23],[111,16,107,24,"setRequestHeader"],[111,32,107,40],[111,33,107,41],[111,47,107,55],[111,49,107,57],[111,75,107,83],[111,76,107,84],[112,10,108,16],[112,11,108,17],[112,12,109,16],[112,19,109,23,"e"],[112,20,109,24],[112,22,109,26],[112,23,109,28],[113,8,110,12],[114,8,111,12],[114,12,111,16],[115,10,112,16,"xhr"],[115,13,112,19],[115,14,112,20,"setRequestHeader"],[115,30,112,36],[115,31,112,37],[115,39,112,45],[115,41,112,47],[115,46,112,52],[115,47,112,53],[116,8,113,12],[116,9,113,13],[116,10,114,12],[116,17,114,19,"e"],[116,18,114,20],[116,20,114,22],[116,21,114,24],[117,8,115,12],[117,9,115,13,"_a"],[117,11,115,15],[117,14,115,18],[117,18,115,22],[117,19,115,23,"_opts"],[117,24,115,28],[117,25,115,29,"cookieJar"],[117,34,115,38],[117,40,115,44],[117,44,115,48],[117,48,115,52,"_a"],[117,50,115,54],[117,55,115,59],[117,60,115,64],[117,61,115,65],[117,64,115,68],[117,69,115,73],[117,70,115,74],[117,73,115,77,"_a"],[117,75,115,79],[117,76,115,80,"addCookies"],[117,86,115,90],[117,87,115,91,"xhr"],[117,90,115,94],[117,91,115,95],[118,8,116,12],[119,8,117,12],[119,12,117,16],[119,29,117,33],[119,33,117,37,"xhr"],[119,36,117,40],[119,38,117,42],[120,10,118,16,"xhr"],[120,13,118,19],[120,14,118,20,"withCredentials"],[120,29,118,35],[120,32,118,38],[120,36,118,42],[120,37,118,43,"_opts"],[120,42,118,48],[120,43,118,49,"withCredentials"],[120,58,118,64],[121,8,119,12],[122,8,120,12],[122,12,120,16],[122,16,120,20],[122,17,120,21,"_opts"],[122,22,120,26],[122,23,120,27,"requestTimeout"],[122,37,120,41],[122,39,120,43],[123,10,121,16,"xhr"],[123,13,121,19],[123,14,121,20,"timeout"],[123,21,121,27],[123,24,121,30],[123,28,121,34],[123,29,121,35,"_opts"],[123,34,121,40],[123,35,121,41,"requestTimeout"],[123,49,121,55],[124,8,122,12],[125,8,123,12,"xhr"],[125,11,123,15],[125,12,123,16,"onreadystatechange"],[125,30,123,34],[125,33,123,37],[125,39,123,43],[126,10,124,16],[126,14,124,20,"_a"],[126,16,124,22],[127,10,125,16],[127,14,125,20,"xhr"],[127,17,125,23],[127,18,125,24,"readyState"],[127,28,125,34],[127,33,125,39],[127,34,125,40],[127,36,125,42],[128,12,126,20],[128,13,126,21,"_a"],[128,15,126,23],[128,18,126,26],[128,22,126,30],[128,23,126,31,"_opts"],[128,28,126,36],[128,29,126,37,"cookieJar"],[128,38,126,46],[128,44,126,52],[128,48,126,56],[128,52,126,60,"_a"],[128,54,126,62],[128,59,126,67],[128,64,126,72],[128,65,126,73],[128,68,126,76],[128,73,126,81],[128,74,126,82],[128,77,126,85,"_a"],[128,79,126,87],[128,80,126,88,"parseCookies"],[128,92,126,100],[129,12,127,20],[130,12,128,20,"xhr"],[130,15,128,23],[130,16,128,24,"getResponseHeader"],[130,33,128,41],[130,34,128,42],[130,46,128,54],[130,47,128,55],[130,48,128,56],[131,10,129,16],[132,10,130,16],[132,14,130,20],[132,15,130,21],[132,20,130,26,"xhr"],[132,23,130,29],[132,24,130,30,"readyState"],[132,34,130,40],[132,36,131,20],[133,10,132,16],[133,14,132,20],[133,17,132,23],[133,22,132,28,"xhr"],[133,25,132,31],[133,26,132,32,"status"],[133,32,132,38],[133,36,132,42],[133,40,132,46],[133,45,132,51,"xhr"],[133,48,132,54],[133,49,132,55,"status"],[133,55,132,61],[133,57,132,63],[134,12,133,20],[134,16,133,24],[134,17,133,25,"_onLoad"],[134,24,133,32],[134,25,133,33],[134,26,133,34],[135,10,134,16],[135,11,134,17],[135,17,135,21],[136,12,136,20],[137,12,137,20],[138,12,138,20],[138,16,138,24],[138,17,138,25,"setTimeoutFn"],[138,29,138,37],[138,30,138,38],[138,36,138,44],[139,14,139,24],[139,18,139,28],[139,19,139,29,"_onError"],[139,27,139,37],[139,28,139,38],[139,35,139,45,"xhr"],[139,38,139,48],[139,39,139,49,"status"],[139,45,139,55],[139,50,139,60],[139,58,139,68],[139,61,139,71,"xhr"],[139,64,139,74],[139,65,139,75,"status"],[139,71,139,81],[139,74,139,84],[139,75,139,85],[139,76,139,86],[140,12,140,20],[140,13,140,21],[140,15,140,23],[140,16,140,24],[140,17,140,25],[141,10,141,16],[142,8,142,12],[142,9,142,13],[143,8,143,12,"debug"],[143,13,143,17],[143,14,143,18],[143,27,143,31],[143,29,143,33],[143,33,143,37],[143,34,143,38,"_data"],[143,39,143,43],[143,40,143,44],[144,8,144,12,"xhr"],[144,11,144,15],[144,12,144,16,"send"],[144,16,144,20],[144,17,144,21],[144,21,144,25],[144,22,144,26,"_data"],[144,27,144,31],[144,28,144,32],[145,6,145,8],[145,7,145,9],[145,8,146,8],[145,15,146,15,"e"],[145,16,146,16],[145,18,146,18],[146,8,147,12],[147,8,148,12],[148,8,149,12],[149,8,150,12],[149,12,150,16],[149,13,150,17,"setTimeoutFn"],[149,25,150,29],[149,26,150,30],[149,32,150,36],[150,10,151,16],[150,14,151,20],[150,15,151,21,"_onError"],[150,23,151,29],[150,24,151,30,"e"],[150,25,151,31],[150,26,151,32],[151,8,152,12],[151,9,152,13],[151,11,152,15],[151,12,152,16],[151,13,152,17],[152,8,153,12],[153,6,154,8],[154,6,155,8],[154,10,155,12],[154,17,155,19,"document"],[154,25,155,27],[154,30,155,32],[154,41,155,43],[154,43,155,45],[155,8,156,12],[155,12,156,16],[155,13,156,17,"_index"],[155,19,156,23],[155,22,156,26,"Request"],[155,29,156,33],[155,30,156,34,"requestsCount"],[155,43,156,47],[155,45,156,49],[156,8,157,12,"Request"],[156,15,157,19],[156,16,157,20,"requests"],[156,24,157,28],[156,25,157,29],[156,29,157,33],[156,30,157,34,"_index"],[156,36,157,40],[156,37,157,41],[156,40,157,44],[156,44,157,48],[157,6,158,8],[158,4,159,4],[159,4,160,4],[160,0,161,0],[161,0,162,0],[162,0,163,0],[163,0,164,0],[164,4,165,4,"_onError"],[164,12,165,12,"_onError"],[164,13,165,13,"err"],[164,16,165,16],[164,18,165,18],[165,6,166,8],[165,10,166,12],[165,11,166,13,"emitReserved"],[165,23,166,25],[165,24,166,26],[165,31,166,33],[165,33,166,35,"err"],[165,36,166,38],[165,38,166,40],[165,42,166,44],[165,43,166,45,"_xhr"],[165,47,166,49],[165,48,166,50],[166,6,167,8],[166,10,167,12],[166,11,167,13,"_cleanup"],[166,19,167,21],[166,20,167,22],[166,24,167,26],[166,25,167,27],[167,4,168,4],[168,4,169,4],[169,0,170,0],[170,0,171,0],[171,0,172,0],[172,0,173,0],[173,4,174,4,"_cleanup"],[173,12,174,12,"_cleanup"],[173,13,174,13,"fromError"],[173,22,174,22],[173,24,174,24],[174,6,175,8],[174,10,175,12],[174,21,175,23],[174,26,175,28],[174,33,175,35],[174,37,175,39],[174,38,175,40,"_xhr"],[174,42,175,44],[174,46,175,48],[174,50,175,52],[174,55,175,57],[174,59,175,61],[174,60,175,62,"_xhr"],[174,64,175,66],[174,66,175,68],[175,8,176,12],[176,6,177,8],[177,6,178,8],[177,10,178,12],[177,11,178,13,"_xhr"],[177,15,178,17],[177,16,178,18,"onreadystatechange"],[177,34,178,36],[177,37,178,39,"empty"],[177,42,178,44],[178,6,179,8],[178,10,179,12,"fromError"],[178,19,179,21],[178,21,179,23],[179,8,180,12],[179,12,180,16],[180,10,181,16],[180,14,181,20],[180,15,181,21,"_xhr"],[180,19,181,25],[180,20,181,26,"abort"],[180,25,181,31],[180,26,181,32],[180,27,181,33],[181,8,182,12],[181,9,182,13],[181,10,183,12],[181,17,183,19,"e"],[181,18,183,20],[181,20,183,22],[181,21,183,24],[182,6,184,8],[183,6,185,8],[183,10,185,12],[183,17,185,19,"document"],[183,25,185,27],[183,30,185,32],[183,41,185,43],[183,43,185,45],[184,8,186,12],[184,15,186,19,"Request"],[184,22,186,26],[184,23,186,27,"requests"],[184,31,186,35],[184,32,186,36],[184,36,186,40],[184,37,186,41,"_index"],[184,43,186,47],[184,44,186,48],[185,6,187,8],[186,6,188,8],[186,10,188,12],[186,11,188,13,"_xhr"],[186,15,188,17],[186,18,188,20],[186,22,188,24],[187,4,189,4],[188,4,190,4],[189,0,191,0],[190,0,192,0],[191,0,193,0],[192,0,194,0],[193,4,195,4,"_onLoad"],[193,11,195,11,"_onLoad"],[193,12,195,11],[193,14,195,14],[194,6,196,8],[194,12,196,14,"data"],[194,16,196,18],[194,19,196,21],[194,23,196,25],[194,24,196,26,"_xhr"],[194,28,196,30],[194,29,196,31,"responseText"],[194,41,196,43],[195,6,197,8],[195,10,197,12,"data"],[195,14,197,16],[195,19,197,21],[195,23,197,25],[195,25,197,27],[196,8,198,12],[196,12,198,16],[196,13,198,17,"emitReserved"],[196,25,198,29],[196,26,198,30],[196,32,198,36],[196,34,198,38,"data"],[196,38,198,42],[196,39,198,43],[197,8,199,12],[197,12,199,16],[197,13,199,17,"emitReserved"],[197,25,199,29],[197,26,199,30],[197,35,199,39],[197,36,199,40],[198,8,200,12],[198,12,200,16],[198,13,200,17,"_cleanup"],[198,21,200,25],[198,22,200,26],[198,23,200,27],[199,6,201,8],[200,4,202,4],[201,4,203,4],[202,0,204,0],[203,0,205,0],[204,0,206,0],[205,0,207,0],[206,4,208,4,"abort"],[206,9,208,9,"abort"],[206,10,208,9],[206,12,208,12],[207,6,209,8],[207,10,209,12],[207,11,209,13,"_cleanup"],[207,19,209,21],[207,20,209,22],[207,21,209,23],[208,4,210,4],[209,2,211,0],[210,2,211,1,"exports"],[210,9,211,1],[210,10,211,1,"Request"],[210,17,211,1],[210,20,211,1,"Request"],[210,27,211,1],[211,2,212,0,"Request"],[211,9,212,7],[211,10,212,8,"requestsCount"],[211,23,212,21],[211,26,212,24],[211,27,212,25],[212,2,213,0,"Request"],[212,9,213,7],[212,10,213,8,"requests"],[212,18,213,16],[212,21,213,19],[212,22,213,20],[212,23,213,21],[213,2,214,0],[214,0,215,0],[215,0,216,0],[216,0,217,0],[217,0,218,0],[218,2,219,0],[218,6,219,4],[218,13,219,11,"document"],[218,21,219,19],[218,26,219,24],[218,37,219,35],[218,39,219,37],[219,4,220,4],[220,4,221,4],[220,8,221,8],[220,15,221,15,"attachEvent"],[220,26,221,26],[220,31,221,31],[220,41,221,41],[220,43,221,43],[221,6,222,8],[222,6,223,8,"attachEvent"],[222,17,223,19],[222,18,223,20],[222,28,223,30],[222,30,223,32,"unloadHandler"],[222,43,223,45],[222,44,223,46],[223,4,224,4],[223,5,224,5],[223,11,225,9],[223,15,225,13],[223,22,225,20,"addEventListener"],[223,38,225,36],[223,43,225,41],[223,53,225,51],[223,55,225,53],[224,6,226,8],[224,12,226,14,"terminationEvent"],[224,28,226,30],[224,31,226,33],[224,43,226,45],[224,47,226,49,"globalThis"],[224,74,226,59],[224,77,226,62],[224,87,226,72],[224,90,226,75],[224,98,226,83],[225,6,227,8,"addEventListener"],[225,22,227,24],[225,23,227,25,"terminationEvent"],[225,39,227,41],[225,41,227,43,"unloadHandler"],[225,54,227,56],[225,56,227,58],[225,61,227,63],[225,62,227,64],[226,4,228,4],[227,2,229,0],[228,2,230,0],[228,11,230,9,"unloadHandler"],[228,24,230,22,"unloadHandler"],[228,25,230,22],[228,27,230,25],[229,4,231,4],[229,9,231,9],[229,13,231,13,"i"],[229,14,231,14],[229,18,231,18,"Request"],[229,25,231,25],[229,26,231,26,"requests"],[229,34,231,34],[229,36,231,36],[230,6,232,8],[230,10,232,12,"Request"],[230,17,232,19],[230,18,232,20,"requests"],[230,26,232,28],[230,27,232,29,"hasOwnProperty"],[230,41,232,43],[230,42,232,44,"i"],[230,43,232,45],[230,44,232,46],[230,46,232,48],[231,8,233,12,"Request"],[231,15,233,19],[231,16,233,20,"requests"],[231,24,233,28],[231,25,233,29,"i"],[231,26,233,30],[231,27,233,31],[231,28,233,32,"abort"],[231,33,233,37],[231,34,233,38],[231,35,233,39],[232,6,234,8],[233,4,235,4],[234,2,236,0],[235,2,237,0],[235,8,237,6,"hasXHR2"],[235,15,237,13],[235,18,237,17],[235,30,237,29],[236,4,238,4],[236,10,238,10,"xhr"],[236,13,238,13],[236,16,238,16,"newRequest"],[236,26,238,26],[236,27,238,27],[237,6,239,8,"xdomain"],[237,13,239,15],[237,15,239,17],[238,4,240,4],[238,5,240,5],[238,6,240,6],[239,4,241,4],[239,11,241,11,"xhr"],[239,14,241,14],[239,18,241,18,"xhr"],[239,21,241,21],[239,22,241,22,"responseType"],[239,34,241,34],[239,39,241,39],[239,43,241,43],[240,2,242,0],[240,3,242,1],[240,4,242,3],[240,5,242,4],[241,2,243,0],[242,0,244,0],[243,0,245,0],[244,0,246,0],[245,0,247,0],[246,0,248,0],[247,0,249,0],[248,2,250,7],[248,8,250,13,"XHR"],[248,11,250,16],[248,20,250,25,"BaseXHR"],[248,27,250,32],[248,28,250,33],[249,4,251,4,"constructor"],[249,15,251,15,"constructor"],[249,16,251,16,"opts"],[249,20,251,20],[249,22,251,22],[250,6,252,8],[250,11,252,13],[250,12,252,14,"opts"],[250,16,252,18],[250,17,252,19],[251,6,253,8],[251,12,253,14,"forceBase64"],[251,23,253,25],[251,26,253,28,"opts"],[251,30,253,32],[251,34,253,36,"opts"],[251,38,253,40],[251,39,253,41,"forceBase64"],[251,50,253,52],[252,6,254,8],[252,10,254,12],[252,11,254,13,"supportsBinary"],[252,25,254,27],[252,28,254,30,"hasXHR2"],[252,35,254,37],[252,39,254,41],[252,40,254,42,"forceBase64"],[252,51,254,53],[253,4,255,4],[254,4,256,4,"request"],[254,11,256,11,"request"],[254,12,256,12,"opts"],[254,16,256,16],[254,19,256,19],[254,20,256,20],[254,21,256,21],[254,23,256,23],[255,6,257,8,"Object"],[255,12,257,14],[255,13,257,15,"assign"],[255,19,257,21],[255,20,257,22,"opts"],[255,24,257,26],[255,26,257,28],[256,8,257,30,"xd"],[256,10,257,32],[256,12,257,34],[256,16,257,38],[256,17,257,39,"xd"],[257,6,257,42],[257,7,257,43],[257,9,257,45],[257,13,257,49],[257,14,257,50,"opts"],[257,18,257,54],[257,19,257,55],[258,6,258,8],[258,13,258,15],[258,17,258,19,"Request"],[258,24,258,26],[258,25,258,27,"newRequest"],[258,35,258,37],[258,37,258,39],[258,41,258,43],[258,42,258,44,"uri"],[258,45,258,47],[258,46,258,48],[258,47,258,49],[258,49,258,51,"opts"],[258,53,258,55],[258,54,258,56],[259,4,259,4],[260,2,260,0],[261,2,260,1,"exports"],[261,9,260,1],[261,10,260,1,"XHR"],[261,13,260,1],[261,16,260,1,"XHR"],[261,19,260,1],[262,2,261,0],[262,11,261,9,"newRequest"],[262,21,261,19,"newRequest"],[262,22,261,20,"opts"],[262,26,261,24],[262,28,261,26],[263,4,262,4],[263,10,262,10,"xdomain"],[263,17,262,17],[263,20,262,20,"opts"],[263,24,262,24],[263,25,262,25,"xdomain"],[263,32,262,32],[264,4,263,4],[265,4,264,4],[265,8,264,8],[266,6,265,8],[266,10,265,12],[266,21,265,23],[266,26,265,28],[266,33,265,35,"XMLHttpRequest"],[266,47,265,49],[266,52,265,54],[266,53,265,55,"xdomain"],[266,60,265,62],[266,64,265,66,"hasCORS"],[266,80,265,73],[266,81,265,74],[266,83,265,76],[267,8,266,12],[267,15,266,19],[267,19,266,23,"XMLHttpRequest"],[267,33,266,37],[267,34,266,38],[267,35,266,39],[268,6,267,8],[269,4,268,4],[269,5,268,5],[269,6,269,4],[269,13,269,11,"e"],[269,14,269,12],[269,16,269,14],[269,17,269,16],[270,4,270,4],[270,8,270,8],[270,9,270,9,"xdomain"],[270,16,270,16],[270,18,270,18],[271,6,271,8],[271,10,271,12],[272,8,272,12],[272,15,272,19],[272,19,272,23,"globalThis"],[272,46,272,33],[272,47,272,34],[272,48,272,35],[272,56,272,43],[272,57,272,44],[272,58,272,45,"concat"],[272,64,272,51],[272,65,272,52],[272,73,272,60],[272,74,272,61],[272,75,272,62,"join"],[272,79,272,66],[272,80,272,67],[272,83,272,70],[272,84,272,71],[272,85,272,72],[272,86,272,73],[272,105,272,92],[272,106,272,93],[273,6,273,8],[273,7,273,9],[273,8,274,8],[273,15,274,15,"e"],[273,16,274,16],[273,18,274,18],[273,19,274,20],[274,4,275,4],[275,2,276,0],[276,0,276,1],[276,3]],"functionMap":{"names":["<global>","empty","BaseXHR","BaseXHR#constructor","BaseXHR#doWrite","req.on$argument_1","BaseXHR#doPoll","Request","Request#constructor","Request#_create","xhr.onreadystatechange","setTimeoutFn$argument_0","Request#_onError","Request#_cleanup","Request#_onLoad","Request#abort","unloadHandler","<anonymous>","XHR","XHR#constructor","XHR#request","newRequest"],"mappings":"AAA;ACO,oBD;OEC;ICO;KDc;IEQ;wBCM;SDE;KFC;IIM;wBDI;SCE;KJE;CFC;OOC;ICO;KDS;IEM;qCCsC;sCCe;qBDE;aDE;8BEQ;aFE;KFO;IKM;KLG;IMM;KNe;IOM;KPO;IQM;KRE;CPC;AgBmB;ChBM;iBiBC;CjBK;OkBQ;ICC;KDI;IEC;KFG;ClBC;AqBC;CrBe"}},"type":"js/module"}]}