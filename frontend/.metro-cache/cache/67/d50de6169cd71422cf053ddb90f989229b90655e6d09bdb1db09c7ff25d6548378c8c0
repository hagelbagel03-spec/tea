{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Emitter = Emitter;\n  /**\n   * Initialize a new `Emitter`.\n   *\n   * @api public\n   */\n\n  function Emitter(obj) {\n    if (obj) return mixin(obj);\n  }\n\n  /**\n   * Mixin the emitter properties.\n   *\n   * @param {Object} obj\n   * @return {Object}\n   * @api private\n   */\n\n  function mixin(obj) {\n    for (var key in Emitter.prototype) {\n      obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n  }\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.once = function (event, fn) {\n    function on() {\n      this.off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   * @return {Emitter}\n   * @api public\n   */\n\n  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n    this._callbacks = this._callbacks || {};\n\n    // all\n    if (0 == arguments.length) {\n      this._callbacks = {};\n      return this;\n    }\n\n    // specific event\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this;\n\n    // remove all handlers\n    if (1 == arguments.length) {\n      delete this._callbacks['$' + event];\n      return this;\n    }\n\n    // remove specific handler\n    var cb;\n    for (var i = 0; i < callbacks.length; i++) {\n      cb = callbacks[i];\n      if (cb === fn || cb.fn === fn) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) {\n      delete this._callbacks['$' + event];\n    }\n    return this;\n  };\n\n  /**\n   * Emit `event` with the given args.\n   *\n   * @param {String} event\n   * @param {Mixed} ...\n   * @return {Emitter}\n   */\n\n  Emitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1),\n      callbacks = this._callbacks['$' + event];\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n      callbacks = callbacks.slice(0);\n      for (var i = 0, len = callbacks.length; i < len; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n    return this;\n  };\n\n  // alias used for reserved events (protected method)\n  Emitter.prototype.emitReserved = Emitter.prototype.emit;\n\n  /**\n   * Return array of callbacks for `event`.\n   *\n   * @param {String} event\n   * @return {Array}\n   * @api public\n   */\n\n  Emitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n  };\n\n  /**\n   * Check if this emitter has `event` handlers.\n   *\n   * @param {String} event\n   * @return {Boolean}\n   * @api public\n   */\n\n  Emitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n  };\n});","lineCount":164,"map":[[6,2,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[12,2,7,7],[12,11,7,16,"Emitter"],[12,18,7,23,"Emitter"],[12,19,7,24,"obj"],[12,22,7,27],[12,24,7,29],[13,4,8,2],[13,8,8,6,"obj"],[13,11,8,9],[13,13,8,11],[13,20,8,18,"mixin"],[13,25,8,23],[13,26,8,24,"obj"],[13,29,8,27],[13,30,8,28],[14,2,9,0],[16,2,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[24,2,19,0],[24,11,19,9,"mixin"],[24,16,19,14,"mixin"],[24,17,19,15,"obj"],[24,20,19,18],[24,22,19,20],[25,4,20,2],[25,9,20,7],[25,13,20,11,"key"],[25,16,20,14],[25,20,20,18,"Emitter"],[25,27,20,25],[25,28,20,26,"prototype"],[25,37,20,35],[25,39,20,37],[26,6,21,4,"obj"],[26,9,21,7],[26,10,21,8,"key"],[26,13,21,11],[26,14,21,12],[26,17,21,15,"Emitter"],[26,24,21,22],[26,25,21,23,"prototype"],[26,34,21,32],[26,35,21,33,"key"],[26,38,21,36],[26,39,21,37],[27,4,22,2],[28,4,23,2],[28,11,23,9,"obj"],[28,14,23,12],[29,2,24,0],[31,2,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[40,2,35,0,"Emitter"],[40,9,35,7],[40,10,35,8,"prototype"],[40,19,35,17],[40,20,35,18,"on"],[40,22,35,20],[40,25,36,0,"Emitter"],[40,32,36,7],[40,33,36,8,"prototype"],[40,42,36,17],[40,43,36,18,"addEventListener"],[40,59,36,34],[40,62,36,37],[40,72,36,46,"event"],[40,77,36,51],[40,79,36,53,"fn"],[40,81,36,55],[40,83,36,56],[41,4,37,2],[41,8,37,6],[41,9,37,7,"_callbacks"],[41,19,37,17],[41,22,37,20],[41,26,37,24],[41,27,37,25,"_callbacks"],[41,37,37,35],[41,41,37,39],[41,42,37,40],[41,43,37,41],[42,4,38,2],[42,5,38,3],[42,9,38,7],[42,10,38,8,"_callbacks"],[42,20,38,18],[42,21,38,19],[42,24,38,22],[42,27,38,25,"event"],[42,32,38,30],[42,33,38,31],[42,36,38,34],[42,40,38,38],[42,41,38,39,"_callbacks"],[42,51,38,49],[42,52,38,50],[42,55,38,53],[42,58,38,56,"event"],[42,63,38,61],[42,64,38,62],[42,68,38,66],[42,70,38,68],[42,72,39,5,"push"],[42,76,39,9],[42,77,39,10,"fn"],[42,79,39,12],[42,80,39,13],[43,4,40,2],[43,11,40,9],[43,15,40,13],[44,2,41,0],[44,3,41,1],[46,2,43,0],[47,0,44,0],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,0,49,0],[53,0,50,0],[54,0,51,0],[56,2,53,0,"Emitter"],[56,9,53,7],[56,10,53,8,"prototype"],[56,19,53,17],[56,20,53,18,"once"],[56,24,53,22],[56,27,53,25],[56,37,53,34,"event"],[56,42,53,39],[56,44,53,41,"fn"],[56,46,53,43],[56,48,53,44],[57,4,54,2],[57,13,54,11,"on"],[57,15,54,13,"on"],[57,16,54,13],[57,18,54,16],[58,6,55,4],[58,10,55,8],[58,11,55,9,"off"],[58,14,55,12],[58,15,55,13,"event"],[58,20,55,18],[58,22,55,20,"on"],[58,24,55,22],[58,25,55,23],[59,6,56,4,"fn"],[59,8,56,6],[59,9,56,7,"apply"],[59,14,56,12],[59,15,56,13],[59,19,56,17],[59,21,56,19,"arguments"],[59,30,56,28],[59,31,56,29],[60,4,57,2],[61,4,59,2,"on"],[61,6,59,4],[61,7,59,5,"fn"],[61,9,59,7],[61,12,59,10,"fn"],[61,14,59,12],[62,4,60,2],[62,8,60,6],[62,9,60,7,"on"],[62,11,60,9],[62,12,60,10,"event"],[62,17,60,15],[62,19,60,17,"on"],[62,21,60,19],[62,22,60,20],[63,4,61,2],[63,11,61,9],[63,15,61,13],[64,2,62,0],[64,3,62,1],[66,2,64,0],[67,0,65,0],[68,0,66,0],[69,0,67,0],[70,0,68,0],[71,0,69,0],[72,0,70,0],[73,0,71,0],[74,0,72,0],[76,2,74,0,"Emitter"],[76,9,74,7],[76,10,74,8,"prototype"],[76,19,74,17],[76,20,74,18,"off"],[76,23,74,21],[76,26,75,0,"Emitter"],[76,33,75,7],[76,34,75,8,"prototype"],[76,43,75,17],[76,44,75,18,"removeListener"],[76,58,75,32],[76,61,76,0,"Emitter"],[76,68,76,7],[76,69,76,8,"prototype"],[76,78,76,17],[76,79,76,18,"removeAllListeners"],[76,97,76,36],[76,100,77,0,"Emitter"],[76,107,77,7],[76,108,77,8,"prototype"],[76,117,77,17],[76,118,77,18,"removeEventListener"],[76,137,77,37],[76,140,77,40],[76,150,77,49,"event"],[76,155,77,54],[76,157,77,56,"fn"],[76,159,77,58],[76,161,77,59],[77,4,78,2],[77,8,78,6],[77,9,78,7,"_callbacks"],[77,19,78,17],[77,22,78,20],[77,26,78,24],[77,27,78,25,"_callbacks"],[77,37,78,35],[77,41,78,39],[77,42,78,40],[77,43,78,41],[79,4,80,2],[80,4,81,2],[80,8,81,6],[80,9,81,7],[80,13,81,11,"arguments"],[80,22,81,20],[80,23,81,21,"length"],[80,29,81,27],[80,31,81,29],[81,6,82,4],[81,10,82,8],[81,11,82,9,"_callbacks"],[81,21,82,19],[81,24,82,22],[81,25,82,23],[81,26,82,24],[82,6,83,4],[82,13,83,11],[82,17,83,15],[83,4,84,2],[85,4,86,2],[86,4,87,2],[86,8,87,6,"callbacks"],[86,17,87,15],[86,20,87,18],[86,24,87,22],[86,25,87,23,"_callbacks"],[86,35,87,33],[86,36,87,34],[86,39,87,37],[86,42,87,40,"event"],[86,47,87,45],[86,48,87,46],[87,4,88,2],[87,8,88,6],[87,9,88,7,"callbacks"],[87,18,88,16],[87,20,88,18],[87,27,88,25],[87,31,88,29],[89,4,90,2],[90,4,91,2],[90,8,91,6],[90,9,91,7],[90,13,91,11,"arguments"],[90,22,91,20],[90,23,91,21,"length"],[90,29,91,27],[90,31,91,29],[91,6,92,4],[91,13,92,11],[91,17,92,15],[91,18,92,16,"_callbacks"],[91,28,92,26],[91,29,92,27],[91,32,92,30],[91,35,92,33,"event"],[91,40,92,38],[91,41,92,39],[92,6,93,4],[92,13,93,11],[92,17,93,15],[93,4,94,2],[95,4,96,2],[96,4,97,2],[96,8,97,6,"cb"],[96,10,97,8],[97,4,98,2],[97,9,98,7],[97,13,98,11,"i"],[97,14,98,12],[97,17,98,15],[97,18,98,16],[97,20,98,18,"i"],[97,21,98,19],[97,24,98,22,"callbacks"],[97,33,98,31],[97,34,98,32,"length"],[97,40,98,38],[97,42,98,40,"i"],[97,43,98,41],[97,45,98,43],[97,47,98,45],[98,6,99,4,"cb"],[98,8,99,6],[98,11,99,9,"callbacks"],[98,20,99,18],[98,21,99,19,"i"],[98,22,99,20],[98,23,99,21],[99,6,100,4],[99,10,100,8,"cb"],[99,12,100,10],[99,17,100,15,"fn"],[99,19,100,17],[99,23,100,21,"cb"],[99,25,100,23],[99,26,100,24,"fn"],[99,28,100,26],[99,33,100,31,"fn"],[99,35,100,33],[99,37,100,35],[100,8,101,6,"callbacks"],[100,17,101,15],[100,18,101,16,"splice"],[100,24,101,22],[100,25,101,23,"i"],[100,26,101,24],[100,28,101,26],[100,29,101,27],[100,30,101,28],[101,8,102,6],[102,6,103,4],[103,4,104,2],[105,4,106,2],[106,4,107,2],[107,4,108,2],[107,8,108,6,"callbacks"],[107,17,108,15],[107,18,108,16,"length"],[107,24,108,22],[107,29,108,27],[107,30,108,28],[107,32,108,30],[108,6,109,4],[108,13,109,11],[108,17,109,15],[108,18,109,16,"_callbacks"],[108,28,109,26],[108,29,109,27],[108,32,109,30],[108,35,109,33,"event"],[108,40,109,38],[108,41,109,39],[109,4,110,2],[110,4,112,2],[110,11,112,9],[110,15,112,13],[111,2,113,0],[111,3,113,1],[113,2,115,0],[114,0,116,0],[115,0,117,0],[116,0,118,0],[117,0,119,0],[118,0,120,0],[119,0,121,0],[121,2,123,0,"Emitter"],[121,9,123,7],[121,10,123,8,"prototype"],[121,19,123,17],[121,20,123,18,"emit"],[121,24,123,22],[121,27,123,25],[121,37,123,34,"event"],[121,42,123,39],[121,44,123,40],[122,4,124,2],[122,8,124,6],[122,9,124,7,"_callbacks"],[122,19,124,17],[122,22,124,20],[122,26,124,24],[122,27,124,25,"_callbacks"],[122,37,124,35],[122,41,124,39],[122,42,124,40],[122,43,124,41],[123,4,126,2],[123,8,126,6,"args"],[123,12,126,10],[123,15,126,13],[123,19,126,17,"Array"],[123,24,126,22],[123,25,126,23,"arguments"],[123,34,126,32],[123,35,126,33,"length"],[123,41,126,39],[123,44,126,42],[123,45,126,43],[123,46,126,44],[124,6,127,6,"callbacks"],[124,15,127,15],[124,18,127,18],[124,22,127,22],[124,23,127,23,"_callbacks"],[124,33,127,33],[124,34,127,34],[124,37,127,37],[124,40,127,40,"event"],[124,45,127,45],[124,46,127,46],[125,4,129,2],[125,9,129,7],[125,13,129,11,"i"],[125,14,129,12],[125,17,129,15],[125,18,129,16],[125,20,129,18,"i"],[125,21,129,19],[125,24,129,22,"arguments"],[125,33,129,31],[125,34,129,32,"length"],[125,40,129,38],[125,42,129,40,"i"],[125,43,129,41],[125,45,129,43],[125,47,129,45],[126,6,130,4,"args"],[126,10,130,8],[126,11,130,9,"i"],[126,12,130,10],[126,15,130,13],[126,16,130,14],[126,17,130,15],[126,20,130,18,"arguments"],[126,29,130,27],[126,30,130,28,"i"],[126,31,130,29],[126,32,130,30],[127,4,131,2],[128,4,133,2],[128,8,133,6,"callbacks"],[128,17,133,15],[128,19,133,17],[129,6,134,4,"callbacks"],[129,15,134,13],[129,18,134,16,"callbacks"],[129,27,134,25],[129,28,134,26,"slice"],[129,33,134,31],[129,34,134,32],[129,35,134,33],[129,36,134,34],[130,6,135,4],[130,11,135,9],[130,15,135,13,"i"],[130,16,135,14],[130,19,135,17],[130,20,135,18],[130,22,135,20,"len"],[130,25,135,23],[130,28,135,26,"callbacks"],[130,37,135,35],[130,38,135,36,"length"],[130,44,135,42],[130,46,135,44,"i"],[130,47,135,45],[130,50,135,48,"len"],[130,53,135,51],[130,55,135,53],[130,57,135,55,"i"],[130,58,135,56],[130,60,135,58],[131,8,136,6,"callbacks"],[131,17,136,15],[131,18,136,16,"i"],[131,19,136,17],[131,20,136,18],[131,21,136,19,"apply"],[131,26,136,24],[131,27,136,25],[131,31,136,29],[131,33,136,31,"args"],[131,37,136,35],[131,38,136,36],[132,6,137,4],[133,4,138,2],[134,4,140,2],[134,11,140,9],[134,15,140,13],[135,2,141,0],[135,3,141,1],[137,2,143,0],[138,2,144,0,"Emitter"],[138,9,144,7],[138,10,144,8,"prototype"],[138,19,144,17],[138,20,144,18,"emitReserved"],[138,32,144,30],[138,35,144,33,"Emitter"],[138,42,144,40],[138,43,144,41,"prototype"],[138,52,144,50],[138,53,144,51,"emit"],[138,57,144,55],[140,2,146,0],[141,0,147,0],[142,0,148,0],[143,0,149,0],[144,0,150,0],[145,0,151,0],[146,0,152,0],[148,2,154,0,"Emitter"],[148,9,154,7],[148,10,154,8,"prototype"],[148,19,154,17],[148,20,154,18,"listeners"],[148,29,154,27],[148,32,154,30],[148,42,154,39,"event"],[148,47,154,44],[148,49,154,45],[149,4,155,2],[149,8,155,6],[149,9,155,7,"_callbacks"],[149,19,155,17],[149,22,155,20],[149,26,155,24],[149,27,155,25,"_callbacks"],[149,37,155,35],[149,41,155,39],[149,42,155,40],[149,43,155,41],[150,4,156,2],[150,11,156,9],[150,15,156,13],[150,16,156,14,"_callbacks"],[150,26,156,24],[150,27,156,25],[150,30,156,28],[150,33,156,31,"event"],[150,38,156,36],[150,39,156,37],[150,43,156,41],[150,45,156,43],[151,2,157,0],[151,3,157,1],[153,2,159,0],[154,0,160,0],[155,0,161,0],[156,0,162,0],[157,0,163,0],[158,0,164,0],[159,0,165,0],[161,2,167,0,"Emitter"],[161,9,167,7],[161,10,167,8,"prototype"],[161,19,167,17],[161,20,167,18,"hasListeners"],[161,32,167,30],[161,35,167,33],[161,45,167,42,"event"],[161,50,167,47],[161,52,167,48],[162,4,168,2],[162,11,168,9],[162,12,168,10],[162,13,168,12],[162,17,168,16],[162,18,168,17,"listeners"],[162,27,168,26],[162,28,168,27,"event"],[162,33,168,32],[162,34,168,33],[162,35,168,34,"length"],[162,41,168,40],[163,2,169,0],[163,3,169,1],[164,0,169,2],[164,3]],"functionMap":{"names":["<global>","Emitter","mixin","Emitter.prototype.addEventListener","Emitter.prototype.once","on","Emitter.prototype.removeEventListener","Emitter.prototype.emit","Emitter.prototype.listeners","Emitter.prototype.hasListeners"],"mappings":"AAA;OCM;CDE;AEU;CFK;qCGY;CHK;yBIY;ECC;GDG;CJK;wCMe;CNoC;yBOU;CPkB;8BQa;CRG;iCSU;CTE"}},"type":"js/module"}]}