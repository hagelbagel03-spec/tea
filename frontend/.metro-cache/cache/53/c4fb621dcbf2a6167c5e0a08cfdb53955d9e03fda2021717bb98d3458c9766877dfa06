{"dependencies":[{"name":"engine.io-client","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"47uBFHNKf+pJCWjWFCflLVQYGvc=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.url = url;\n  var _engine = require(_dependencyMap[0], \"engine.io-client\");\n  /**\n   * URL parser.\n   *\n   * @param uri - url\n   * @param path - the request path of the connection\n   * @param loc - An object meant to mimic window.location.\n   *        Defaults to window.location.\n   * @public\n   */\n  function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n      if (\"/\" === uri.charAt(0)) {\n        if (\"/\" === uri.charAt(1)) {\n          uri = loc.protocol + uri;\n        } else {\n          uri = loc.host + uri;\n        }\n      }\n      if (!/^(https?|wss?):\\/\\//.test(uri)) {\n        if (\"undefined\" !== typeof loc) {\n          uri = loc.protocol + \"//\" + uri;\n        } else {\n          uri = \"https://\" + uri;\n        }\n      }\n      // parse\n      obj = (0, _engine.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n      if (/^(http|ws)$/.test(obj.protocol)) {\n        obj.port = \"80\";\n      } else if (/^(http|ws)s$/.test(obj.protocol)) {\n        obj.port = \"443\";\n      }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n  }\n});","lineCount":57,"map":[[6,2,1,0],[6,6,1,0,"_engine"],[6,13,1,0],[6,16,1,0,"require"],[6,23,1,0],[6,24,1,0,"_dependencyMap"],[6,38,1,0],[7,2,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,2,11,7],[16,11,11,16,"url"],[16,14,11,19,"url"],[16,15,11,20,"uri"],[16,18,11,23],[16,20,11,25,"path"],[16,24,11,29],[16,27,11,32],[16,29,11,34],[16,31,11,36,"loc"],[16,34,11,39],[16,36,11,41],[17,4,12,4],[17,8,12,8,"obj"],[17,11,12,11],[17,14,12,14,"uri"],[17,17,12,17],[18,4,13,4],[19,4,14,4,"loc"],[19,7,14,7],[19,10,14,10,"loc"],[19,13,14,13],[19,17,14,18],[19,24,14,25,"location"],[19,32,14,33],[19,37,14,38],[19,48,14,49],[19,52,14,53,"location"],[19,60,14,62],[20,4,15,4],[20,8,15,8],[20,12,15,12],[20,16,15,16,"uri"],[20,19,15,19],[20,21,16,8,"uri"],[20,24,16,11],[20,27,16,14,"loc"],[20,30,16,17],[20,31,16,18,"protocol"],[20,39,16,26],[20,42,16,29],[20,46,16,33],[20,49,16,36,"loc"],[20,52,16,39],[20,53,16,40,"host"],[20,57,16,44],[21,4,17,4],[22,4,18,4],[22,8,18,8],[22,15,18,15,"uri"],[22,18,18,18],[22,23,18,23],[22,31,18,31],[22,33,18,33],[23,6,19,8],[23,10,19,12],[23,13,19,15],[23,18,19,20,"uri"],[23,21,19,23],[23,22,19,24,"charAt"],[23,28,19,30],[23,29,19,31],[23,30,19,32],[23,31,19,33],[23,33,19,35],[24,8,20,12],[24,12,20,16],[24,15,20,19],[24,20,20,24,"uri"],[24,23,20,27],[24,24,20,28,"charAt"],[24,30,20,34],[24,31,20,35],[24,32,20,36],[24,33,20,37],[24,35,20,39],[25,10,21,16,"uri"],[25,13,21,19],[25,16,21,22,"loc"],[25,19,21,25],[25,20,21,26,"protocol"],[25,28,21,34],[25,31,21,37,"uri"],[25,34,21,40],[26,8,22,12],[26,9,22,13],[26,15,23,17],[27,10,24,16,"uri"],[27,13,24,19],[27,16,24,22,"loc"],[27,19,24,25],[27,20,24,26,"host"],[27,24,24,30],[27,27,24,33,"uri"],[27,30,24,36],[28,8,25,12],[29,6,26,8],[30,6,27,8],[30,10,27,12],[30,11,27,13],[30,32,27,34],[30,33,27,35,"test"],[30,37,27,39],[30,38,27,40,"uri"],[30,41,27,43],[30,42,27,44],[30,44,27,46],[31,8,28,12],[31,12,28,16],[31,23,28,27],[31,28,28,32],[31,35,28,39,"loc"],[31,38,28,42],[31,40,28,44],[32,10,29,16,"uri"],[32,13,29,19],[32,16,29,22,"loc"],[32,19,29,25],[32,20,29,26,"protocol"],[32,28,29,34],[32,31,29,37],[32,35,29,41],[32,38,29,44,"uri"],[32,41,29,47],[33,8,30,12],[33,9,30,13],[33,15,31,17],[34,10,32,16,"uri"],[34,13,32,19],[34,16,32,22],[34,26,32,32],[34,29,32,35,"uri"],[34,32,32,38],[35,8,33,12],[36,6,34,8],[37,6,35,8],[38,6,36,8,"obj"],[38,9,36,11],[38,12,36,14],[38,16,36,14,"parse"],[38,29,36,19],[38,31,36,20,"uri"],[38,34,36,23],[38,35,36,24],[39,4,37,4],[40,4,38,4],[41,4,39,4],[41,8,39,8],[41,9,39,9,"obj"],[41,12,39,12],[41,13,39,13,"port"],[41,17,39,17],[41,19,39,19],[42,6,40,8],[42,10,40,12],[42,23,40,25],[42,24,40,26,"test"],[42,28,40,30],[42,29,40,31,"obj"],[42,32,40,34],[42,33,40,35,"protocol"],[42,41,40,43],[42,42,40,44],[42,44,40,46],[43,8,41,12,"obj"],[43,11,41,15],[43,12,41,16,"port"],[43,16,41,20],[43,19,41,23],[43,23,41,27],[44,6,42,8],[44,7,42,9],[44,13,43,13],[44,17,43,17],[44,31,43,31],[44,32,43,32,"test"],[44,36,43,36],[44,37,43,37,"obj"],[44,40,43,40],[44,41,43,41,"protocol"],[44,49,43,49],[44,50,43,50],[44,52,43,52],[45,8,44,12,"obj"],[45,11,44,15],[45,12,44,16,"port"],[45,16,44,20],[45,19,44,23],[45,24,44,28],[46,6,45,8],[47,4,46,4],[48,4,47,4,"obj"],[48,7,47,7],[48,8,47,8,"path"],[48,12,47,12],[48,15,47,15,"obj"],[48,18,47,18],[48,19,47,19,"path"],[48,23,47,23],[48,27,47,27],[48,30,47,30],[49,4,48,4],[49,10,48,10,"ipv6"],[49,14,48,14],[49,17,48,17,"obj"],[49,20,48,20],[49,21,48,21,"host"],[49,25,48,25],[49,26,48,26,"indexOf"],[49,33,48,33],[49,34,48,34],[49,37,48,37],[49,38,48,38],[49,43,48,43],[49,44,48,44],[49,45,48,45],[50,4,49,4],[50,10,49,10,"host"],[50,14,49,14],[50,17,49,17,"ipv6"],[50,21,49,21],[50,24,49,24],[50,27,49,27],[50,30,49,30,"obj"],[50,33,49,33],[50,34,49,34,"host"],[50,38,49,38],[50,41,49,41],[50,44,49,44],[50,47,49,47,"obj"],[50,50,49,50],[50,51,49,51,"host"],[50,55,49,55],[51,4,50,4],[52,4,51,4,"obj"],[52,7,51,7],[52,8,51,8,"id"],[52,10,51,10],[52,13,51,13,"obj"],[52,16,51,16],[52,17,51,17,"protocol"],[52,25,51,25],[52,28,51,28],[52,33,51,33],[52,36,51,36,"host"],[52,40,51,40],[52,43,51,43],[52,46,51,46],[52,49,51,49,"obj"],[52,52,51,52],[52,53,51,53,"port"],[52,57,51,57],[52,60,51,60,"path"],[52,64,51,64],[53,4,52,4],[54,4,53,4,"obj"],[54,7,53,7],[54,8,53,8,"href"],[54,12,53,12],[54,15,54,8,"obj"],[54,18,54,11],[54,19,54,12,"protocol"],[54,27,54,20],[54,30,55,12],[54,35,55,17],[54,38,56,12,"host"],[54,42,56,16],[54,46,57,13,"loc"],[54,49,57,16],[54,53,57,20,"loc"],[54,56,57,23],[54,57,57,24,"port"],[54,61,57,28],[54,66,57,33,"obj"],[54,69,57,36],[54,70,57,37,"port"],[54,74,57,41],[54,77,57,44],[54,79,57,46],[54,82,57,49],[54,85,57,52],[54,88,57,55,"obj"],[54,91,57,58],[54,92,57,59,"port"],[54,96,57,63],[54,97,57,64],[55,4,58,4],[55,11,58,11,"obj"],[55,14,58,14],[56,2,59,0],[57,0,59,1],[57,3]],"functionMap":{"names":["<global>","url"],"mappings":"AAA;OCU;CDgD"}},"type":"js/module"}]}