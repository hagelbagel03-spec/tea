{"dependencies":[{"name":"../transport.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"q68AWRvh2qc0QUlp41HSOL9aMUA=","exportNames":["*"]}},{"name":"../util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":48,"index":93}}],"key":"kanFP5HUYYYoVhDf3d7saim1ZXY=","exportNames":["*"]}},{"name":"engine.io-parser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":94},"end":{"line":3,"column":48,"index":142}}],"key":"IB5HY76c7xC+tDEPCV8b/nK76DU=","exportNames":["*"]}},{"name":"../globals.node.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":76,"index":219}}],"key":"RPWURBgga4vfm2ZRigByneogh6w=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.WS = exports.BaseWS = void 0;\n  var _transport = require(_dependencyMap[0], \"../transport.js\");\n  var _util = require(_dependencyMap[1], \"../util.js\");\n  var _engine = require(_dependencyMap[2], \"engine.io-parser\");\n  var _globalsNode = require(_dependencyMap[3], \"../globals.node.js\");\n  // detect ReactNative environment\n  const isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\n  class BaseWS extends _transport.Transport {\n    get name() {\n      return \"websocket\";\n    }\n    doOpen() {\n      const uri = this.uri();\n      const protocols = this.opts.protocols;\n      // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n      const opts = isReactNative ? {} : (0, _util.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n      if (this.opts.extraHeaders) {\n        opts.headers = this.opts.extraHeaders;\n      }\n      try {\n        this.ws = this.createSocket(uri, protocols, opts);\n      } catch (err) {\n        return this.emitReserved(\"error\", err);\n      }\n      this.ws.binaryType = this.socket.binaryType;\n      this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n      this.ws.onopen = () => {\n        if (this.opts.autoUnref) {\n          this.ws._socket.unref();\n        }\n        this.onOpen();\n      };\n      this.ws.onclose = closeEvent => this.onClose({\n        description: \"websocket connection closed\",\n        context: closeEvent\n      });\n      this.ws.onmessage = ev => this.onData(ev.data);\n      this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n      this.writable = false;\n      // encodePacket efficient as it uses WS framing\n      // no need for encodePayload\n      for (let i = 0; i < packets.length; i++) {\n        const packet = packets[i];\n        const lastPacket = i === packets.length - 1;\n        (0, _engine.encodePacket)(packet, this.supportsBinary, data => {\n          // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n          try {\n            this.doWrite(packet, data);\n          } catch (e) {}\n          if (lastPacket) {\n            // fake drain\n            // defer to next tick to allow Socket to clear writeBuffer\n            (0, _globalsNode.nextTick)(() => {\n              this.writable = true;\n              this.emitReserved(\"drain\");\n            }, this.setTimeoutFn);\n          }\n        });\n      }\n    }\n    doClose() {\n      if (typeof this.ws !== \"undefined\") {\n        this.ws.onerror = () => {};\n        this.ws.close();\n        this.ws = null;\n      }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n      const schema = this.opts.secure ? \"wss\" : \"ws\";\n      const query = this.query || {};\n      // append timestamp to URI\n      if (this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = (0, _util.randomString)();\n      }\n      // communicate binary support capabilities\n      if (!this.supportsBinary) {\n        query.b64 = 1;\n      }\n      return this.createUri(schema, query);\n    }\n  }\n  exports.BaseWS = BaseWS;\n  const WebSocketCtor = _globalsNode.globalThisShim.WebSocket || _globalsNode.globalThisShim.MozWebSocket;\n  /**\n   * WebSocket transport based on the built-in `WebSocket` object.\n   *\n   * Usage: browser, Node.js (since v21), Deno, Bun\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n   * @see https://caniuse.com/mdn-api_websocket\n   * @see https://nodejs.org/api/globals.html#websocket\n   */\n  class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n      return !isReactNative ? protocols ? new WebSocketCtor(uri, protocols) : new WebSocketCtor(uri) : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n      this.ws.send(data);\n    }\n  }\n  exports.WS = WS;\n});","lineCount":122,"map":[[6,2,1,0],[6,6,1,0,"_transport"],[6,16,1,0],[6,19,1,0,"require"],[6,26,1,0],[6,27,1,0,"_dependencyMap"],[6,41,1,0],[7,2,2,0],[7,6,2,0,"_util"],[7,11,2,0],[7,14,2,0,"require"],[7,21,2,0],[7,22,2,0,"_dependencyMap"],[7,36,2,0],[8,2,3,0],[8,6,3,0,"_engine"],[8,13,3,0],[8,16,3,0,"require"],[8,23,3,0],[8,24,3,0,"_dependencyMap"],[8,38,3,0],[9,2,4,0],[9,6,4,0,"_globalsNode"],[9,18,4,0],[9,21,4,0,"require"],[9,28,4,0],[9,29,4,0,"_dependencyMap"],[9,43,4,0],[10,2,5,0],[11,2,6,0],[11,8,6,6,"isReactNative"],[11,21,6,19],[11,24,6,22],[11,31,6,29,"navigator"],[11,40,6,38],[11,45,6,43],[11,56,6,54],[11,60,7,4],[11,67,7,11,"navigator"],[11,76,7,20],[11,77,7,21,"product"],[11,84,7,28],[11,89,7,33],[11,97,7,41],[11,101,8,4,"navigator"],[11,110,8,13],[11,111,8,14,"product"],[11,118,8,21],[11,119,8,22,"toLowerCase"],[11,130,8,33],[11,131,8,34],[11,132,8,35],[11,137,8,40],[11,150,8,53],[12,2,9,7],[12,8,9,13,"BaseWS"],[12,14,9,19],[12,23,9,28,"Transport"],[12,43,9,37],[12,44,9,38],[13,4,10,4],[13,8,10,8,"name"],[13,12,10,12,"name"],[13,13,10,12],[13,15,10,15],[14,6,11,8],[14,13,11,15],[14,24,11,26],[15,4,12,4],[16,4,13,4,"doOpen"],[16,10,13,10,"doOpen"],[16,11,13,10],[16,13,13,13],[17,6,14,8],[17,12,14,14,"uri"],[17,15,14,17],[17,18,14,20],[17,22,14,24],[17,23,14,25,"uri"],[17,26,14,28],[17,27,14,29],[17,28,14,30],[18,6,15,8],[18,12,15,14,"protocols"],[18,21,15,23],[18,24,15,26],[18,28,15,30],[18,29,15,31,"opts"],[18,33,15,35],[18,34,15,36,"protocols"],[18,43,15,45],[19,6,16,8],[20,6,17,8],[20,12,17,14,"opts"],[20,16,17,18],[20,19,17,21,"isReactNative"],[20,32,17,34],[20,35,18,14],[20,36,18,15],[20,37,18,16],[20,40,19,14],[20,44,19,14,"pick"],[20,54,19,18],[20,56,19,19],[20,60,19,23],[20,61,19,24,"opts"],[20,65,19,28],[20,67,19,30],[20,74,19,37],[20,76,19,39],[20,95,19,58],[20,97,19,60],[20,102,19,65],[20,104,19,67],[20,109,19,72],[20,111,19,74],[20,123,19,86],[20,125,19,88],[20,131,19,94],[20,133,19,96],[20,137,19,100],[20,139,19,102],[20,148,19,111],[20,150,19,113],[20,170,19,133],[20,172,19,135],[20,186,19,149],[20,188,19,151],[20,205,19,168],[20,207,19,170],[20,215,19,178],[20,217,19,180],[20,229,19,192],[20,231,19,194],[20,239,19,202],[20,241,19,204],[20,262,19,225],[20,263,19,226],[21,6,20,8],[21,10,20,12],[21,14,20,16],[21,15,20,17,"opts"],[21,19,20,21],[21,20,20,22,"extraHeaders"],[21,32,20,34],[21,34,20,36],[22,8,21,12,"opts"],[22,12,21,16],[22,13,21,17,"headers"],[22,20,21,24],[22,23,21,27],[22,27,21,31],[22,28,21,32,"opts"],[22,32,21,36],[22,33,21,37,"extraHeaders"],[22,45,21,49],[23,6,22,8],[24,6,23,8],[24,10,23,12],[25,8,24,12],[25,12,24,16],[25,13,24,17,"ws"],[25,15,24,19],[25,18,24,22],[25,22,24,26],[25,23,24,27,"createSocket"],[25,35,24,39],[25,36,24,40,"uri"],[25,39,24,43],[25,41,24,45,"protocols"],[25,50,24,54],[25,52,24,56,"opts"],[25,56,24,60],[25,57,24,61],[26,6,25,8],[26,7,25,9],[26,8,26,8],[26,15,26,15,"err"],[26,18,26,18],[26,20,26,20],[27,8,27,12],[27,15,27,19],[27,19,27,23],[27,20,27,24,"emitReserved"],[27,32,27,36],[27,33,27,37],[27,40,27,44],[27,42,27,46,"err"],[27,45,27,49],[27,46,27,50],[28,6,28,8],[29,6,29,8],[29,10,29,12],[29,11,29,13,"ws"],[29,13,29,15],[29,14,29,16,"binaryType"],[29,24,29,26],[29,27,29,29],[29,31,29,33],[29,32,29,34,"socket"],[29,38,29,40],[29,39,29,41,"binaryType"],[29,49,29,51],[30,6,30,8],[30,10,30,12],[30,11,30,13,"addEventListeners"],[30,28,30,30],[30,29,30,31],[30,30,30,32],[31,4,31,4],[32,4,32,4],[33,0,33,0],[34,0,34,0],[35,0,35,0],[36,0,36,0],[37,4,37,4,"addEventListeners"],[37,21,37,21,"addEventListeners"],[37,22,37,21],[37,24,37,24],[38,6,38,8],[38,10,38,12],[38,11,38,13,"ws"],[38,13,38,15],[38,14,38,16,"onopen"],[38,20,38,22],[38,23,38,25],[38,29,38,31],[39,8,39,12],[39,12,39,16],[39,16,39,20],[39,17,39,21,"opts"],[39,21,39,25],[39,22,39,26,"autoUnref"],[39,31,39,35],[39,33,39,37],[40,10,40,16],[40,14,40,20],[40,15,40,21,"ws"],[40,17,40,23],[40,18,40,24,"_socket"],[40,25,40,31],[40,26,40,32,"unref"],[40,31,40,37],[40,32,40,38],[40,33,40,39],[41,8,41,12],[42,8,42,12],[42,12,42,16],[42,13,42,17,"onOpen"],[42,19,42,23],[42,20,42,24],[42,21,42,25],[43,6,43,8],[43,7,43,9],[44,6,44,8],[44,10,44,12],[44,11,44,13,"ws"],[44,13,44,15],[44,14,44,16,"onclose"],[44,21,44,23],[44,24,44,27,"closeEvent"],[44,34,44,37],[44,38,44,42],[44,42,44,46],[44,43,44,47,"onClose"],[44,50,44,54],[44,51,44,55],[45,8,45,12,"description"],[45,19,45,23],[45,21,45,25],[45,50,45,54],[46,8,46,12,"context"],[46,15,46,19],[46,17,46,21,"closeEvent"],[47,6,47,8],[47,7,47,9],[47,8,47,10],[48,6,48,8],[48,10,48,12],[48,11,48,13,"ws"],[48,13,48,15],[48,14,48,16,"onmessage"],[48,23,48,25],[48,26,48,29,"ev"],[48,28,48,31],[48,32,48,36],[48,36,48,40],[48,37,48,41,"onData"],[48,43,48,47],[48,44,48,48,"ev"],[48,46,48,50],[48,47,48,51,"data"],[48,51,48,55],[48,52,48,56],[49,6,49,8],[49,10,49,12],[49,11,49,13,"ws"],[49,13,49,15],[49,14,49,16,"onerror"],[49,21,49,23],[49,24,49,27,"e"],[49,25,49,28],[49,29,49,33],[49,33,49,37],[49,34,49,38,"onError"],[49,41,49,45],[49,42,49,46],[49,59,49,63],[49,61,49,65,"e"],[49,62,49,66],[49,63,49,67],[50,4,50,4],[51,4,51,4,"write"],[51,9,51,9,"write"],[51,10,51,10,"packets"],[51,17,51,17],[51,19,51,19],[52,6,52,8],[52,10,52,12],[52,11,52,13,"writable"],[52,19,52,21],[52,22,52,24],[52,27,52,29],[53,6,53,8],[54,6,54,8],[55,6,55,8],[55,11,55,13],[55,15,55,17,"i"],[55,16,55,18],[55,19,55,21],[55,20,55,22],[55,22,55,24,"i"],[55,23,55,25],[55,26,55,28,"packets"],[55,33,55,35],[55,34,55,36,"length"],[55,40,55,42],[55,42,55,44,"i"],[55,43,55,45],[55,45,55,47],[55,47,55,49],[56,8,56,12],[56,14,56,18,"packet"],[56,20,56,24],[56,23,56,27,"packets"],[56,30,56,34],[56,31,56,35,"i"],[56,32,56,36],[56,33,56,37],[57,8,57,12],[57,14,57,18,"lastPacket"],[57,24,57,28],[57,27,57,31,"i"],[57,28,57,32],[57,33,57,37,"packets"],[57,40,57,44],[57,41,57,45,"length"],[57,47,57,51],[57,50,57,54],[57,51,57,55],[58,8,58,12],[58,12,58,12,"encodePacket"],[58,32,58,24],[58,34,58,25,"packet"],[58,40,58,31],[58,42,58,33],[58,46,58,37],[58,47,58,38,"supportsBinary"],[58,61,58,52],[58,63,58,55,"data"],[58,67,58,59],[58,71,58,64],[59,10,59,16],[60,10,60,16],[61,10,61,16],[62,10,62,16],[62,14,62,20],[63,12,63,20],[63,16,63,24],[63,17,63,25,"doWrite"],[63,24,63,32],[63,25,63,33,"packet"],[63,31,63,39],[63,33,63,41,"data"],[63,37,63,45],[63,38,63,46],[64,10,64,16],[64,11,64,17],[64,12,65,16],[64,19,65,23,"e"],[64,20,65,24],[64,22,65,26],[64,23,66,16],[65,10,67,16],[65,14,67,20,"lastPacket"],[65,24,67,30],[65,26,67,32],[66,12,68,20],[67,12,69,20],[68,12,70,20],[68,16,70,20,"nextTick"],[68,37,70,28],[68,39,70,29],[68,45,70,35],[69,14,71,24],[69,18,71,28],[69,19,71,29,"writable"],[69,27,71,37],[69,30,71,40],[69,34,71,44],[70,14,72,24],[70,18,72,28],[70,19,72,29,"emitReserved"],[70,31,72,41],[70,32,72,42],[70,39,72,49],[70,40,72,50],[71,12,73,20],[71,13,73,21],[71,15,73,23],[71,19,73,27],[71,20,73,28,"setTimeoutFn"],[71,32,73,40],[71,33,73,41],[72,10,74,16],[73,8,75,12],[73,9,75,13],[73,10,75,14],[74,6,76,8],[75,4,77,4],[76,4,78,4,"doClose"],[76,11,78,11,"doClose"],[76,12,78,11],[76,14,78,14],[77,6,79,8],[77,10,79,12],[77,17,79,19],[77,21,79,23],[77,22,79,24,"ws"],[77,24,79,26],[77,29,79,31],[77,40,79,42],[77,42,79,44],[78,8,80,12],[78,12,80,16],[78,13,80,17,"ws"],[78,15,80,19],[78,16,80,20,"onerror"],[78,23,80,27],[78,26,80,30],[78,32,80,36],[78,33,80,38],[78,34,80,39],[79,8,81,12],[79,12,81,16],[79,13,81,17,"ws"],[79,15,81,19],[79,16,81,20,"close"],[79,21,81,25],[79,22,81,26],[79,23,81,27],[80,8,82,12],[80,12,82,16],[80,13,82,17,"ws"],[80,15,82,19],[80,18,82,22],[80,22,82,26],[81,6,83,8],[82,4,84,4],[83,4,85,4],[84,0,86,0],[85,0,87,0],[86,0,88,0],[87,0,89,0],[88,4,90,4,"uri"],[88,7,90,7,"uri"],[88,8,90,7],[88,10,90,10],[89,6,91,8],[89,12,91,14,"schema"],[89,18,91,20],[89,21,91,23],[89,25,91,27],[89,26,91,28,"opts"],[89,30,91,32],[89,31,91,33,"secure"],[89,37,91,39],[89,40,91,42],[89,45,91,47],[89,48,91,50],[89,52,91,54],[90,6,92,8],[90,12,92,14,"query"],[90,17,92,19],[90,20,92,22],[90,24,92,26],[90,25,92,27,"query"],[90,30,92,32],[90,34,92,36],[90,35,92,37],[90,36,92,38],[91,6,93,8],[92,6,94,8],[92,10,94,12],[92,14,94,16],[92,15,94,17,"opts"],[92,19,94,21],[92,20,94,22,"timestampRequests"],[92,37,94,39],[92,39,94,41],[93,8,95,12,"query"],[93,13,95,17],[93,14,95,18],[93,18,95,22],[93,19,95,23,"opts"],[93,23,95,27],[93,24,95,28,"timestampParam"],[93,38,95,42],[93,39,95,43],[93,42,95,46],[93,46,95,46,"randomString"],[93,64,95,58],[93,66,95,59],[93,67,95,60],[94,6,96,8],[95,6,97,8],[96,6,98,8],[96,10,98,12],[96,11,98,13],[96,15,98,17],[96,16,98,18,"supportsBinary"],[96,30,98,32],[96,32,98,34],[97,8,99,12,"query"],[97,13,99,17],[97,14,99,18,"b64"],[97,17,99,21],[97,20,99,24],[97,21,99,25],[98,6,100,8],[99,6,101,8],[99,13,101,15],[99,17,101,19],[99,18,101,20,"createUri"],[99,27,101,29],[99,28,101,30,"schema"],[99,34,101,36],[99,36,101,38,"query"],[99,41,101,43],[99,42,101,44],[100,4,102,4],[101,2,103,0],[102,2,103,1,"exports"],[102,9,103,1],[102,10,103,1,"BaseWS"],[102,16,103,1],[102,19,103,1,"BaseWS"],[102,25,103,1],[103,2,104,0],[103,8,104,6,"WebSocketCtor"],[103,21,104,19],[103,24,104,22,"globalThis"],[103,51,104,32],[103,52,104,33,"WebSocket"],[103,61,104,42],[103,65,104,46,"globalThis"],[103,92,104,56],[103,93,104,57,"MozWebSocket"],[103,105,104,69],[104,2,105,0],[105,0,106,0],[106,0,107,0],[107,0,108,0],[108,0,109,0],[109,0,110,0],[110,0,111,0],[111,0,112,0],[112,0,113,0],[113,2,114,7],[113,8,114,13,"WS"],[113,10,114,15],[113,19,114,24,"BaseWS"],[113,25,114,30],[113,26,114,31],[114,4,115,4,"createSocket"],[114,16,115,16,"createSocket"],[114,17,115,17,"uri"],[114,20,115,20],[114,22,115,22,"protocols"],[114,31,115,31],[114,33,115,33,"opts"],[114,37,115,37],[114,39,115,39],[115,6,116,8],[115,13,116,15],[115,14,116,16,"isReactNative"],[115,27,116,29],[115,30,117,14,"protocols"],[115,39,117,23],[115,42,118,18],[115,46,118,22,"WebSocketCtor"],[115,59,118,35],[115,60,118,36,"uri"],[115,63,118,39],[115,65,118,41,"protocols"],[115,74,118,50],[115,75,118,51],[115,78,119,18],[115,82,119,22,"WebSocketCtor"],[115,95,119,35],[115,96,119,36,"uri"],[115,99,119,39],[115,100,119,40],[115,103,120,14],[115,107,120,18,"WebSocketCtor"],[115,120,120,31],[115,121,120,32,"uri"],[115,124,120,35],[115,126,120,37,"protocols"],[115,135,120,46],[115,137,120,48,"opts"],[115,141,120,52],[115,142,120,53],[116,4,121,4],[117,4,122,4,"doWrite"],[117,11,122,11,"doWrite"],[117,12,122,12,"_packet"],[117,19,122,19],[117,21,122,21,"data"],[117,25,122,25],[117,27,122,27],[118,6,123,8],[118,10,123,12],[118,11,123,13,"ws"],[118,13,123,15],[118,14,123,16,"send"],[118,18,123,20],[118,19,123,21,"data"],[118,23,123,25],[118,24,123,26],[119,4,124,4],[120,2,125,0],[121,2,125,1,"exports"],[121,9,125,1],[121,10,125,1,"WS"],[121,12,125,1],[121,15,125,1,"WS"],[121,17,125,1],[122,0,125,1],[122,3]],"functionMap":{"names":["<global>","BaseWS","BaseWS#get__name","BaseWS#doOpen","BaseWS#addEventListeners","ws.onopen","ws.onclose","ws.onmessage","ws.onerror","BaseWS#write","encodePacket$argument_2","nextTick$argument_0","BaseWS#doClose","BaseWS#uri","WS","WS#createSocket","WS#doWrite"],"mappings":"AAA;OCQ;ICC;KDE;IEC;KFkB;IGM;yBCC;SDK;0BEC;UFG;4BGC,4BH;0BIC,yCJ;KHC;IQC;sDCO;6BCY;qBDG;aDE;KRE;IWC;8BJE,SI;KXI;IYM;KZY;CDC;OcW;ICC;KDM;IEC;KFE;CdC"}},"type":"js/module"}]}